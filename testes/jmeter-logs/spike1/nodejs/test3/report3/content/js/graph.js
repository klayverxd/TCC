/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 568.0, "series": [{"data": [[0.0, 16.0], [0.1, 17.0], [0.2, 17.0], [0.3, 17.0], [0.4, 18.0], [0.5, 18.0], [0.6, 18.0], [0.7, 18.0], [0.8, 18.0], [0.9, 18.0], [1.0, 18.0], [1.1, 18.0], [1.2, 18.0], [1.3, 18.0], [1.4, 19.0], [1.5, 19.0], [1.6, 19.0], [1.7, 19.0], [1.8, 19.0], [1.9, 19.0], [2.0, 19.0], [2.1, 19.0], [2.2, 19.0], [2.3, 19.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 19.0], [3.1, 19.0], [3.2, 19.0], [3.3, 19.0], [3.4, 19.0], [3.5, 19.0], [3.6, 19.0], [3.7, 20.0], [3.8, 20.0], [3.9, 20.0], [4.0, 20.0], [4.1, 20.0], [4.2, 20.0], [4.3, 20.0], [4.4, 20.0], [4.5, 20.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 20.0], [7.2, 20.0], [7.3, 20.0], [7.4, 20.0], [7.5, 20.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 20.0], [10.0, 20.0], [10.1, 20.0], [10.2, 20.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 20.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 20.0], [11.4, 20.0], [11.5, 20.0], [11.6, 20.0], [11.7, 20.0], [11.8, 20.0], [11.9, 20.0], [12.0, 20.0], [12.1, 20.0], [12.2, 20.0], [12.3, 20.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 20.0], [12.8, 20.0], [12.9, 20.0], [13.0, 20.0], [13.1, 20.0], [13.2, 20.0], [13.3, 20.0], [13.4, 20.0], [13.5, 20.0], [13.6, 20.0], [13.7, 20.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 20.0], [14.3, 20.0], [14.4, 20.0], [14.5, 20.0], [14.6, 20.0], [14.7, 20.0], [14.8, 20.0], [14.9, 20.0], [15.0, 20.0], [15.1, 20.0], [15.2, 20.0], [15.3, 20.0], [15.4, 20.0], [15.5, 20.0], [15.6, 20.0], [15.7, 20.0], [15.8, 20.0], [15.9, 20.0], [16.0, 20.0], [16.1, 20.0], [16.2, 20.0], [16.3, 20.0], [16.4, 20.0], [16.5, 20.0], [16.6, 20.0], [16.7, 21.0], [16.8, 21.0], [16.9, 21.0], [17.0, 21.0], [17.1, 21.0], [17.2, 21.0], [17.3, 21.0], [17.4, 21.0], [17.5, 21.0], [17.6, 21.0], [17.7, 21.0], [17.8, 21.0], [17.9, 21.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 21.0], [18.4, 21.0], [18.5, 21.0], [18.6, 21.0], [18.7, 21.0], [18.8, 21.0], [18.9, 21.0], [19.0, 21.0], [19.1, 21.0], [19.2, 21.0], [19.3, 21.0], [19.4, 21.0], [19.5, 21.0], [19.6, 21.0], [19.7, 21.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 21.0], [20.3, 21.0], [20.4, 21.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 21.0], [22.0, 21.0], [22.1, 21.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 21.0], [23.9, 21.0], [24.0, 21.0], [24.1, 21.0], [24.2, 21.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 22.0], [33.2, 22.0], [33.3, 22.0], [33.4, 23.0], [33.5, 23.0], [33.6, 23.0], [33.7, 23.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 23.0], [34.3, 23.0], [34.4, 23.0], [34.5, 23.0], [34.6, 23.0], [34.7, 24.0], [34.8, 24.0], [34.9, 24.0], [35.0, 24.0], [35.1, 25.0], [35.2, 28.0], [35.3, 39.0], [35.4, 39.0], [35.5, 39.0], [35.6, 39.0], [35.7, 39.0], [35.8, 39.0], [35.9, 39.0], [36.0, 39.0], [36.1, 39.0], [36.2, 39.0], [36.3, 40.0], [36.4, 40.0], [36.5, 40.0], [36.6, 40.0], [36.7, 40.0], [36.8, 40.0], [36.9, 40.0], [37.0, 40.0], [37.1, 40.0], [37.2, 40.0], [37.3, 40.0], [37.4, 40.0], [37.5, 40.0], [37.6, 40.0], [37.7, 40.0], [37.8, 40.0], [37.9, 40.0], [38.0, 40.0], [38.1, 40.0], [38.2, 40.0], [38.3, 40.0], [38.4, 40.0], [38.5, 40.0], [38.6, 40.0], [38.7, 40.0], [38.8, 40.0], [38.9, 40.0], [39.0, 40.0], [39.1, 40.0], [39.2, 40.0], [39.3, 40.0], [39.4, 40.0], [39.5, 40.0], [39.6, 40.0], [39.7, 40.0], [39.8, 40.0], [39.9, 40.0], [40.0, 40.0], [40.1, 40.0], [40.2, 40.0], [40.3, 40.0], [40.4, 40.0], [40.5, 40.0], [40.6, 40.0], [40.7, 40.0], [40.8, 40.0], [40.9, 40.0], [41.0, 40.0], [41.1, 40.0], [41.2, 40.0], [41.3, 41.0], [41.4, 41.0], [41.5, 41.0], [41.6, 41.0], [41.7, 41.0], [41.8, 41.0], [41.9, 41.0], [42.0, 41.0], [42.1, 41.0], [42.2, 41.0], [42.3, 41.0], [42.4, 41.0], [42.5, 41.0], [42.6, 41.0], [42.7, 41.0], [42.8, 41.0], [42.9, 41.0], [43.0, 41.0], [43.1, 41.0], [43.2, 41.0], [43.3, 41.0], [43.4, 41.0], [43.5, 41.0], [43.6, 41.0], [43.7, 41.0], [43.8, 41.0], [43.9, 41.0], [44.0, 41.0], [44.1, 41.0], [44.2, 41.0], [44.3, 41.0], [44.4, 41.0], [44.5, 41.0], [44.6, 41.0], [44.7, 41.0], [44.8, 41.0], [44.9, 41.0], [45.0, 41.0], [45.1, 41.0], [45.2, 41.0], [45.3, 41.0], [45.4, 41.0], [45.5, 41.0], [45.6, 41.0], [45.7, 41.0], [45.8, 41.0], [45.9, 41.0], [46.0, 41.0], [46.1, 41.0], [46.2, 41.0], [46.3, 41.0], [46.4, 41.0], [46.5, 41.0], [46.6, 41.0], [46.7, 41.0], [46.8, 41.0], [46.9, 41.0], [47.0, 41.0], [47.1, 41.0], [47.2, 41.0], [47.3, 41.0], [47.4, 41.0], [47.5, 41.0], [47.6, 41.0], [47.7, 41.0], [47.8, 41.0], [47.9, 41.0], [48.0, 41.0], [48.1, 41.0], [48.2, 41.0], [48.3, 41.0], [48.4, 41.0], [48.5, 41.0], [48.6, 41.0], [48.7, 41.0], [48.8, 41.0], [48.9, 41.0], [49.0, 41.0], [49.1, 41.0], [49.2, 41.0], [49.3, 41.0], [49.4, 41.0], [49.5, 41.0], [49.6, 41.0], [49.7, 41.0], [49.8, 41.0], [49.9, 41.0], [50.0, 41.0], [50.1, 41.0], [50.2, 41.0], [50.3, 41.0], [50.4, 41.0], [50.5, 41.0], [50.6, 41.0], [50.7, 41.0], [50.8, 41.0], [50.9, 41.0], [51.0, 41.0], [51.1, 41.0], [51.2, 41.0], [51.3, 41.0], [51.4, 42.0], [51.5, 42.0], [51.6, 42.0], [51.7, 42.0], [51.8, 42.0], [51.9, 42.0], [52.0, 42.0], [52.1, 42.0], [52.2, 42.0], [52.3, 42.0], [52.4, 42.0], [52.5, 42.0], [52.6, 42.0], [52.7, 42.0], [52.8, 42.0], [52.9, 42.0], [53.0, 42.0], [53.1, 42.0], [53.2, 42.0], [53.3, 42.0], [53.4, 42.0], [53.5, 42.0], [53.6, 42.0], [53.7, 42.0], [53.8, 42.0], [53.9, 42.0], [54.0, 42.0], [54.1, 42.0], [54.2, 42.0], [54.3, 42.0], [54.4, 42.0], [54.5, 42.0], [54.6, 42.0], [54.7, 42.0], [54.8, 42.0], [54.9, 42.0], [55.0, 42.0], [55.1, 42.0], [55.2, 42.0], [55.3, 42.0], [55.4, 42.0], [55.5, 42.0], [55.6, 42.0], [55.7, 42.0], [55.8, 42.0], [55.9, 42.0], [56.0, 42.0], [56.1, 42.0], [56.2, 42.0], [56.3, 42.0], [56.4, 42.0], [56.5, 42.0], [56.6, 42.0], [56.7, 42.0], [56.8, 42.0], [56.9, 42.0], [57.0, 42.0], [57.1, 42.0], [57.2, 42.0], [57.3, 42.0], [57.4, 42.0], [57.5, 42.0], [57.6, 42.0], [57.7, 42.0], [57.8, 42.0], [57.9, 42.0], [58.0, 42.0], [58.1, 42.0], [58.2, 42.0], [58.3, 42.0], [58.4, 42.0], [58.5, 42.0], [58.6, 42.0], [58.7, 42.0], [58.8, 42.0], [58.9, 42.0], [59.0, 42.0], [59.1, 42.0], [59.2, 42.0], [59.3, 42.0], [59.4, 42.0], [59.5, 42.0], [59.6, 42.0], [59.7, 42.0], [59.8, 42.0], [59.9, 42.0], [60.0, 42.0], [60.1, 42.0], [60.2, 42.0], [60.3, 42.0], [60.4, 42.0], [60.5, 42.0], [60.6, 42.0], [60.7, 42.0], [60.8, 42.0], [60.9, 42.0], [61.0, 42.0], [61.1, 42.0], [61.2, 42.0], [61.3, 42.0], [61.4, 42.0], [61.5, 42.0], [61.6, 42.0], [61.7, 43.0], [61.8, 43.0], [61.9, 43.0], [62.0, 43.0], [62.1, 43.0], [62.2, 43.0], [62.3, 43.0], [62.4, 43.0], [62.5, 43.0], [62.6, 43.0], [62.7, 43.0], [62.8, 43.0], [62.9, 43.0], [63.0, 43.0], [63.1, 43.0], [63.2, 43.0], [63.3, 43.0], [63.4, 43.0], [63.5, 43.0], [63.6, 43.0], [63.7, 43.0], [63.8, 43.0], [63.9, 43.0], [64.0, 43.0], [64.1, 43.0], [64.2, 43.0], [64.3, 43.0], [64.4, 43.0], [64.5, 43.0], [64.6, 43.0], [64.7, 43.0], [64.8, 43.0], [64.9, 43.0], [65.0, 43.0], [65.1, 43.0], [65.2, 43.0], [65.3, 43.0], [65.4, 43.0], [65.5, 43.0], [65.6, 43.0], [65.7, 43.0], [65.8, 43.0], [65.9, 43.0], [66.0, 43.0], [66.1, 43.0], [66.2, 43.0], [66.3, 43.0], [66.4, 43.0], [66.5, 43.0], [66.6, 43.0], [66.7, 43.0], [66.8, 43.0], [66.9, 43.0], [67.0, 43.0], [67.1, 43.0], [67.2, 43.0], [67.3, 43.0], [67.4, 43.0], [67.5, 43.0], [67.6, 43.0], [67.7, 43.0], [67.8, 44.0], [67.9, 44.0], [68.0, 44.0], [68.1, 44.0], [68.2, 44.0], [68.3, 44.0], [68.4, 44.0], [68.5, 44.0], [68.6, 44.0], [68.7, 44.0], [68.8, 44.0], [68.9, 44.0], [69.0, 44.0], [69.1, 44.0], [69.2, 44.0], [69.3, 44.0], [69.4, 44.0], [69.5, 44.0], [69.6, 44.0], [69.7, 44.0], [69.8, 45.0], [69.9, 45.0], [70.0, 45.0], [70.1, 45.0], [70.2, 45.0], [70.3, 45.0], [70.4, 46.0], [70.5, 46.0], [70.6, 47.0], [70.7, 48.0], [70.8, 95.0], [70.9, 221.0], [71.0, 405.0], [71.1, 408.0], [71.2, 409.0], [71.3, 409.0], [71.4, 410.0], [71.5, 410.0], [71.6, 410.0], [71.7, 410.0], [71.8, 410.0], [71.9, 411.0], [72.0, 411.0], [72.1, 411.0], [72.2, 411.0], [72.3, 412.0], [72.4, 412.0], [72.5, 412.0], [72.6, 412.0], [72.7, 413.0], [72.8, 413.0], [72.9, 413.0], [73.0, 413.0], [73.1, 413.0], [73.2, 413.0], [73.3, 413.0], [73.4, 414.0], [73.5, 414.0], [73.6, 414.0], [73.7, 414.0], [73.8, 414.0], [73.9, 414.0], [74.0, 414.0], [74.1, 414.0], [74.2, 415.0], [74.3, 415.0], [74.4, 415.0], [74.5, 415.0], [74.6, 415.0], [74.7, 415.0], [74.8, 415.0], [74.9, 415.0], [75.0, 416.0], [75.1, 416.0], [75.2, 416.0], [75.3, 416.0], [75.4, 416.0], [75.5, 417.0], [75.6, 417.0], [75.7, 417.0], [75.8, 417.0], [75.9, 417.0], [76.0, 417.0], [76.1, 418.0], [76.2, 418.0], [76.3, 418.0], [76.4, 418.0], [76.5, 418.0], [76.6, 418.0], [76.7, 418.0], [76.8, 418.0], [76.9, 419.0], [77.0, 419.0], [77.1, 419.0], [77.2, 419.0], [77.3, 419.0], [77.4, 419.0], [77.5, 419.0], [77.6, 419.0], [77.7, 419.0], [77.8, 419.0], [77.9, 419.0], [78.0, 420.0], [78.1, 420.0], [78.2, 420.0], [78.3, 420.0], [78.4, 420.0], [78.5, 420.0], [78.6, 420.0], [78.7, 420.0], [78.8, 420.0], [78.9, 420.0], [79.0, 420.0], [79.1, 420.0], [79.2, 421.0], [79.3, 421.0], [79.4, 421.0], [79.5, 421.0], [79.6, 421.0], [79.7, 421.0], [79.8, 421.0], [79.9, 421.0], [80.0, 421.0], [80.1, 421.0], [80.2, 421.0], [80.3, 421.0], [80.4, 422.0], [80.5, 422.0], [80.6, 422.0], [80.7, 422.0], [80.8, 422.0], [80.9, 422.0], [81.0, 422.0], [81.1, 422.0], [81.2, 422.0], [81.3, 422.0], [81.4, 423.0], [81.5, 423.0], [81.6, 423.0], [81.7, 423.0], [81.8, 423.0], [81.9, 423.0], [82.0, 423.0], [82.1, 423.0], [82.2, 423.0], [82.3, 423.0], [82.4, 424.0], [82.5, 424.0], [82.6, 424.0], [82.7, 424.0], [82.8, 424.0], [82.9, 424.0], [83.0, 424.0], [83.1, 424.0], [83.2, 424.0], [83.3, 424.0], [83.4, 424.0], [83.5, 425.0], [83.6, 425.0], [83.7, 425.0], [83.8, 425.0], [83.9, 425.0], [84.0, 425.0], [84.1, 425.0], [84.2, 425.0], [84.3, 425.0], [84.4, 425.0], [84.5, 425.0], [84.6, 425.0], [84.7, 425.0], [84.8, 425.0], [84.9, 425.0], [85.0, 425.0], [85.1, 426.0], [85.2, 426.0], [85.3, 426.0], [85.4, 426.0], [85.5, 426.0], [85.6, 426.0], [85.7, 426.0], [85.8, 426.0], [85.9, 426.0], [86.0, 426.0], [86.1, 426.0], [86.2, 426.0], [86.3, 426.0], [86.4, 426.0], [86.5, 426.0], [86.6, 426.0], [86.7, 426.0], [86.8, 426.0], [86.9, 427.0], [87.0, 427.0], [87.1, 427.0], [87.2, 427.0], [87.3, 427.0], [87.4, 427.0], [87.5, 427.0], [87.6, 427.0], [87.7, 427.0], [87.8, 427.0], [87.9, 427.0], [88.0, 427.0], [88.1, 427.0], [88.2, 427.0], [88.3, 427.0], [88.4, 427.0], [88.5, 428.0], [88.6, 428.0], [88.7, 428.0], [88.8, 428.0], [88.9, 428.0], [89.0, 428.0], [89.1, 428.0], [89.2, 428.0], [89.3, 428.0], [89.4, 428.0], [89.5, 428.0], [89.6, 428.0], [89.7, 428.0], [89.8, 428.0], [89.9, 429.0], [90.0, 429.0], [90.1, 429.0], [90.2, 429.0], [90.3, 429.0], [90.4, 429.0], [90.5, 429.0], [90.6, 429.0], [90.7, 429.0], [90.8, 429.0], [90.9, 429.0], [91.0, 429.0], [91.1, 429.0], [91.2, 429.0], [91.3, 429.0], [91.4, 429.0], [91.5, 429.0], [91.6, 429.0], [91.7, 430.0], [91.8, 430.0], [91.9, 430.0], [92.0, 430.0], [92.1, 430.0], [92.2, 430.0], [92.3, 430.0], [92.4, 430.0], [92.5, 430.0], [92.6, 430.0], [92.7, 430.0], [92.8, 430.0], [92.9, 430.0], [93.0, 430.0], [93.1, 430.0], [93.2, 430.0], [93.3, 430.0], [93.4, 431.0], [93.5, 431.0], [93.6, 431.0], [93.7, 431.0], [93.8, 431.0], [93.9, 431.0], [94.0, 431.0], [94.1, 431.0], [94.2, 431.0], [94.3, 431.0], [94.4, 431.0], [94.5, 431.0], [94.6, 431.0], [94.7, 431.0], [94.8, 432.0], [94.9, 432.0], [95.0, 432.0], [95.1, 432.0], [95.2, 432.0], [95.3, 432.0], [95.4, 432.0], [95.5, 432.0], [95.6, 432.0], [95.7, 433.0], [95.8, 433.0], [95.9, 433.0], [96.0, 433.0], [96.1, 433.0], [96.2, 433.0], [96.3, 433.0], [96.4, 434.0], [96.5, 434.0], [96.6, 434.0], [96.7, 434.0], [96.8, 434.0], [96.9, 434.0], [97.0, 434.0], [97.1, 434.0], [97.2, 434.0], [97.3, 435.0], [97.4, 435.0], [97.5, 435.0], [97.6, 435.0], [97.7, 435.0], [97.8, 436.0], [97.9, 436.0], [98.0, 436.0], [98.1, 437.0], [98.2, 437.0], [98.3, 437.0], [98.4, 437.0], [98.5, 438.0], [98.6, 438.0], [98.7, 439.0], [98.8, 546.0], [98.9, 549.0], [99.0, 551.0], [99.1, 553.0], [99.2, 556.0], [99.3, 558.0], [99.4, 559.0], [99.5, 560.0], [99.6, 560.0], [99.7, 561.0], [99.8, 564.0], [99.9, 565.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[0.0, 4.0], [0.1, 7.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 10.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 12.0], [5.7, 12.0], [5.8, 12.0], [5.9, 12.0], [6.0, 12.0], [6.1, 12.0], [6.2, 12.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 12.0], [6.9, 12.0], [7.0, 12.0], [7.1, 12.0], [7.2, 12.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 15.0], [10.7, 15.0], [10.8, 15.0], [10.9, 15.0], [11.0, 15.0], [11.1, 15.0], [11.2, 15.0], [11.3, 15.0], [11.4, 15.0], [11.5, 15.0], [11.6, 15.0], [11.7, 15.0], [11.8, 15.0], [11.9, 15.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 16.0], [12.5, 16.0], [12.6, 16.0], [12.7, 16.0], [12.8, 16.0], [12.9, 16.0], [13.0, 16.0], [13.1, 16.0], [13.2, 16.0], [13.3, 16.0], [13.4, 16.0], [13.5, 16.0], [13.6, 16.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 17.0], [14.4, 17.0], [14.5, 17.0], [14.6, 17.0], [14.7, 17.0], [14.8, 17.0], [14.9, 17.0], [15.0, 17.0], [15.1, 17.0], [15.2, 17.0], [15.3, 17.0], [15.4, 17.0], [15.5, 17.0], [15.6, 17.0], [15.7, 17.0], [15.8, 17.0], [15.9, 17.0], [16.0, 17.0], [16.1, 17.0], [16.2, 18.0], [16.3, 18.0], [16.4, 18.0], [16.5, 18.0], [16.6, 18.0], [16.7, 18.0], [16.8, 18.0], [16.9, 18.0], [17.0, 18.0], [17.1, 18.0], [17.2, 18.0], [17.3, 18.0], [17.4, 18.0], [17.5, 18.0], [17.6, 18.0], [17.7, 18.0], [17.8, 18.0], [17.9, 18.0], [18.0, 18.0], [18.1, 18.0], [18.2, 18.0], [18.3, 19.0], [18.4, 19.0], [18.5, 19.0], [18.6, 19.0], [18.7, 19.0], [18.8, 19.0], [18.9, 19.0], [19.0, 19.0], [19.1, 19.0], [19.2, 19.0], [19.3, 19.0], [19.4, 19.0], [19.5, 19.0], [19.6, 19.0], [19.7, 19.0], [19.8, 19.0], [19.9, 19.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 19.0], [21.2, 19.0], [21.3, 19.0], [21.4, 20.0], [21.5, 20.0], [21.6, 20.0], [21.7, 20.0], [21.8, 20.0], [21.9, 20.0], [22.0, 20.0], [22.1, 20.0], [22.2, 20.0], [22.3, 20.0], [22.4, 20.0], [22.5, 20.0], [22.6, 20.0], [22.7, 20.0], [22.8, 20.0], [22.9, 20.0], [23.0, 20.0], [23.1, 20.0], [23.2, 20.0], [23.3, 20.0], [23.4, 20.0], [23.5, 20.0], [23.6, 20.0], [23.7, 20.0], [23.8, 20.0], [23.9, 20.0], [24.0, 20.0], [24.1, 20.0], [24.2, 20.0], [24.3, 20.0], [24.4, 20.0], [24.5, 20.0], [24.6, 20.0], [24.7, 20.0], [24.8, 20.0], [24.9, 20.0], [25.0, 20.0], [25.1, 20.0], [25.2, 20.0], [25.3, 20.0], [25.4, 20.0], [25.5, 20.0], [25.6, 20.0], [25.7, 20.0], [25.8, 20.0], [25.9, 20.0], [26.0, 20.0], [26.1, 20.0], [26.2, 20.0], [26.3, 20.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 20.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 21.0], [29.1, 21.0], [29.2, 21.0], [29.3, 21.0], [29.4, 21.0], [29.5, 21.0], [29.6, 21.0], [29.7, 21.0], [29.8, 21.0], [29.9, 21.0], [30.0, 21.0], [30.1, 21.0], [30.2, 21.0], [30.3, 21.0], [30.4, 21.0], [30.5, 21.0], [30.6, 21.0], [30.7, 21.0], [30.8, 21.0], [30.9, 21.0], [31.0, 21.0], [31.1, 21.0], [31.2, 21.0], [31.3, 21.0], [31.4, 21.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 22.0], [33.2, 22.0], [33.3, 22.0], [33.4, 22.0], [33.5, 22.0], [33.6, 22.0], [33.7, 22.0], [33.8, 22.0], [33.9, 22.0], [34.0, 22.0], [34.1, 22.0], [34.2, 22.0], [34.3, 22.0], [34.4, 23.0], [34.5, 23.0], [34.6, 23.0], [34.7, 23.0], [34.8, 23.0], [34.9, 23.0], [35.0, 23.0], [35.1, 23.0], [35.2, 23.0], [35.3, 23.0], [35.4, 23.0], [35.5, 23.0], [35.6, 23.0], [35.7, 23.0], [35.8, 23.0], [35.9, 23.0], [36.0, 23.0], [36.1, 23.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 23.0], [36.6, 24.0], [36.7, 24.0], [36.8, 24.0], [36.9, 24.0], [37.0, 24.0], [37.1, 24.0], [37.2, 24.0], [37.3, 24.0], [37.4, 24.0], [37.5, 24.0], [37.6, 24.0], [37.7, 24.0], [37.8, 24.0], [37.9, 24.0], [38.0, 24.0], [38.1, 24.0], [38.2, 24.0], [38.3, 24.0], [38.4, 24.0], [38.5, 25.0], [38.6, 25.0], [38.7, 25.0], [38.8, 25.0], [38.9, 25.0], [39.0, 25.0], [39.1, 25.0], [39.2, 25.0], [39.3, 25.0], [39.4, 25.0], [39.5, 25.0], [39.6, 25.0], [39.7, 25.0], [39.8, 25.0], [39.9, 25.0], [40.0, 25.0], [40.1, 25.0], [40.2, 26.0], [40.3, 26.0], [40.4, 26.0], [40.5, 26.0], [40.6, 26.0], [40.7, 26.0], [40.8, 26.0], [40.9, 26.0], [41.0, 26.0], [41.1, 26.0], [41.2, 26.0], [41.3, 26.0], [41.4, 26.0], [41.5, 26.0], [41.6, 26.0], [41.7, 27.0], [41.8, 27.0], [41.9, 27.0], [42.0, 27.0], [42.1, 27.0], [42.2, 27.0], [42.3, 27.0], [42.4, 27.0], [42.5, 27.0], [42.6, 27.0], [42.7, 27.0], [42.8, 27.0], [42.9, 28.0], [43.0, 28.0], [43.1, 28.0], [43.2, 28.0], [43.3, 28.0], [43.4, 28.0], [43.5, 28.0], [43.6, 28.0], [43.7, 28.0], [43.8, 28.0], [43.9, 28.0], [44.0, 29.0], [44.1, 29.0], [44.2, 29.0], [44.3, 29.0], [44.4, 29.0], [44.5, 29.0], [44.6, 29.0], [44.7, 29.0], [44.8, 29.0], [44.9, 29.0], [45.0, 30.0], [45.1, 30.0], [45.2, 30.0], [45.3, 30.0], [45.4, 30.0], [45.5, 30.0], [45.6, 30.0], [45.7, 30.0], [45.8, 30.0], [45.9, 31.0], [46.0, 31.0], [46.1, 31.0], [46.2, 31.0], [46.3, 31.0], [46.4, 31.0], [46.5, 31.0], [46.6, 31.0], [46.7, 31.0], [46.8, 32.0], [46.9, 32.0], [47.0, 32.0], [47.1, 32.0], [47.2, 32.0], [47.3, 32.0], [47.4, 32.0], [47.5, 32.0], [47.6, 32.0], [47.7, 33.0], [47.8, 33.0], [47.9, 33.0], [48.0, 33.0], [48.1, 33.0], [48.2, 33.0], [48.3, 33.0], [48.4, 33.0], [48.5, 33.0], [48.6, 34.0], [48.7, 34.0], [48.8, 34.0], [48.9, 34.0], [49.0, 34.0], [49.1, 34.0], [49.2, 34.0], [49.3, 34.0], [49.4, 35.0], [49.5, 35.0], [49.6, 35.0], [49.7, 35.0], [49.8, 35.0], [49.9, 35.0], [50.0, 35.0], [50.1, 35.0], [50.2, 35.0], [50.3, 36.0], [50.4, 36.0], [50.5, 36.0], [50.6, 36.0], [50.7, 36.0], [50.8, 36.0], [50.9, 36.0], [51.0, 36.0], [51.1, 37.0], [51.2, 37.0], [51.3, 37.0], [51.4, 37.0], [51.5, 37.0], [51.6, 37.0], [51.7, 37.0], [51.8, 37.0], [51.9, 37.0], [52.0, 38.0], [52.1, 38.0], [52.2, 38.0], [52.3, 38.0], [52.4, 38.0], [52.5, 38.0], [52.6, 38.0], [52.7, 38.0], [52.8, 38.0], [52.9, 38.0], [53.0, 39.0], [53.1, 39.0], [53.2, 39.0], [53.3, 39.0], [53.4, 39.0], [53.5, 39.0], [53.6, 39.0], [53.7, 39.0], [53.8, 39.0], [53.9, 39.0], [54.0, 39.0], [54.1, 39.0], [54.2, 39.0], [54.3, 39.0], [54.4, 39.0], [54.5, 39.0], [54.6, 39.0], [54.7, 39.0], [54.8, 39.0], [54.9, 39.0], [55.0, 39.0], [55.1, 39.0], [55.2, 40.0], [55.3, 40.0], [55.4, 40.0], [55.5, 40.0], [55.6, 40.0], [55.7, 40.0], [55.8, 40.0], [55.9, 40.0], [56.0, 40.0], [56.1, 40.0], [56.2, 40.0], [56.3, 40.0], [56.4, 40.0], [56.5, 40.0], [56.6, 40.0], [56.7, 40.0], [56.8, 40.0], [56.9, 40.0], [57.0, 40.0], [57.1, 40.0], [57.2, 40.0], [57.3, 40.0], [57.4, 40.0], [57.5, 40.0], [57.6, 40.0], [57.7, 40.0], [57.8, 41.0], [57.9, 41.0], [58.0, 41.0], [58.1, 41.0], [58.2, 41.0], [58.3, 41.0], [58.4, 41.0], [58.5, 41.0], [58.6, 41.0], [58.7, 41.0], [58.8, 41.0], [58.9, 41.0], [59.0, 41.0], [59.1, 41.0], [59.2, 41.0], [59.3, 41.0], [59.4, 41.0], [59.5, 41.0], [59.6, 41.0], [59.7, 41.0], [59.8, 41.0], [59.9, 41.0], [60.0, 41.0], [60.1, 41.0], [60.2, 41.0], [60.3, 41.0], [60.4, 41.0], [60.5, 41.0], [60.6, 42.0], [60.7, 42.0], [60.8, 42.0], [60.9, 42.0], [61.0, 42.0], [61.1, 42.0], [61.2, 42.0], [61.3, 42.0], [61.4, 42.0], [61.5, 42.0], [61.6, 42.0], [61.7, 42.0], [61.8, 42.0], [61.9, 42.0], [62.0, 42.0], [62.1, 42.0], [62.2, 42.0], [62.3, 42.0], [62.4, 42.0], [62.5, 43.0], [62.6, 43.0], [62.7, 43.0], [62.8, 43.0], [62.9, 43.0], [63.0, 43.0], [63.1, 43.0], [63.2, 43.0], [63.3, 43.0], [63.4, 43.0], [63.5, 43.0], [63.6, 43.0], [63.7, 43.0], [63.8, 43.0], [63.9, 44.0], [64.0, 44.0], [64.1, 44.0], [64.2, 44.0], [64.3, 44.0], [64.4, 44.0], [64.5, 44.0], [64.6, 44.0], [64.7, 45.0], [64.8, 45.0], [64.9, 45.0], [65.0, 45.0], [65.1, 45.0], [65.2, 45.0], [65.3, 45.0], [65.4, 46.0], [65.5, 46.0], [65.6, 46.0], [65.7, 46.0], [65.8, 46.0], [65.9, 46.0], [66.0, 46.0], [66.1, 46.0], [66.2, 47.0], [66.3, 47.0], [66.4, 47.0], [66.5, 47.0], [66.6, 47.0], [66.7, 47.0], [66.8, 48.0], [66.9, 48.0], [67.0, 48.0], [67.1, 48.0], [67.2, 48.0], [67.3, 48.0], [67.4, 49.0], [67.5, 49.0], [67.6, 49.0], [67.7, 49.0], [67.8, 50.0], [67.9, 50.0], [68.0, 50.0], [68.1, 51.0], [68.2, 51.0], [68.3, 51.0], [68.4, 51.0], [68.5, 52.0], [68.6, 52.0], [68.7, 52.0], [68.8, 53.0], [68.9, 53.0], [69.0, 54.0], [69.1, 55.0], [69.2, 55.0], [69.3, 56.0], [69.4, 57.0], [69.5, 58.0], [69.6, 61.0], [69.7, 65.0], [69.8, 86.0], [69.9, 112.0], [70.0, 140.0], [70.1, 149.0], [70.2, 152.0], [70.3, 154.0], [70.4, 156.0], [70.5, 157.0], [70.6, 159.0], [70.7, 160.0], [70.8, 162.0], [70.9, 163.0], [71.0, 164.0], [71.1, 165.0], [71.2, 167.0], [71.3, 167.0], [71.4, 168.0], [71.5, 169.0], [71.6, 170.0], [71.7, 171.0], [71.8, 171.0], [71.9, 172.0], [72.0, 173.0], [72.1, 174.0], [72.2, 175.0], [72.3, 175.0], [72.4, 176.0], [72.5, 177.0], [72.6, 178.0], [72.7, 178.0], [72.8, 179.0], [72.9, 180.0], [73.0, 181.0], [73.1, 182.0], [73.2, 183.0], [73.3, 184.0], [73.4, 184.0], [73.5, 185.0], [73.6, 186.0], [73.7, 187.0], [73.8, 188.0], [73.9, 188.0], [74.0, 189.0], [74.1, 190.0], [74.2, 191.0], [74.3, 191.0], [74.4, 192.0], [74.5, 193.0], [74.6, 194.0], [74.7, 195.0], [74.8, 195.0], [74.9, 196.0], [75.0, 197.0], [75.1, 198.0], [75.2, 198.0], [75.3, 199.0], [75.4, 200.0], [75.5, 201.0], [75.6, 202.0], [75.7, 202.0], [75.8, 203.0], [75.9, 204.0], [76.0, 205.0], [76.1, 205.0], [76.2, 206.0], [76.3, 207.0], [76.4, 208.0], [76.5, 209.0], [76.6, 209.0], [76.7, 210.0], [76.8, 211.0], [76.9, 212.0], [77.0, 213.0], [77.1, 214.0], [77.2, 214.0], [77.3, 215.0], [77.4, 216.0], [77.5, 217.0], [77.6, 218.0], [77.7, 218.0], [77.8, 219.0], [77.9, 220.0], [78.0, 221.0], [78.1, 222.0], [78.2, 223.0], [78.3, 223.0], [78.4, 224.0], [78.5, 225.0], [78.6, 226.0], [78.7, 226.0], [78.8, 227.0], [78.9, 228.0], [79.0, 229.0], [79.1, 230.0], [79.2, 231.0], [79.3, 231.0], [79.4, 232.0], [79.5, 233.0], [79.6, 234.0], [79.7, 235.0], [79.8, 235.0], [79.9, 236.0], [80.0, 237.0], [80.1, 238.0], [80.2, 239.0], [80.3, 240.0], [80.4, 240.0], [80.5, 241.0], [80.6, 242.0], [80.7, 243.0], [80.8, 244.0], [80.9, 245.0], [81.0, 245.0], [81.1, 246.0], [81.2, 247.0], [81.3, 247.0], [81.4, 248.0], [81.5, 249.0], [81.6, 250.0], [81.7, 251.0], [81.8, 251.0], [81.9, 252.0], [82.0, 253.0], [82.1, 254.0], [82.2, 255.0], [82.3, 256.0], [82.4, 256.0], [82.5, 257.0], [82.6, 258.0], [82.7, 259.0], [82.8, 259.0], [82.9, 260.0], [83.0, 261.0], [83.1, 262.0], [83.2, 263.0], [83.3, 263.0], [83.4, 264.0], [83.5, 265.0], [83.6, 266.0], [83.7, 266.0], [83.8, 267.0], [83.9, 268.0], [84.0, 269.0], [84.1, 270.0], [84.2, 270.0], [84.3, 271.0], [84.4, 272.0], [84.5, 273.0], [84.6, 274.0], [84.7, 274.0], [84.8, 275.0], [84.9, 276.0], [85.0, 277.0], [85.1, 278.0], [85.2, 278.0], [85.3, 279.0], [85.4, 280.0], [85.5, 281.0], [85.6, 282.0], [85.7, 283.0], [85.8, 284.0], [85.9, 285.0], [86.0, 286.0], [86.1, 286.0], [86.2, 287.0], [86.3, 288.0], [86.4, 289.0], [86.5, 290.0], [86.6, 290.0], [86.7, 291.0], [86.8, 292.0], [86.9, 293.0], [87.0, 294.0], [87.1, 295.0], [87.2, 295.0], [87.3, 296.0], [87.4, 297.0], [87.5, 298.0], [87.6, 299.0], [87.7, 299.0], [87.8, 300.0], [87.9, 301.0], [88.0, 302.0], [88.1, 302.0], [88.2, 303.0], [88.3, 304.0], [88.4, 305.0], [88.5, 306.0], [88.6, 307.0], [88.7, 308.0], [88.8, 308.0], [88.9, 309.0], [89.0, 310.0], [89.1, 311.0], [89.2, 312.0], [89.3, 313.0], [89.4, 314.0], [89.5, 315.0], [89.6, 315.0], [89.7, 316.0], [89.8, 317.0], [89.9, 318.0], [90.0, 319.0], [90.1, 320.0], [90.2, 321.0], [90.3, 321.0], [90.4, 322.0], [90.5, 323.0], [90.6, 324.0], [90.7, 325.0], [90.8, 326.0], [90.9, 326.0], [91.0, 327.0], [91.1, 328.0], [91.2, 329.0], [91.3, 330.0], [91.4, 331.0], [91.5, 332.0], [91.6, 333.0], [91.7, 333.0], [91.8, 334.0], [91.9, 335.0], [92.0, 336.0], [92.1, 337.0], [92.2, 338.0], [92.3, 339.0], [92.4, 339.0], [92.5, 340.0], [92.6, 341.0], [92.7, 342.0], [92.8, 343.0], [92.9, 343.0], [93.0, 344.0], [93.1, 345.0], [93.2, 346.0], [93.3, 347.0], [93.4, 348.0], [93.5, 348.0], [93.6, 349.0], [93.7, 350.0], [93.8, 351.0], [93.9, 352.0], [94.0, 353.0], [94.1, 354.0], [94.2, 354.0], [94.3, 355.0], [94.4, 356.0], [94.5, 357.0], [94.6, 358.0], [94.7, 359.0], [94.8, 360.0], [94.9, 361.0], [95.0, 362.0], [95.1, 363.0], [95.2, 363.0], [95.3, 364.0], [95.4, 365.0], [95.5, 366.0], [95.6, 367.0], [95.7, 368.0], [95.8, 369.0], [95.9, 370.0], [96.0, 371.0], [96.1, 372.0], [96.2, 373.0], [96.3, 373.0], [96.4, 374.0], [96.5, 375.0], [96.6, 376.0], [96.7, 377.0], [96.8, 378.0], [96.9, 379.0], [97.0, 380.0], [97.1, 380.0], [97.2, 381.0], [97.3, 382.0], [97.4, 383.0], [97.5, 384.0], [97.6, 385.0], [97.7, 386.0], [97.8, 387.0], [97.9, 388.0], [98.0, 389.0], [98.1, 389.0], [98.2, 390.0], [98.3, 391.0], [98.4, 392.0], [98.5, 393.0], [98.6, 395.0], [98.7, 395.0], [98.8, 396.0], [98.9, 397.0], [99.0, 399.0], [99.1, 402.0], [99.2, 411.0], [99.3, 425.0], [99.4, 434.0], [99.5, 442.0], [99.6, 450.0], [99.7, 468.0], [99.8, 485.0], [99.9, 503.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[0.0, 6.0], [0.1, 7.0], [0.2, 7.0], [0.3, 7.0], [0.4, 7.0], [0.5, 7.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 12.0], [7.1, 12.0], [7.2, 12.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 16.0], [15.3, 16.0], [15.4, 16.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 17.0], [15.9, 17.0], [16.0, 17.0], [16.1, 17.0], [16.2, 17.0], [16.3, 17.0], [16.4, 17.0], [16.5, 17.0], [16.6, 17.0], [16.7, 17.0], [16.8, 17.0], [16.9, 17.0], [17.0, 17.0], [17.1, 17.0], [17.2, 17.0], [17.3, 17.0], [17.4, 17.0], [17.5, 17.0], [17.6, 17.0], [17.7, 17.0], [17.8, 18.0], [17.9, 18.0], [18.0, 18.0], [18.1, 18.0], [18.2, 18.0], [18.3, 18.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 18.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 19.0], [19.9, 19.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 19.0], [21.2, 19.0], [21.3, 19.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 19.0], [22.3, 19.0], [22.4, 19.0], [22.5, 20.0], [22.6, 20.0], [22.7, 20.0], [22.8, 20.0], [22.9, 20.0], [23.0, 20.0], [23.1, 20.0], [23.2, 20.0], [23.3, 20.0], [23.4, 20.0], [23.5, 20.0], [23.6, 20.0], [23.7, 20.0], [23.8, 20.0], [23.9, 20.0], [24.0, 20.0], [24.1, 20.0], [24.2, 20.0], [24.3, 20.0], [24.4, 20.0], [24.5, 20.0], [24.6, 20.0], [24.7, 20.0], [24.8, 20.0], [24.9, 20.0], [25.0, 20.0], [25.1, 20.0], [25.2, 20.0], [25.3, 20.0], [25.4, 20.0], [25.5, 20.0], [25.6, 20.0], [25.7, 20.0], [25.8, 20.0], [25.9, 20.0], [26.0, 20.0], [26.1, 20.0], [26.2, 20.0], [26.3, 20.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 20.0], [26.8, 20.0], [26.9, 20.0], [27.0, 20.0], [27.1, 20.0], [27.2, 20.0], [27.3, 20.0], [27.4, 20.0], [27.5, 20.0], [27.6, 20.0], [27.7, 20.0], [27.8, 20.0], [27.9, 20.0], [28.0, 20.0], [28.1, 20.0], [28.2, 20.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 21.0], [29.1, 21.0], [29.2, 21.0], [29.3, 21.0], [29.4, 21.0], [29.5, 21.0], [29.6, 21.0], [29.7, 21.0], [29.8, 21.0], [29.9, 21.0], [30.0, 21.0], [30.1, 21.0], [30.2, 21.0], [30.3, 21.0], [30.4, 21.0], [30.5, 21.0], [30.6, 21.0], [30.7, 21.0], [30.8, 21.0], [30.9, 21.0], [31.0, 21.0], [31.1, 21.0], [31.2, 21.0], [31.3, 21.0], [31.4, 21.0], [31.5, 21.0], [31.6, 21.0], [31.7, 21.0], [31.8, 21.0], [31.9, 21.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 22.0], [33.0, 22.0], [33.1, 22.0], [33.2, 22.0], [33.3, 22.0], [33.4, 22.0], [33.5, 22.0], [33.6, 22.0], [33.7, 22.0], [33.8, 22.0], [33.9, 22.0], [34.0, 22.0], [34.1, 22.0], [34.2, 22.0], [34.3, 22.0], [34.4, 22.0], [34.5, 22.0], [34.6, 22.0], [34.7, 22.0], [34.8, 22.0], [34.9, 22.0], [35.0, 22.0], [35.1, 22.0], [35.2, 22.0], [35.3, 22.0], [35.4, 22.0], [35.5, 23.0], [35.6, 23.0], [35.7, 23.0], [35.8, 23.0], [35.9, 23.0], [36.0, 23.0], [36.1, 23.0], [36.2, 23.0], [36.3, 23.0], [36.4, 23.0], [36.5, 23.0], [36.6, 23.0], [36.7, 23.0], [36.8, 23.0], [36.9, 23.0], [37.0, 23.0], [37.1, 23.0], [37.2, 23.0], [37.3, 23.0], [37.4, 23.0], [37.5, 24.0], [37.6, 24.0], [37.7, 24.0], [37.8, 24.0], [37.9, 24.0], [38.0, 24.0], [38.1, 24.0], [38.2, 24.0], [38.3, 24.0], [38.4, 24.0], [38.5, 24.0], [38.6, 24.0], [38.7, 24.0], [38.8, 24.0], [38.9, 24.0], [39.0, 24.0], [39.1, 24.0], [39.2, 25.0], [39.3, 25.0], [39.4, 25.0], [39.5, 25.0], [39.6, 25.0], [39.7, 25.0], [39.8, 25.0], [39.9, 25.0], [40.0, 25.0], [40.1, 25.0], [40.2, 25.0], [40.3, 25.0], [40.4, 25.0], [40.5, 25.0], [40.6, 25.0], [40.7, 25.0], [40.8, 26.0], [40.9, 26.0], [41.0, 26.0], [41.1, 26.0], [41.2, 26.0], [41.3, 26.0], [41.4, 26.0], [41.5, 26.0], [41.6, 26.0], [41.7, 26.0], [41.8, 26.0], [41.9, 26.0], [42.0, 26.0], [42.1, 26.0], [42.2, 26.0], [42.3, 27.0], [42.4, 27.0], [42.5, 27.0], [42.6, 27.0], [42.7, 27.0], [42.8, 27.0], [42.9, 27.0], [43.0, 27.0], [43.1, 27.0], [43.2, 27.0], [43.3, 27.0], [43.4, 27.0], [43.5, 28.0], [43.6, 28.0], [43.7, 28.0], [43.8, 28.0], [43.9, 28.0], [44.0, 28.0], [44.1, 28.0], [44.2, 28.0], [44.3, 28.0], [44.4, 28.0], [44.5, 29.0], [44.6, 29.0], [44.7, 29.0], [44.8, 29.0], [44.9, 29.0], [45.0, 29.0], [45.1, 29.0], [45.2, 29.0], [45.3, 29.0], [45.4, 29.0], [45.5, 30.0], [45.6, 30.0], [45.7, 30.0], [45.8, 30.0], [45.9, 30.0], [46.0, 30.0], [46.1, 30.0], [46.2, 30.0], [46.3, 30.0], [46.4, 31.0], [46.5, 31.0], [46.6, 31.0], [46.7, 31.0], [46.8, 31.0], [46.9, 31.0], [47.0, 31.0], [47.1, 31.0], [47.2, 32.0], [47.3, 32.0], [47.4, 32.0], [47.5, 32.0], [47.6, 32.0], [47.7, 32.0], [47.8, 32.0], [47.9, 32.0], [48.0, 32.0], [48.1, 33.0], [48.2, 33.0], [48.3, 33.0], [48.4, 33.0], [48.5, 33.0], [48.6, 33.0], [48.7, 33.0], [48.8, 33.0], [48.9, 33.0], [49.0, 34.0], [49.1, 34.0], [49.2, 34.0], [49.3, 34.0], [49.4, 34.0], [49.5, 34.0], [49.6, 34.0], [49.7, 34.0], [49.8, 35.0], [49.9, 35.0], [50.0, 35.0], [50.1, 35.0], [50.2, 35.0], [50.3, 35.0], [50.4, 35.0], [50.5, 35.0], [50.6, 36.0], [50.7, 36.0], [50.8, 36.0], [50.9, 36.0], [51.0, 36.0], [51.1, 36.0], [51.2, 36.0], [51.3, 36.0], [51.4, 37.0], [51.5, 37.0], [51.6, 37.0], [51.7, 37.0], [51.8, 37.0], [51.9, 37.0], [52.0, 37.0], [52.1, 37.0], [52.2, 38.0], [52.3, 38.0], [52.4, 38.0], [52.5, 38.0], [52.6, 38.0], [52.7, 38.0], [52.8, 38.0], [52.9, 38.0], [53.0, 39.0], [53.1, 39.0], [53.2, 39.0], [53.3, 39.0], [53.4, 39.0], [53.5, 39.0], [53.6, 39.0], [53.7, 39.0], [53.8, 39.0], [53.9, 39.0], [54.0, 39.0], [54.1, 40.0], [54.2, 40.0], [54.3, 40.0], [54.4, 40.0], [54.5, 40.0], [54.6, 40.0], [54.7, 40.0], [54.8, 40.0], [54.9, 40.0], [55.0, 40.0], [55.1, 40.0], [55.2, 40.0], [55.3, 40.0], [55.4, 40.0], [55.5, 40.0], [55.6, 40.0], [55.7, 40.0], [55.8, 40.0], [55.9, 40.0], [56.0, 40.0], [56.1, 40.0], [56.2, 40.0], [56.3, 40.0], [56.4, 40.0], [56.5, 41.0], [56.6, 41.0], [56.7, 41.0], [56.8, 41.0], [56.9, 41.0], [57.0, 41.0], [57.1, 41.0], [57.2, 41.0], [57.3, 41.0], [57.4, 41.0], [57.5, 41.0], [57.6, 41.0], [57.7, 41.0], [57.8, 41.0], [57.9, 41.0], [58.0, 41.0], [58.1, 41.0], [58.2, 41.0], [58.3, 41.0], [58.4, 41.0], [58.5, 41.0], [58.6, 41.0], [58.7, 41.0], [58.8, 41.0], [58.9, 41.0], [59.0, 41.0], [59.1, 41.0], [59.2, 41.0], [59.3, 41.0], [59.4, 41.0], [59.5, 41.0], [59.6, 41.0], [59.7, 41.0], [59.8, 41.0], [59.9, 41.0], [60.0, 41.0], [60.1, 41.0], [60.2, 41.0], [60.3, 42.0], [60.4, 42.0], [60.5, 42.0], [60.6, 42.0], [60.7, 42.0], [60.8, 42.0], [60.9, 42.0], [61.0, 42.0], [61.1, 42.0], [61.2, 42.0], [61.3, 42.0], [61.4, 42.0], [61.5, 42.0], [61.6, 42.0], [61.7, 42.0], [61.8, 42.0], [61.9, 42.0], [62.0, 42.0], [62.1, 42.0], [62.2, 42.0], [62.3, 42.0], [62.4, 42.0], [62.5, 42.0], [62.6, 42.0], [62.7, 42.0], [62.8, 42.0], [62.9, 42.0], [63.0, 43.0], [63.1, 43.0], [63.2, 43.0], [63.3, 43.0], [63.4, 43.0], [63.5, 43.0], [63.6, 43.0], [63.7, 43.0], [63.8, 43.0], [63.9, 43.0], [64.0, 43.0], [64.1, 43.0], [64.2, 43.0], [64.3, 43.0], [64.4, 44.0], [64.5, 44.0], [64.6, 44.0], [64.7, 44.0], [64.8, 44.0], [64.9, 44.0], [65.0, 44.0], [65.1, 44.0], [65.2, 44.0], [65.3, 44.0], [65.4, 45.0], [65.5, 45.0], [65.6, 45.0], [65.7, 45.0], [65.8, 45.0], [65.9, 45.0], [66.0, 45.0], [66.1, 45.0], [66.2, 45.0], [66.3, 46.0], [66.4, 46.0], [66.5, 46.0], [66.6, 46.0], [66.7, 46.0], [66.8, 46.0], [66.9, 46.0], [67.0, 46.0], [67.1, 46.0], [67.2, 46.0], [67.3, 47.0], [67.4, 47.0], [67.5, 47.0], [67.6, 47.0], [67.7, 47.0], [67.8, 47.0], [67.9, 48.0], [68.0, 48.0], [68.1, 48.0], [68.2, 48.0], [68.3, 48.0], [68.4, 48.0], [68.5, 49.0], [68.6, 49.0], [68.7, 49.0], [68.8, 49.0], [68.9, 50.0], [69.0, 50.0], [69.1, 50.0], [69.2, 51.0], [69.3, 51.0], [69.4, 52.0], [69.5, 52.0], [69.6, 52.0], [69.7, 53.0], [69.8, 53.0], [69.9, 53.0], [70.0, 54.0], [70.1, 54.0], [70.2, 55.0], [70.3, 56.0], [70.4, 56.0], [70.5, 58.0], [70.6, 62.0], [70.7, 67.0], [70.8, 89.0], [70.9, 149.0], [71.0, 152.0], [71.1, 154.0], [71.2, 156.0], [71.3, 157.0], [71.4, 159.0], [71.5, 161.0], [71.6, 162.0], [71.7, 163.0], [71.8, 164.0], [71.9, 165.0], [72.0, 166.0], [72.1, 167.0], [72.2, 168.0], [72.3, 169.0], [72.4, 170.0], [72.5, 171.0], [72.6, 172.0], [72.7, 173.0], [72.8, 174.0], [72.9, 175.0], [73.0, 175.0], [73.1, 176.0], [73.2, 177.0], [73.3, 178.0], [73.4, 179.0], [73.5, 179.0], [73.6, 180.0], [73.7, 181.0], [73.8, 182.0], [73.9, 183.0], [74.0, 184.0], [74.1, 185.0], [74.2, 186.0], [74.3, 187.0], [74.4, 187.0], [74.5, 188.0], [74.6, 189.0], [74.7, 190.0], [74.8, 191.0], [74.9, 192.0], [75.0, 193.0], [75.1, 194.0], [75.2, 195.0], [75.3, 195.0], [75.4, 196.0], [75.5, 197.0], [75.6, 198.0], [75.7, 199.0], [75.8, 200.0], [75.9, 201.0], [76.0, 202.0], [76.1, 203.0], [76.2, 203.0], [76.3, 204.0], [76.4, 205.0], [76.5, 206.0], [76.6, 207.0], [76.7, 208.0], [76.8, 209.0], [76.9, 210.0], [77.0, 211.0], [77.1, 212.0], [77.2, 213.0], [77.3, 213.0], [77.4, 214.0], [77.5, 215.0], [77.6, 216.0], [77.7, 217.0], [77.8, 218.0], [77.9, 219.0], [78.0, 220.0], [78.1, 220.0], [78.2, 221.0], [78.3, 222.0], [78.4, 223.0], [78.5, 224.0], [78.6, 225.0], [78.7, 226.0], [78.8, 226.0], [78.9, 227.0], [79.0, 228.0], [79.1, 229.0], [79.2, 230.0], [79.3, 231.0], [79.4, 232.0], [79.5, 233.0], [79.6, 234.0], [79.7, 235.0], [79.8, 235.0], [79.9, 236.0], [80.0, 237.0], [80.1, 238.0], [80.2, 239.0], [80.3, 240.0], [80.4, 241.0], [80.5, 242.0], [80.6, 243.0], [80.7, 243.0], [80.8, 244.0], [80.9, 245.0], [81.0, 246.0], [81.1, 247.0], [81.2, 247.0], [81.3, 248.0], [81.4, 249.0], [81.5, 250.0], [81.6, 251.0], [81.7, 252.0], [81.8, 253.0], [81.9, 254.0], [82.0, 254.0], [82.1, 255.0], [82.2, 256.0], [82.3, 257.0], [82.4, 258.0], [82.5, 259.0], [82.6, 260.0], [82.7, 260.0], [82.8, 261.0], [82.9, 262.0], [83.0, 263.0], [83.1, 264.0], [83.2, 265.0], [83.3, 266.0], [83.4, 267.0], [83.5, 268.0], [83.6, 269.0], [83.7, 269.0], [83.8, 270.0], [83.9, 271.0], [84.0, 272.0], [84.1, 273.0], [84.2, 274.0], [84.3, 275.0], [84.4, 276.0], [84.5, 277.0], [84.6, 278.0], [84.7, 279.0], [84.8, 279.0], [84.9, 280.0], [85.0, 281.0], [85.1, 282.0], [85.2, 283.0], [85.3, 284.0], [85.4, 285.0], [85.5, 286.0], [85.6, 287.0], [85.7, 288.0], [85.8, 288.0], [85.9, 289.0], [86.0, 290.0], [86.1, 291.0], [86.2, 292.0], [86.3, 293.0], [86.4, 294.0], [86.5, 295.0], [86.6, 295.0], [86.7, 296.0], [86.8, 297.0], [86.9, 298.0], [87.0, 299.0], [87.1, 300.0], [87.2, 301.0], [87.3, 301.0], [87.4, 302.0], [87.5, 303.0], [87.6, 304.0], [87.7, 305.0], [87.8, 306.0], [87.9, 307.0], [88.0, 307.0], [88.1, 308.0], [88.2, 309.0], [88.3, 310.0], [88.4, 311.0], [88.5, 312.0], [88.6, 313.0], [88.7, 314.0], [88.8, 315.0], [88.9, 316.0], [89.0, 317.0], [89.1, 318.0], [89.2, 318.0], [89.3, 319.0], [89.4, 320.0], [89.5, 321.0], [89.6, 322.0], [89.7, 323.0], [89.8, 324.0], [89.9, 324.0], [90.0, 325.0], [90.1, 326.0], [90.2, 327.0], [90.3, 328.0], [90.4, 329.0], [90.5, 330.0], [90.6, 331.0], [90.7, 331.0], [90.8, 332.0], [90.9, 333.0], [91.0, 334.0], [91.1, 335.0], [91.2, 336.0], [91.3, 337.0], [91.4, 338.0], [91.5, 339.0], [91.6, 339.0], [91.7, 340.0], [91.8, 341.0], [91.9, 342.0], [92.0, 343.0], [92.1, 344.0], [92.2, 345.0], [92.3, 346.0], [92.4, 347.0], [92.5, 347.0], [92.6, 348.0], [92.7, 349.0], [92.8, 350.0], [92.9, 351.0], [93.0, 352.0], [93.1, 353.0], [93.2, 354.0], [93.3, 355.0], [93.4, 355.0], [93.5, 356.0], [93.6, 357.0], [93.7, 358.0], [93.8, 359.0], [93.9, 360.0], [94.0, 360.0], [94.1, 361.0], [94.2, 362.0], [94.3, 363.0], [94.4, 364.0], [94.5, 365.0], [94.6, 366.0], [94.7, 367.0], [94.8, 367.0], [94.9, 368.0], [95.0, 369.0], [95.1, 370.0], [95.2, 371.0], [95.3, 372.0], [95.4, 373.0], [95.5, 373.0], [95.6, 374.0], [95.7, 375.0], [95.8, 376.0], [95.9, 377.0], [96.0, 378.0], [96.1, 378.0], [96.2, 379.0], [96.3, 380.0], [96.4, 381.0], [96.5, 382.0], [96.6, 383.0], [96.7, 384.0], [96.8, 384.0], [96.9, 385.0], [97.0, 386.0], [97.1, 387.0], [97.2, 388.0], [97.3, 389.0], [97.4, 390.0], [97.5, 390.0], [97.6, 391.0], [97.7, 392.0], [97.8, 393.0], [97.9, 394.0], [98.0, 395.0], [98.1, 395.0], [98.2, 396.0], [98.3, 397.0], [98.4, 398.0], [98.5, 399.0], [98.6, 400.0], [98.7, 401.0], [98.8, 402.0], [98.9, 402.0], [99.0, 403.0], [99.1, 405.0], [99.2, 405.0], [99.3, 406.0], [99.4, 407.0], [99.5, 408.0], [99.6, 409.0], [99.7, 411.0], [99.8, 413.0], [99.9, 416.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[0.0, 9.0], [0.1, 12.0], [0.2, 13.0], [0.3, 15.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 16.0], [0.9, 17.0], [1.0, 17.0], [1.1, 17.0], [1.2, 17.0], [1.3, 17.0], [1.4, 18.0], [1.5, 18.0], [1.6, 19.0], [1.7, 19.0], [1.8, 19.0], [1.9, 19.0], [2.0, 19.0], [2.1, 19.0], [2.2, 19.0], [2.3, 19.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 19.0], [3.1, 19.0], [3.2, 19.0], [3.3, 19.0], [3.4, 19.0], [3.5, 19.0], [3.6, 19.0], [3.7, 19.0], [3.8, 19.0], [3.9, 19.0], [4.0, 20.0], [4.1, 20.0], [4.2, 20.0], [4.3, 20.0], [4.4, 20.0], [4.5, 20.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 20.0], [7.2, 20.0], [7.3, 20.0], [7.4, 20.0], [7.5, 20.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 20.0], [10.0, 20.0], [10.1, 20.0], [10.2, 20.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 20.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 20.0], [11.4, 20.0], [11.5, 20.0], [11.6, 20.0], [11.7, 20.0], [11.8, 20.0], [11.9, 20.0], [12.0, 20.0], [12.1, 20.0], [12.2, 20.0], [12.3, 20.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 20.0], [12.8, 20.0], [12.9, 20.0], [13.0, 20.0], [13.1, 20.0], [13.2, 20.0], [13.3, 20.0], [13.4, 20.0], [13.5, 20.0], [13.6, 20.0], [13.7, 20.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 20.0], [14.3, 20.0], [14.4, 20.0], [14.5, 20.0], [14.6, 20.0], [14.7, 20.0], [14.8, 20.0], [14.9, 20.0], [15.0, 20.0], [15.1, 20.0], [15.2, 20.0], [15.3, 20.0], [15.4, 20.0], [15.5, 20.0], [15.6, 20.0], [15.7, 20.0], [15.8, 20.0], [15.9, 20.0], [16.0, 20.0], [16.1, 20.0], [16.2, 20.0], [16.3, 20.0], [16.4, 20.0], [16.5, 20.0], [16.6, 20.0], [16.7, 20.0], [16.8, 20.0], [16.9, 20.0], [17.0, 20.0], [17.1, 20.0], [17.2, 20.0], [17.3, 20.0], [17.4, 20.0], [17.5, 20.0], [17.6, 20.0], [17.7, 20.0], [17.8, 20.0], [17.9, 20.0], [18.0, 20.0], [18.1, 20.0], [18.2, 20.0], [18.3, 20.0], [18.4, 20.0], [18.5, 20.0], [18.6, 21.0], [18.7, 21.0], [18.8, 21.0], [18.9, 21.0], [19.0, 21.0], [19.1, 21.0], [19.2, 21.0], [19.3, 21.0], [19.4, 21.0], [19.5, 21.0], [19.6, 21.0], [19.7, 21.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 21.0], [20.3, 21.0], [20.4, 21.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 21.0], [22.0, 21.0], [22.1, 21.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 21.0], [23.9, 21.0], [24.0, 21.0], [24.1, 21.0], [24.2, 21.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 21.0], [29.1, 21.0], [29.2, 21.0], [29.3, 21.0], [29.4, 21.0], [29.5, 21.0], [29.6, 21.0], [29.7, 21.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 23.0], [33.2, 23.0], [33.3, 23.0], [33.4, 23.0], [33.5, 23.0], [33.6, 23.0], [33.7, 23.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 23.0], [34.3, 24.0], [34.4, 24.0], [34.5, 24.0], [34.6, 24.0], [34.7, 24.0], [34.8, 27.0], [34.9, 38.0], [35.0, 38.0], [35.1, 38.0], [35.2, 38.0], [35.3, 38.0], [35.4, 38.0], [35.5, 39.0], [35.6, 39.0], [35.7, 39.0], [35.8, 39.0], [35.9, 39.0], [36.0, 39.0], [36.1, 39.0], [36.2, 39.0], [36.3, 39.0], [36.4, 39.0], [36.5, 39.0], [36.6, 39.0], [36.7, 39.0], [36.8, 39.0], [36.9, 39.0], [37.0, 39.0], [37.1, 39.0], [37.2, 39.0], [37.3, 39.0], [37.4, 39.0], [37.5, 39.0], [37.6, 39.0], [37.7, 39.0], [37.8, 39.0], [37.9, 39.0], [38.0, 39.0], [38.1, 39.0], [38.2, 39.0], [38.3, 39.0], [38.4, 39.0], [38.5, 39.0], [38.6, 39.0], [38.7, 39.0], [38.8, 39.0], [38.9, 39.0], [39.0, 39.0], [39.1, 39.0], [39.2, 39.0], [39.3, 39.0], [39.4, 39.0], [39.5, 39.0], [39.6, 39.0], [39.7, 39.0], [39.8, 39.0], [39.9, 39.0], [40.0, 40.0], [40.1, 40.0], [40.2, 40.0], [40.3, 40.0], [40.4, 40.0], [40.5, 40.0], [40.6, 40.0], [40.7, 40.0], [40.8, 40.0], [40.9, 40.0], [41.0, 40.0], [41.1, 40.0], [41.2, 40.0], [41.3, 40.0], [41.4, 40.0], [41.5, 40.0], [41.6, 40.0], [41.7, 40.0], [41.8, 40.0], [41.9, 40.0], [42.0, 40.0], [42.1, 40.0], [42.2, 40.0], [42.3, 40.0], [42.4, 40.0], [42.5, 40.0], [42.6, 40.0], [42.7, 40.0], [42.8, 40.0], [42.9, 40.0], [43.0, 40.0], [43.1, 40.0], [43.2, 40.0], [43.3, 40.0], [43.4, 40.0], [43.5, 40.0], [43.6, 40.0], [43.7, 40.0], [43.8, 40.0], [43.9, 40.0], [44.0, 40.0], [44.1, 40.0], [44.2, 40.0], [44.3, 40.0], [44.4, 40.0], [44.5, 40.0], [44.6, 40.0], [44.7, 40.0], [44.8, 40.0], [44.9, 40.0], [45.0, 40.0], [45.1, 40.0], [45.2, 40.0], [45.3, 40.0], [45.4, 40.0], [45.5, 40.0], [45.6, 40.0], [45.7, 40.0], [45.8, 40.0], [45.9, 40.0], [46.0, 40.0], [46.1, 40.0], [46.2, 40.0], [46.3, 40.0], [46.4, 40.0], [46.5, 40.0], [46.6, 40.0], [46.7, 40.0], [46.8, 40.0], [46.9, 40.0], [47.0, 40.0], [47.1, 40.0], [47.2, 40.0], [47.3, 40.0], [47.4, 40.0], [47.5, 40.0], [47.6, 40.0], [47.7, 40.0], [47.8, 40.0], [47.9, 40.0], [48.0, 40.0], [48.1, 40.0], [48.2, 40.0], [48.3, 40.0], [48.4, 40.0], [48.5, 40.0], [48.6, 40.0], [48.7, 40.0], [48.8, 40.0], [48.9, 40.0], [49.0, 40.0], [49.1, 40.0], [49.2, 40.0], [49.3, 40.0], [49.4, 40.0], [49.5, 40.0], [49.6, 40.0], [49.7, 40.0], [49.8, 40.0], [49.9, 40.0], [50.0, 40.0], [50.1, 40.0], [50.2, 41.0], [50.3, 41.0], [50.4, 41.0], [50.5, 41.0], [50.6, 41.0], [50.7, 41.0], [50.8, 41.0], [50.9, 41.0], [51.0, 41.0], [51.1, 41.0], [51.2, 41.0], [51.3, 41.0], [51.4, 41.0], [51.5, 41.0], [51.6, 41.0], [51.7, 41.0], [51.8, 41.0], [51.9, 41.0], [52.0, 41.0], [52.1, 41.0], [52.2, 41.0], [52.3, 41.0], [52.4, 41.0], [52.5, 41.0], [52.6, 41.0], [52.7, 41.0], [52.8, 41.0], [52.9, 41.0], [53.0, 41.0], [53.1, 41.0], [53.2, 41.0], [53.3, 41.0], [53.4, 41.0], [53.5, 41.0], [53.6, 41.0], [53.7, 41.0], [53.8, 41.0], [53.9, 41.0], [54.0, 41.0], [54.1, 41.0], [54.2, 41.0], [54.3, 41.0], [54.4, 41.0], [54.5, 41.0], [54.6, 41.0], [54.7, 41.0], [54.8, 41.0], [54.9, 41.0], [55.0, 41.0], [55.1, 41.0], [55.2, 41.0], [55.3, 41.0], [55.4, 41.0], [55.5, 41.0], [55.6, 41.0], [55.7, 41.0], [55.8, 41.0], [55.9, 41.0], [56.0, 41.0], [56.1, 41.0], [56.2, 41.0], [56.3, 41.0], [56.4, 41.0], [56.5, 41.0], [56.6, 41.0], [56.7, 41.0], [56.8, 41.0], [56.9, 41.0], [57.0, 41.0], [57.1, 41.0], [57.2, 41.0], [57.3, 41.0], [57.4, 41.0], [57.5, 41.0], [57.6, 41.0], [57.7, 41.0], [57.8, 41.0], [57.9, 41.0], [58.0, 41.0], [58.1, 41.0], [58.2, 41.0], [58.3, 41.0], [58.4, 41.0], [58.5, 41.0], [58.6, 41.0], [58.7, 41.0], [58.8, 41.0], [58.9, 41.0], [59.0, 41.0], [59.1, 41.0], [59.2, 42.0], [59.3, 42.0], [59.4, 42.0], [59.5, 42.0], [59.6, 42.0], [59.7, 42.0], [59.8, 42.0], [59.9, 42.0], [60.0, 42.0], [60.1, 42.0], [60.2, 42.0], [60.3, 42.0], [60.4, 42.0], [60.5, 42.0], [60.6, 42.0], [60.7, 42.0], [60.8, 42.0], [60.9, 42.0], [61.0, 42.0], [61.1, 42.0], [61.2, 42.0], [61.3, 42.0], [61.4, 42.0], [61.5, 42.0], [61.6, 42.0], [61.7, 42.0], [61.8, 42.0], [61.9, 42.0], [62.0, 42.0], [62.1, 42.0], [62.2, 42.0], [62.3, 42.0], [62.4, 42.0], [62.5, 42.0], [62.6, 42.0], [62.7, 42.0], [62.8, 42.0], [62.9, 42.0], [63.0, 42.0], [63.1, 42.0], [63.2, 42.0], [63.3, 42.0], [63.4, 42.0], [63.5, 42.0], [63.6, 42.0], [63.7, 42.0], [63.8, 42.0], [63.9, 42.0], [64.0, 42.0], [64.1, 42.0], [64.2, 42.0], [64.3, 42.0], [64.4, 42.0], [64.5, 42.0], [64.6, 42.0], [64.7, 42.0], [64.8, 42.0], [64.9, 42.0], [65.0, 42.0], [65.1, 42.0], [65.2, 43.0], [65.3, 43.0], [65.4, 43.0], [65.5, 43.0], [65.6, 43.0], [65.7, 43.0], [65.8, 43.0], [65.9, 43.0], [66.0, 43.0], [66.1, 43.0], [66.2, 43.0], [66.3, 43.0], [66.4, 43.0], [66.5, 43.0], [66.6, 43.0], [66.7, 43.0], [66.8, 43.0], [66.9, 43.0], [67.0, 43.0], [67.1, 43.0], [67.2, 43.0], [67.3, 43.0], [67.4, 43.0], [67.5, 43.0], [67.6, 43.0], [67.7, 43.0], [67.8, 43.0], [67.9, 43.0], [68.0, 43.0], [68.1, 43.0], [68.2, 43.0], [68.3, 43.0], [68.4, 44.0], [68.5, 44.0], [68.6, 44.0], [68.7, 44.0], [68.8, 44.0], [68.9, 44.0], [69.0, 44.0], [69.1, 44.0], [69.2, 44.0], [69.3, 44.0], [69.4, 44.0], [69.5, 44.0], [69.6, 45.0], [69.7, 45.0], [69.8, 45.0], [69.9, 46.0], [70.0, 46.0], [70.1, 47.0], [70.2, 52.0], [70.3, 226.0], [70.4, 394.0], [70.5, 396.0], [70.6, 396.0], [70.7, 396.0], [70.8, 397.0], [70.9, 397.0], [71.0, 397.0], [71.1, 398.0], [71.2, 398.0], [71.3, 398.0], [71.4, 398.0], [71.5, 399.0], [71.6, 399.0], [71.7, 399.0], [71.8, 399.0], [71.9, 400.0], [72.0, 400.0], [72.1, 400.0], [72.2, 400.0], [72.3, 400.0], [72.4, 401.0], [72.5, 401.0], [72.6, 401.0], [72.7, 401.0], [72.8, 401.0], [72.9, 401.0], [73.0, 401.0], [73.1, 401.0], [73.2, 402.0], [73.3, 402.0], [73.4, 402.0], [73.5, 402.0], [73.6, 402.0], [73.7, 402.0], [73.8, 402.0], [73.9, 402.0], [74.0, 402.0], [74.1, 403.0], [74.2, 403.0], [74.3, 403.0], [74.4, 403.0], [74.5, 403.0], [74.6, 403.0], [74.7, 403.0], [74.8, 403.0], [74.9, 404.0], [75.0, 404.0], [75.1, 404.0], [75.2, 404.0], [75.3, 404.0], [75.4, 404.0], [75.5, 404.0], [75.6, 404.0], [75.7, 405.0], [75.8, 405.0], [75.9, 405.0], [76.0, 405.0], [76.1, 405.0], [76.2, 405.0], [76.3, 405.0], [76.4, 405.0], [76.5, 406.0], [76.6, 406.0], [76.7, 406.0], [76.8, 406.0], [76.9, 406.0], [77.0, 406.0], [77.1, 406.0], [77.2, 407.0], [77.3, 407.0], [77.4, 407.0], [77.5, 407.0], [77.6, 407.0], [77.7, 407.0], [77.8, 407.0], [77.9, 407.0], [78.0, 407.0], [78.1, 408.0], [78.2, 408.0], [78.3, 408.0], [78.4, 408.0], [78.5, 408.0], [78.6, 408.0], [78.7, 408.0], [78.8, 409.0], [78.9, 409.0], [79.0, 409.0], [79.1, 409.0], [79.2, 409.0], [79.3, 409.0], [79.4, 409.0], [79.5, 410.0], [79.6, 410.0], [79.7, 410.0], [79.8, 410.0], [79.9, 410.0], [80.0, 410.0], [80.1, 410.0], [80.2, 410.0], [80.3, 411.0], [80.4, 411.0], [80.5, 411.0], [80.6, 411.0], [80.7, 411.0], [80.8, 411.0], [80.9, 411.0], [81.0, 411.0], [81.1, 412.0], [81.2, 412.0], [81.3, 412.0], [81.4, 412.0], [81.5, 412.0], [81.6, 412.0], [81.7, 412.0], [81.8, 412.0], [81.9, 413.0], [82.0, 413.0], [82.1, 413.0], [82.2, 413.0], [82.3, 413.0], [82.4, 413.0], [82.5, 413.0], [82.6, 413.0], [82.7, 413.0], [82.8, 414.0], [82.9, 414.0], [83.0, 414.0], [83.1, 414.0], [83.2, 414.0], [83.3, 414.0], [83.4, 414.0], [83.5, 414.0], [83.6, 414.0], [83.7, 415.0], [83.8, 415.0], [83.9, 415.0], [84.0, 415.0], [84.1, 415.0], [84.2, 415.0], [84.3, 415.0], [84.4, 415.0], [84.5, 415.0], [84.6, 416.0], [84.7, 416.0], [84.8, 416.0], [84.9, 416.0], [85.0, 416.0], [85.1, 416.0], [85.2, 416.0], [85.3, 416.0], [85.4, 416.0], [85.5, 416.0], [85.6, 416.0], [85.7, 417.0], [85.8, 417.0], [85.9, 417.0], [86.0, 417.0], [86.1, 417.0], [86.2, 417.0], [86.3, 417.0], [86.4, 417.0], [86.5, 417.0], [86.6, 418.0], [86.7, 418.0], [86.8, 418.0], [86.9, 418.0], [87.0, 418.0], [87.1, 418.0], [87.2, 418.0], [87.3, 418.0], [87.4, 418.0], [87.5, 419.0], [87.6, 419.0], [87.7, 419.0], [87.8, 419.0], [87.9, 419.0], [88.0, 419.0], [88.1, 419.0], [88.2, 420.0], [88.3, 420.0], [88.4, 420.0], [88.5, 420.0], [88.6, 420.0], [88.7, 420.0], [88.8, 420.0], [88.9, 420.0], [89.0, 420.0], [89.1, 421.0], [89.2, 421.0], [89.3, 421.0], [89.4, 421.0], [89.5, 421.0], [89.6, 421.0], [89.7, 421.0], [89.8, 421.0], [89.9, 421.0], [90.0, 422.0], [90.1, 422.0], [90.2, 422.0], [90.3, 422.0], [90.4, 422.0], [90.5, 422.0], [90.6, 422.0], [90.7, 422.0], [90.8, 423.0], [90.9, 423.0], [91.0, 423.0], [91.1, 423.0], [91.2, 423.0], [91.3, 423.0], [91.4, 423.0], [91.5, 424.0], [91.6, 424.0], [91.7, 424.0], [91.8, 424.0], [91.9, 424.0], [92.0, 424.0], [92.1, 425.0], [92.2, 425.0], [92.3, 425.0], [92.4, 425.0], [92.5, 425.0], [92.6, 425.0], [92.7, 425.0], [92.8, 426.0], [92.9, 426.0], [93.0, 426.0], [93.1, 426.0], [93.2, 426.0], [93.3, 426.0], [93.4, 426.0], [93.5, 427.0], [93.6, 427.0], [93.7, 427.0], [93.8, 427.0], [93.9, 427.0], [94.0, 427.0], [94.1, 428.0], [94.2, 428.0], [94.3, 428.0], [94.4, 428.0], [94.5, 428.0], [94.6, 428.0], [94.7, 428.0], [94.8, 429.0], [94.9, 429.0], [95.0, 429.0], [95.1, 429.0], [95.2, 429.0], [95.3, 429.0], [95.4, 429.0], [95.5, 429.0], [95.6, 429.0], [95.7, 430.0], [95.8, 430.0], [95.9, 430.0], [96.0, 430.0], [96.1, 430.0], [96.2, 430.0], [96.3, 431.0], [96.4, 431.0], [96.5, 431.0], [96.6, 431.0], [96.7, 431.0], [96.8, 431.0], [96.9, 432.0], [97.0, 432.0], [97.1, 432.0], [97.2, 432.0], [97.3, 432.0], [97.4, 433.0], [97.5, 433.0], [97.6, 433.0], [97.7, 434.0], [97.8, 434.0], [97.9, 434.0], [98.0, 435.0], [98.1, 435.0], [98.2, 435.0], [98.3, 435.0], [98.4, 436.0], [98.5, 436.0], [98.6, 437.0], [98.7, 437.0], [98.8, 437.0], [98.9, 438.0], [99.0, 440.0], [99.1, 521.0], [99.2, 521.0], [99.3, 522.0], [99.4, 522.0], [99.5, 523.0], [99.6, 523.0], [99.7, 524.0], [99.8, 526.0], [99.9, 567.0], [100.0, 568.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "maxY": 25620.0, "series": [{"data": [[0.0, 25563.0], [200.0, 32.0], [400.0, 10047.0], [500.0, 453.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[0.0, 25618.0], [300.0, 4133.0], [100.0, 2011.0], [200.0, 4549.0], [400.0, 321.0], [500.0, 43.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[0.0, 25537.0], [300.0, 4140.0], [400.0, 522.0], [200.0, 4078.0], [100.0, 1779.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[0.0, 25620.0], [300.0, 553.0], [200.0, 21.0], [400.0, 9915.0], [500.0, 355.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 849.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 144441.0, "series": [{"data": [[0.0, 144441.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 849.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 24.970924597790276, "minX": 1.69620012E12, "maxY": 287.5139031390812, "series": [{"data": [[1.69620012E12, 47.97981888745134], [1.69620024E12, 24.970924597790276], [1.69620018E12, 287.5139031390812]], "isOverall": false, "label": "SpikeTest - 1 pico", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69620024E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 527.0, "series": [{"data": [[540.0, 95.0], [543.0, 94.0], [533.0, 95.0], [532.0, 95.0], [542.0, 94.0], [541.0, 94.0], [539.0, 96.0], [538.0, 96.0], [537.0, 96.0], [536.0, 96.0], [33.0, 42.0], [32.0, 42.0], [535.0, 96.0], [534.0, 95.0], [544.0, 78.5], [546.0, 79.0], [545.0, 90.0], [35.0, 43.0], [34.0, 42.0], [37.0, 42.0], [36.0, 43.0], [39.0, 42.0], [38.0, 42.0], [41.0, 43.0], [40.0, 42.0], [43.0, 42.0], [42.0, 42.0], [44.0, 42.0], [50.0, 42.17269326683296], [60.0, 23.0], [63.0, 42.0], [353.0, 54.0], [25.0, 20.669312377210275], [26.0, 43.0], [28.0, 42.0], [29.0, 42.0], [30.0, 43.0], [500.0, 430.0348571428582], [31.0, 43.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[172.30907327884887, 147.44241584707171]], "isOverall": false, "label": "DELETE-Aggregated", "isController": false}, {"data": [[15.0, 20.0], [16.0, 20.0], [17.0, 21.0], [18.0, 22.0], [19.0, 22.0], [20.0, 22.0], [21.0, 22.0], [22.0, 22.0], [23.0, 22.0], [24.0, 22.0], [25.0, 18.872070235948875], [38.0, 15.0], [50.0, 36.665348837209336], [67.0, 22.0], [66.0, 23.0], [64.0, 23.0], [70.0, 20.0], [69.0, 21.0], [73.0, 19.0], [72.0, 20.0], [366.0, 517.0], [367.0, 516.0], [365.0, 517.0], [364.0, 518.0], [363.0, 518.0], [362.0, 518.0], [361.0, 519.0], [360.0, 520.0], [359.0, 520.0], [382.0, 509.0], [383.0, 509.0], [381.0, 509.0], [380.0, 510.0], [379.0, 510.0], [378.0, 511.0], [377.0, 511.0], [376.0, 511.0], [375.0, 512.0], [369.0, 515.0], [368.0, 515.0], [371.0, 514.0], [370.0, 515.0], [374.0, 513.0], [373.0, 514.0], [372.0, 513.0], [398.0, 501.0], [399.0, 500.0], [397.0, 502.0], [396.0, 502.0], [395.0, 503.0], [394.0, 503.0], [393.0, 504.0], [392.0, 504.0], [391.0, 505.0], [385.0, 507.0], [384.0, 508.0], [387.0, 507.0], [386.0, 507.0], [390.0, 505.0], [389.0, 505.0], [388.0, 506.0], [414.0, 494.0], [415.0, 493.0], [413.0, 494.0], [412.0, 494.0], [411.0, 495.0], [410.0, 496.0], [409.0, 496.0], [408.0, 496.0], [407.0, 497.0], [401.0, 500.0], [400.0, 501.0], [403.0, 498.0], [402.0, 499.0], [406.0, 497.0], [405.0, 498.0], [404.0, 498.0], [430.0, 485.0], [431.0, 485.0], [429.0, 486.0], [428.0, 487.0], [427.0, 488.0], [426.0, 487.0], [425.0, 488.0], [424.0, 489.0], [423.0, 490.0], [417.0, 492.0], [416.0, 492.0], [419.0, 491.0], [418.0, 491.0], [422.0, 490.0], [421.0, 490.0], [420.0, 491.0], [446.0, 479.0], [447.0, 480.0], [445.0, 480.0], [444.0, 481.0], [443.0, 481.0], [442.0, 482.0], [441.0, 483.0], [440.0, 482.0], [439.0, 483.0], [433.0, 484.0], [432.0, 485.0], [435.0, 483.0], [434.0, 484.0], [438.0, 482.0], [437.0, 482.0], [436.0, 483.0], [462.0, 472.0], [463.0, 471.0], [461.0, 473.0], [460.0, 473.0], [459.0, 473.0], [458.0, 474.0], [457.0, 475.0], [456.0, 475.0], [455.0, 475.0], [449.0, 478.0], [448.0, 479.0], [451.0, 478.0], [450.0, 477.0], [454.0, 476.0], [453.0, 476.0], [452.0, 477.0], [478.0, 464.0], [479.0, 463.0], [477.0, 464.0], [476.0, 465.0], [475.0, 466.0], [474.0, 466.0], [473.0, 466.0], [472.0, 467.0], [471.0, 468.0], [465.0, 470.0], [464.0, 471.0], [467.0, 470.0], [466.0, 470.0], [470.0, 467.0], [469.0, 468.0], [468.0, 469.0], [494.0, 454.0], [495.0, 454.0], [493.0, 455.0], [492.0, 455.0], [491.0, 457.0], [490.0, 458.0], [489.0, 458.0], [488.0, 459.0], [487.0, 459.0], [481.0, 463.0], [480.0, 463.0], [483.0, 461.0], [482.0, 462.0], [486.0, 460.0], [485.0, 461.0], [484.0, 460.0], [509.0, 447.0], [500.0, 274.5058747340165], [502.0, 450.0], [501.0, 450.0], [511.0, 445.5], [508.0, 447.0], [499.0, 452.0], [498.0, 452.0], [497.0, 452.0], [496.0, 453.0], [507.0, 447.0], [506.0, 448.0], [505.0, 449.0], [504.0, 449.0], [503.0, 450.0], [540.0, 431.0], [523.0, 430.5], [522.0, 440.0], [521.0, 440.0], [520.0, 441.0], [525.0, 438.0], [524.0, 439.0], [527.0, 437.0], [513.0, 445.0], [512.0, 445.0], [515.0, 443.0], [514.0, 444.0], [517.0, 442.0], [516.0, 443.0], [519.0, 442.0], [518.0, 441.0], [526.0, 438.0], [543.0, 430.0], [529.0, 436.0], [528.0, 437.0], [531.0, 435.0], [530.0, 436.0], [533.0, 435.0], [532.0, 434.0], [535.0, 433.0], [534.0, 434.0], [542.0, 430.0], [541.0, 430.0], [539.0, 432.0], [538.0, 432.0], [537.0, 432.0], [536.0, 433.0], [549.0, 423.0], [548.0, 424.0], [547.0, 426.0], [546.0, 427.0], [545.0, 428.0], [544.0, 429.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[176.02936605317026, 102.84305385139682]], "isOverall": false, "label": "POST-Aggregated", "isController": false}, {"data": [[516.0, 85.0], [528.0, 92.0], [531.0, 94.0], [530.0, 94.0], [529.0, 93.0], [527.0, 92.0], [513.0, 83.0], [512.0, 82.0], [515.0, 84.0], [514.0, 84.0], [517.0, 85.0], [519.0, 87.0], [518.0, 86.0], [526.0, 91.0], [525.0, 91.0], [524.0, 90.0], [523.0, 89.0], [522.0, 89.0], [521.0, 88.0], [520.0, 87.0], [50.0, 35.48624999999988], [25.0, 17.573202357563893], [510.0, 81.0], [511.0, 81.0], [508.0, 80.0], [507.0, 79.0], [506.0, 79.0], [505.0, 78.0], [504.0, 78.0], [503.0, 77.0], [502.0, 77.0], [501.0, 76.0], [500.0, 284.68428571428444]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[172.62375194142498, 101.77670845351705]], "isOverall": false, "label": "GET-Aggregated", "isController": false}, {"data": [[2.0, 20.0], [3.0, 20.0], [4.0, 20.0], [5.0, 20.0], [6.0, 20.0], [7.0, 20.0], [8.0, 20.0], [9.0, 20.0], [10.0, 20.0], [11.0, 19.0], [12.0, 20.0], [13.0, 20.0], [14.0, 20.0], [25.0, 21.21530724501026], [45.0, 43.0], [47.0, 42.0], [46.0, 43.0], [49.0, 42.0], [48.0, 42.0], [51.0, 198.33333333333331], [50.0, 40.97311577311575], [53.0, 198.33333333333331], [52.0, 197.66666666666669], [55.0, 198.0], [54.0, 198.33333333333331], [57.0, 197.33333333333331], [56.0, 197.33333333333331], [59.0, 197.66666666666669], [58.0, 158.5], [61.0, 197.66666666666669], [60.0, 285.0], [63.0, 197.66666666666669], [62.0, 197.33333333333331], [65.0, 197.0], [67.0, 284.5], [66.0, 284.5], [64.0, 285.0], [71.0, 196.0], [68.0, 196.33333333333331], [70.0, 284.5], [69.0, 284.0], [74.0, 194.33333333333331], [75.0, 526.0], [73.0, 284.0], [72.0, 284.0], [79.0, 526.0], [78.0, 526.0], [77.0, 527.0], [76.0, 527.0], [83.0, 526.0], [82.0, 526.0], [81.0, 526.0], [80.0, 526.0], [87.0, 525.0], [86.0, 526.0], [85.0, 526.0], [84.0, 526.0], [91.0, 525.0], [90.0, 526.0], [89.0, 525.0], [88.0, 525.0], [95.0, 525.0], [94.0, 525.0], [93.0, 525.0], [92.0, 525.0], [99.0, 525.0], [98.0, 524.0], [97.0, 524.0], [96.0, 524.0], [103.0, 524.0], [102.0, 524.0], [101.0, 524.0], [100.0, 525.0], [107.0, 523.0], [106.0, 523.0], [105.0, 524.0], [104.0, 524.0], [111.0, 523.0], [110.0, 523.0], [109.0, 524.0], [108.0, 524.0], [115.0, 523.0], [114.0, 524.0], [113.0, 523.0], [112.0, 523.0], [119.0, 523.0], [118.0, 523.0], [117.0, 523.0], [116.0, 523.0], [123.0, 523.0], [122.0, 523.0], [121.0, 523.0], [120.0, 523.0], [127.0, 523.0], [126.0, 523.0], [125.0, 523.0], [124.0, 522.0], [135.0, 523.0], [134.0, 523.0], [133.0, 523.0], [132.0, 523.0], [131.0, 523.0], [130.0, 523.0], [129.0, 523.0], [128.0, 523.0], [143.0, 522.0], [142.0, 522.0], [141.0, 523.0], [140.0, 523.0], [139.0, 523.0], [138.0, 522.0], [137.0, 522.0], [136.0, 523.0], [151.0, 523.0], [150.0, 523.0], [149.0, 523.0], [148.0, 522.0], [147.0, 522.0], [146.0, 522.0], [145.0, 523.0], [144.0, 522.0], [159.0, 522.0], [158.0, 522.0], [157.0, 522.0], [156.0, 522.0], [155.0, 523.0], [154.0, 523.0], [153.0, 522.0], [152.0, 522.0], [167.0, 524.0], [166.0, 524.0], [165.0, 524.0], [164.0, 524.0], [163.0, 523.0], [162.0, 524.0], [161.0, 523.0], [160.0, 522.0], [175.0, 524.0], [174.0, 523.0], [173.0, 523.0], [172.0, 523.0], [171.0, 524.0], [170.0, 524.0], [169.0, 524.0], [168.0, 523.0], [183.0, 523.0], [182.0, 523.0], [181.0, 523.0], [180.0, 524.0], [179.0, 523.0], [178.0, 523.0], [177.0, 523.0], [176.0, 523.0], [191.0, 523.0], [190.0, 524.0], [189.0, 523.0], [188.0, 523.0], [187.0, 523.0], [186.0, 524.0], [185.0, 524.0], [184.0, 523.0], [199.0, 523.0], [198.0, 523.0], [197.0, 523.0], [196.0, 523.0], [195.0, 523.0], [194.0, 523.0], [193.0, 523.0], [192.0, 523.0], [207.0, 523.0], [206.0, 522.0], [205.0, 522.0], [204.0, 523.0], [203.0, 523.0], [202.0, 523.0], [201.0, 522.0], [200.0, 522.0], [215.0, 522.0], [214.0, 523.0], [213.0, 523.0], [212.0, 523.0], [211.0, 522.0], [210.0, 522.0], [209.0, 522.0], [208.0, 523.0], [223.0, 523.0], [222.0, 523.0], [221.0, 522.0], [220.0, 522.0], [219.0, 522.0], [218.0, 523.0], [217.0, 523.0], [216.0, 522.0], [231.0, 522.0], [230.0, 522.0], [229.0, 522.0], [228.0, 523.0], [227.0, 523.0], [226.0, 522.0], [225.0, 522.0], [224.0, 522.0], [239.0, 521.0], [238.0, 521.0], [237.0, 522.0], [236.0, 522.0], [235.0, 522.0], [234.0, 522.0], [233.0, 522.0], [232.0, 522.0], [247.0, 524.0], [246.0, 523.0], [245.0, 523.0], [244.0, 523.0], [243.0, 523.0], [242.0, 522.0], [241.0, 521.0], [240.0, 521.0], [255.0, 523.0], [254.0, 523.0], [253.0, 523.0], [252.0, 523.0], [251.0, 523.0], [250.0, 523.0], [249.0, 523.0], [248.0, 523.0], [270.0, 523.0], [271.0, 523.0], [269.0, 522.0], [268.0, 522.0], [267.0, 522.0], [266.0, 523.0], [265.0, 523.0], [264.0, 522.0], [263.0, 522.0], [257.0, 522.0], [256.0, 523.0], [259.0, 523.0], [258.0, 523.0], [262.0, 522.0], [261.0, 523.0], [260.0, 523.0], [286.0, 521.0], [287.0, 522.0], [285.0, 521.0], [284.0, 522.0], [283.0, 522.0], [282.0, 522.0], [281.0, 523.0], [280.0, 522.0], [279.0, 522.0], [273.0, 522.0], [272.0, 522.0], [275.0, 522.0], [274.0, 522.0], [278.0, 522.0], [277.0, 522.0], [276.0, 523.0], [302.0, 522.0], [303.0, 522.0], [301.0, 521.0], [300.0, 521.0], [299.0, 521.0], [298.0, 522.0], [297.0, 522.0], [296.0, 521.0], [295.0, 521.0], [289.0, 522.0], [288.0, 522.0], [291.0, 521.0], [290.0, 521.0], [294.0, 521.0], [293.0, 522.0], [292.0, 522.0], [318.0, 520.0], [319.0, 521.0], [317.0, 521.0], [316.0, 521.0], [315.0, 521.0], [314.0, 521.0], [313.0, 521.0], [312.0, 521.0], [311.0, 521.0], [305.0, 521.0], [304.0, 521.0], [307.0, 522.0], [306.0, 521.0], [310.0, 521.0], [309.0, 521.0], [308.0, 521.0], [334.0, 520.0], [335.0, 521.0], [333.0, 520.0], [332.0, 521.0], [331.0, 521.0], [330.0, 521.0], [329.0, 521.0], [328.0, 520.0], [327.0, 521.0], [321.0, 521.0], [320.0, 521.0], [323.0, 520.0], [322.0, 521.0], [326.0, 521.0], [325.0, 521.0], [324.0, 521.0], [350.0, 520.0], [351.0, 520.0], [349.0, 520.0], [348.0, 520.0], [347.0, 520.0], [346.0, 520.0], [345.0, 520.0], [344.0, 520.0], [343.0, 520.0], [337.0, 521.0], [336.0, 521.0], [339.0, 520.0], [338.0, 520.0], [342.0, 521.0], [341.0, 521.0], [340.0, 521.0], [358.0, 519.0], [357.0, 519.0], [356.0, 519.0], [355.0, 520.0], [354.0, 520.0], [353.0, 520.0], [352.0, 520.0], [500.0, 416.45000000000044], [1.0, 21.0]], "isOverall": false, "label": "PUT", "isController": false}, {"data": [[172.15590719613934, 146.25320864414286]], "isOverall": false, "label": "PUT-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 549.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 44007.01666666667, "minX": 1.69620012E12, "maxY": 1.1555564516666668E7, "series": [{"data": [[1.69620012E12, 657728.7666666667], [1.69620024E12, 3274053.066666667], [1.69620018E12, 1.1555564516666668E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69620012E12, 247831.05], [1.69620024E12, 44007.01666666667], [1.69620018E12, 328171.0333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69620024E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 20.488219389725824, "minX": 1.69620012E12, "maxY": 246.8098779657457, "series": [{"data": [[1.69620012E12, 38.59062868233185], [1.69620024E12, 20.522718446601928], [1.69620018E12, 246.8098779657457]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[1.69620012E12, 29.716258503401264], [1.69620024E12, 22.57386583947262], [1.69620018E12, 168.9380284594769]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.69620012E12, 20.966233399265324], [1.69620024E12, 22.604660194174745], [1.69620018E12, 171.52165588615688]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.69620012E12, 44.60202831472914], [1.69620024E12, 20.488219389725824], [1.69620018E12, 241.0801230255952]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69620024E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69620012E12, "maxY": 241.07788145754157, "series": [{"data": [[1.69620012E12, 0.0], [1.69620024E12, 0.0], [1.69620018E12, 0.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[1.69620012E12, 29.714217687074893], [1.69620024E12, 22.57231485071734], [1.69620018E12, 168.93606929263717]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.69620012E12, 20.964608646510367], [1.69620024E12, 22.57009708737868], [1.69620018E12, 171.50152652005195]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.69620012E12, 44.59978219439151], [1.69620024E12, 20.48628814213982], [1.69620018E12, 241.07788145754157]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69620024E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69620012E12, "maxY": 0.04666666666666672, "series": [{"data": [[1.69620012E12, 0.0], [1.69620024E12, 0.0], [1.69620018E12, 0.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[1.69620012E12, 0.04666666666666672], [1.69620024E12, 0.046529662659945764], [1.69620018E12, 0.04232831511651862]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.69620012E12, 0.0], [1.69620024E12, 0.0], [1.69620018E12, 0.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.69620012E12, 0.0], [1.69620024E12, 0.0], [1.69620018E12, 0.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69620024E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.69620012E12, "maxY": 568.0, "series": [{"data": [[1.69620012E12, 449.0], [1.69620024E12, 39.0], [1.69620018E12, 568.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69620012E12, 44.0], [1.69620024E12, 25.0], [1.69620018E12, 42.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69620012E12, 427.0], [1.69620024E12, 33.0], [1.69620018E12, 51.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69620012E12, 262.9500000000007], [1.69620024E12, 27.0], [1.69620018E12, 45.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69620012E12, 4.0], [1.69620024E12, 16.0], [1.69620018E12, 18.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69620012E12, 40.0], [1.69620024E12, 21.0], [1.69620018E12, 22.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69620024E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 18.0, "minX": 134.0, "maxY": 421.0, "series": [{"data": [[920.0, 21.0], [968.0, 41.0], [1043.0, 399.0], [1071.0, 20.0], [1080.0, 22.0], [1055.0, 21.0], [1144.0, 20.0], [1095.0, 20.0], [1134.0, 51.0], [1146.0, 38.5], [1129.0, 43.0], [1148.0, 37.0], [1127.0, 21.0], [1113.0, 21.0], [1093.0, 22.0], [1132.0, 21.0], [1208.0, 409.0], [1189.0, 266.5], [1204.0, 406.0], [1206.0, 41.0], [1203.0, 21.0], [1201.0, 41.0], [1162.0, 42.0], [1200.0, 41.0], [1190.0, 172.5], [1192.0, 410.0], [1191.0, 421.0], [1197.0, 115.0], [1194.0, 20.0], [1184.0, 41.0], [1209.0, 41.0], [1215.0, 20.0], [1179.0, 41.0], [1155.0, 21.0], [1174.0, 21.0], [1168.0, 20.0], [1170.0, 20.0], [1157.0, 41.0], [1159.0, 41.0], [1160.0, 41.0], [1236.0, 20.0], [1231.0, 421.0], [1224.0, 41.0], [1225.0, 41.0], [1393.0, 20.0], [1394.0, 20.0], [1357.0, 40.0], [1390.0, 355.0], [1466.0, 19.0], [1433.0, 22.0], [1430.0, 39.0], [1435.0, 39.0], [1425.0, 40.0], [1427.0, 39.0], [1426.0, 39.0], [1429.0, 40.0], [1452.0, 19.0], [1454.0, 39.0], [1450.0, 39.0], [1442.0, 39.0], [1440.0, 19.0], [1459.0, 19.0], [1423.0, 40.0], [1421.0, 40.0], [1419.0, 39.0], [1414.0, 39.0], [1411.0, 40.0], [1420.0, 39.0], [1439.0, 19.0], [1468.0, 18.0], [1436.0, 19.0], [1437.0, 19.0], [1470.0, 19.0], [1463.0, 18.0], [1460.0, 19.0], [1524.0, 343.0], [1487.0, 18.0], [1488.0, 95.0], [1498.0, 415.0], [1532.0, 343.0], [1525.0, 388.0], [1526.0, 412.5], [1527.0, 348.0], [1530.0, 342.0], [1531.0, 351.0], [1528.0, 348.0], [1503.0, 349.0], [1475.0, 341.0], [1509.0, 351.0], [1507.0, 414.0], [1533.0, 346.0], [1534.0, 374.5], [1521.0, 412.0], [1501.0, 407.0], [134.0, 19.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1534.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 134.0, "maxY": 386.0, "series": [{"data": [[920.0, 20.0], [968.0, 41.0], [1043.0, 386.0], [1071.0, 20.0], [1080.0, 21.0], [1055.0, 21.0], [1144.0, 13.0], [1095.0, 14.0], [1134.0, 51.0], [1146.0, 22.0], [1129.0, 41.0], [1148.0, 22.0], [1127.0, 21.0], [1113.0, 20.0], [1093.0, 22.0], [1132.0, 21.0], [1208.0, 371.0], [1189.0, 41.0], [1204.0, 343.5], [1206.0, 40.0], [1203.0, 20.0], [1201.0, 40.0], [1162.0, 41.0], [1200.0, 40.0], [1190.0, 41.0], [1192.0, 346.0], [1191.0, 344.0], [1197.0, 21.0], [1194.0, 20.0], [1184.0, 41.0], [1209.0, 40.0], [1215.0, 20.0], [1179.0, 41.0], [1155.0, 21.0], [1174.0, 20.0], [1168.0, 20.0], [1170.0, 20.0], [1157.0, 41.0], [1159.0, 41.0], [1160.0, 41.0], [1236.0, 14.0], [1231.0, 379.0], [1224.0, 40.0], [1225.0, 40.0], [1393.0, 15.0], [1394.0, 15.0], [1357.0, 29.0], [1390.0, 214.0], [1466.0, 13.0], [1433.0, 19.0], [1430.0, 28.0], [1435.0, 27.0], [1425.0, 27.0], [1427.0, 29.0], [1426.0, 29.0], [1429.0, 27.0], [1452.0, 13.0], [1454.0, 28.0], [1450.0, 28.0], [1442.0, 27.0], [1440.0, 14.0], [1459.0, 14.0], [1423.0, 28.0], [1421.0, 28.0], [1419.0, 29.0], [1414.0, 29.0], [1411.0, 29.0], [1420.0, 29.0], [1439.0, 13.0], [1468.0, 13.0], [1436.0, 13.0], [1437.0, 14.0], [1470.0, 13.0], [1463.0, 13.0], [1460.0, 13.0], [1524.0, 278.5], [1487.0, 13.0], [1488.0, 17.0], [1498.0, 254.0], [1532.0, 276.0], [1525.0, 218.0], [1526.0, 219.0], [1527.0, 292.0], [1530.0, 328.0], [1531.0, 237.0], [1528.0, 226.0], [1503.0, 348.0], [1475.0, 328.0], [1509.0, 231.0], [1507.0, 280.0], [1533.0, 276.0], [1534.0, 218.0], [1521.0, 265.0], [1501.0, 227.0], [134.0, 16.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1534.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 171.55, "minX": 1.69620012E12, "maxY": 1275.3666666666666, "series": [{"data": [[1.69620012E12, 974.5833333333334], [1.69620024E12, 171.55], [1.69620018E12, 1275.3666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69620024E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 42.916666666666664, "minX": 1.69620012E12, "maxY": 641.8, "series": [{"data": [[1.69620012E12, 480.8], [1.69620024E12, 86.06666666666666], [1.69620018E12, 641.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69620012E12, 245.0], [1.69620024E12, 42.983333333333334], [1.69620018E12, 323.26666666666665]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.69620012E12, 240.45], [1.69620024E12, 42.916666666666664], [1.69620018E12, 318.21666666666664]], "isOverall": false, "label": "204", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69620024E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 42.916666666666664, "minX": 1.69620012E12, "maxY": 323.26666666666665, "series": [{"data": [[1.69620012E12, 240.45], [1.69620024E12, 42.916666666666664], [1.69620018E12, 318.21666666666664]], "isOverall": false, "label": "DELETE-success", "isController": false}, {"data": [[1.69620012E12, 245.0], [1.69620024E12, 42.983333333333334], [1.69620018E12, 323.26666666666665]], "isOverall": false, "label": "POST-success", "isController": false}, {"data": [[1.69620012E12, 235.93333333333334], [1.69620024E12, 42.916666666666664], [1.69620018E12, 322.0833333333333]], "isOverall": false, "label": "GET-success", "isController": false}, {"data": [[1.69620012E12, 244.86666666666667], [1.69620024E12, 43.15], [1.69620018E12, 319.71666666666664]], "isOverall": false, "label": "PUT-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69620024E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 171.96666666666667, "minX": 1.69620012E12, "maxY": 1283.2833333333333, "series": [{"data": [[1.69620012E12, 966.25], [1.69620024E12, 171.96666666666667], [1.69620018E12, 1283.2833333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69620024E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

