/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 584.0, "series": [{"data": [[0.0, 11.0], [0.1, 16.0], [0.2, 18.0], [0.3, 19.0], [0.4, 19.0], [0.5, 19.0], [0.6, 19.0], [0.7, 19.0], [0.8, 19.0], [0.9, 19.0], [1.0, 19.0], [1.1, 19.0], [1.2, 20.0], [1.3, 20.0], [1.4, 20.0], [1.5, 20.0], [1.6, 20.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 20.0], [2.1, 20.0], [2.2, 20.0], [2.3, 20.0], [2.4, 20.0], [2.5, 20.0], [2.6, 20.0], [2.7, 20.0], [2.8, 20.0], [2.9, 20.0], [3.0, 20.0], [3.1, 20.0], [3.2, 20.0], [3.3, 20.0], [3.4, 20.0], [3.5, 20.0], [3.6, 20.0], [3.7, 20.0], [3.8, 20.0], [3.9, 20.0], [4.0, 20.0], [4.1, 20.0], [4.2, 20.0], [4.3, 20.0], [4.4, 20.0], [4.5, 20.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 20.0], [7.2, 20.0], [7.3, 20.0], [7.4, 20.0], [7.5, 20.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 20.0], [10.0, 20.0], [10.1, 20.0], [10.2, 20.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 20.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 20.0], [11.4, 20.0], [11.5, 20.0], [11.6, 20.0], [11.7, 20.0], [11.8, 20.0], [11.9, 20.0], [12.0, 21.0], [12.1, 21.0], [12.2, 21.0], [12.3, 21.0], [12.4, 21.0], [12.5, 21.0], [12.6, 21.0], [12.7, 21.0], [12.8, 21.0], [12.9, 21.0], [13.0, 21.0], [13.1, 21.0], [13.2, 21.0], [13.3, 21.0], [13.4, 21.0], [13.5, 21.0], [13.6, 21.0], [13.7, 21.0], [13.8, 21.0], [13.9, 21.0], [14.0, 21.0], [14.1, 21.0], [14.2, 21.0], [14.3, 21.0], [14.4, 21.0], [14.5, 21.0], [14.6, 21.0], [14.7, 21.0], [14.8, 21.0], [14.9, 21.0], [15.0, 21.0], [15.1, 21.0], [15.2, 21.0], [15.3, 21.0], [15.4, 21.0], [15.5, 21.0], [15.6, 21.0], [15.7, 21.0], [15.8, 21.0], [15.9, 21.0], [16.0, 21.0], [16.1, 21.0], [16.2, 21.0], [16.3, 21.0], [16.4, 21.0], [16.5, 21.0], [16.6, 21.0], [16.7, 21.0], [16.8, 21.0], [16.9, 21.0], [17.0, 21.0], [17.1, 21.0], [17.2, 21.0], [17.3, 21.0], [17.4, 21.0], [17.5, 21.0], [17.6, 21.0], [17.7, 21.0], [17.8, 21.0], [17.9, 21.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 21.0], [18.4, 21.0], [18.5, 21.0], [18.6, 21.0], [18.7, 21.0], [18.8, 21.0], [18.9, 21.0], [19.0, 21.0], [19.1, 21.0], [19.2, 21.0], [19.3, 21.0], [19.4, 21.0], [19.5, 21.0], [19.6, 21.0], [19.7, 21.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 21.0], [20.3, 21.0], [20.4, 21.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 21.0], [22.0, 21.0], [22.1, 21.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 21.0], [23.9, 21.0], [24.0, 21.0], [24.1, 21.0], [24.2, 21.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 22.0], [28.6, 22.0], [28.7, 22.0], [28.8, 22.0], [28.9, 22.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 22.0], [33.2, 22.0], [33.3, 22.0], [33.4, 22.0], [33.5, 22.0], [33.6, 22.0], [33.7, 22.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 23.0], [34.3, 23.0], [34.4, 23.0], [34.5, 23.0], [34.6, 23.0], [34.7, 23.0], [34.8, 24.0], [34.9, 24.0], [35.0, 24.0], [35.1, 24.0], [35.2, 25.0], [35.3, 25.0], [35.4, 27.0], [35.5, 30.0], [35.6, 39.0], [35.7, 40.0], [35.8, 40.0], [35.9, 40.0], [36.0, 40.0], [36.1, 40.0], [36.2, 40.0], [36.3, 40.0], [36.4, 40.0], [36.5, 40.0], [36.6, 40.0], [36.7, 40.0], [36.8, 40.0], [36.9, 40.0], [37.0, 40.0], [37.1, 40.0], [37.2, 40.0], [37.3, 40.0], [37.4, 40.0], [37.5, 41.0], [37.6, 41.0], [37.7, 41.0], [37.8, 41.0], [37.9, 41.0], [38.0, 41.0], [38.1, 41.0], [38.2, 41.0], [38.3, 41.0], [38.4, 41.0], [38.5, 41.0], [38.6, 41.0], [38.7, 41.0], [38.8, 41.0], [38.9, 41.0], [39.0, 41.0], [39.1, 41.0], [39.2, 41.0], [39.3, 41.0], [39.4, 41.0], [39.5, 41.0], [39.6, 41.0], [39.7, 41.0], [39.8, 41.0], [39.9, 41.0], [40.0, 41.0], [40.1, 41.0], [40.2, 41.0], [40.3, 41.0], [40.4, 41.0], [40.5, 41.0], [40.6, 41.0], [40.7, 41.0], [40.8, 41.0], [40.9, 41.0], [41.0, 41.0], [41.1, 41.0], [41.2, 41.0], [41.3, 41.0], [41.4, 41.0], [41.5, 41.0], [41.6, 41.0], [41.7, 41.0], [41.8, 41.0], [41.9, 41.0], [42.0, 41.0], [42.1, 41.0], [42.2, 41.0], [42.3, 41.0], [42.4, 41.0], [42.5, 41.0], [42.6, 41.0], [42.7, 41.0], [42.8, 41.0], [42.9, 41.0], [43.0, 41.0], [43.1, 41.0], [43.2, 41.0], [43.3, 41.0], [43.4, 41.0], [43.5, 41.0], [43.6, 41.0], [43.7, 41.0], [43.8, 41.0], [43.9, 41.0], [44.0, 41.0], [44.1, 41.0], [44.2, 41.0], [44.3, 41.0], [44.4, 41.0], [44.5, 41.0], [44.6, 41.0], [44.7, 42.0], [44.8, 42.0], [44.9, 42.0], [45.0, 42.0], [45.1, 42.0], [45.2, 42.0], [45.3, 42.0], [45.4, 42.0], [45.5, 42.0], [45.6, 42.0], [45.7, 42.0], [45.8, 42.0], [45.9, 42.0], [46.0, 42.0], [46.1, 42.0], [46.2, 42.0], [46.3, 42.0], [46.4, 42.0], [46.5, 42.0], [46.6, 42.0], [46.7, 42.0], [46.8, 42.0], [46.9, 42.0], [47.0, 42.0], [47.1, 42.0], [47.2, 42.0], [47.3, 42.0], [47.4, 42.0], [47.5, 42.0], [47.6, 42.0], [47.7, 42.0], [47.8, 42.0], [47.9, 42.0], [48.0, 42.0], [48.1, 42.0], [48.2, 42.0], [48.3, 42.0], [48.4, 42.0], [48.5, 42.0], [48.6, 42.0], [48.7, 42.0], [48.8, 42.0], [48.9, 42.0], [49.0, 42.0], [49.1, 42.0], [49.2, 42.0], [49.3, 42.0], [49.4, 42.0], [49.5, 42.0], [49.6, 42.0], [49.7, 42.0], [49.8, 42.0], [49.9, 42.0], [50.0, 42.0], [50.1, 42.0], [50.2, 42.0], [50.3, 42.0], [50.4, 42.0], [50.5, 42.0], [50.6, 42.0], [50.7, 42.0], [50.8, 42.0], [50.9, 42.0], [51.0, 42.0], [51.1, 42.0], [51.2, 42.0], [51.3, 42.0], [51.4, 42.0], [51.5, 42.0], [51.6, 42.0], [51.7, 42.0], [51.8, 42.0], [51.9, 42.0], [52.0, 42.0], [52.1, 42.0], [52.2, 42.0], [52.3, 42.0], [52.4, 42.0], [52.5, 42.0], [52.6, 42.0], [52.7, 42.0], [52.8, 42.0], [52.9, 42.0], [53.0, 42.0], [53.1, 42.0], [53.2, 42.0], [53.3, 42.0], [53.4, 42.0], [53.5, 42.0], [53.6, 42.0], [53.7, 42.0], [53.8, 42.0], [53.9, 42.0], [54.0, 42.0], [54.1, 42.0], [54.2, 42.0], [54.3, 42.0], [54.4, 42.0], [54.5, 42.0], [54.6, 42.0], [54.7, 42.0], [54.8, 42.0], [54.9, 42.0], [55.0, 42.0], [55.1, 42.0], [55.2, 42.0], [55.3, 42.0], [55.4, 42.0], [55.5, 42.0], [55.6, 42.0], [55.7, 42.0], [55.8, 42.0], [55.9, 42.0], [56.0, 42.0], [56.1, 42.0], [56.2, 42.0], [56.3, 42.0], [56.4, 42.0], [56.5, 42.0], [56.6, 42.0], [56.7, 42.0], [56.8, 42.0], [56.9, 42.0], [57.0, 42.0], [57.1, 42.0], [57.2, 42.0], [57.3, 42.0], [57.4, 42.0], [57.5, 42.0], [57.6, 42.0], [57.7, 42.0], [57.8, 42.0], [57.9, 42.0], [58.0, 43.0], [58.1, 43.0], [58.2, 43.0], [58.3, 43.0], [58.4, 43.0], [58.5, 43.0], [58.6, 43.0], [58.7, 43.0], [58.8, 43.0], [58.9, 43.0], [59.0, 43.0], [59.1, 43.0], [59.2, 43.0], [59.3, 43.0], [59.4, 43.0], [59.5, 43.0], [59.6, 43.0], [59.7, 43.0], [59.8, 43.0], [59.9, 43.0], [60.0, 43.0], [60.1, 43.0], [60.2, 43.0], [60.3, 43.0], [60.4, 43.0], [60.5, 43.0], [60.6, 43.0], [60.7, 43.0], [60.8, 43.0], [60.9, 43.0], [61.0, 43.0], [61.1, 43.0], [61.2, 43.0], [61.3, 43.0], [61.4, 43.0], [61.5, 43.0], [61.6, 43.0], [61.7, 43.0], [61.8, 43.0], [61.9, 43.0], [62.0, 43.0], [62.1, 43.0], [62.2, 43.0], [62.3, 43.0], [62.4, 43.0], [62.5, 43.0], [62.6, 43.0], [62.7, 43.0], [62.8, 43.0], [62.9, 43.0], [63.0, 43.0], [63.1, 43.0], [63.2, 43.0], [63.3, 43.0], [63.4, 43.0], [63.5, 43.0], [63.6, 43.0], [63.7, 43.0], [63.8, 43.0], [63.9, 43.0], [64.0, 43.0], [64.1, 43.0], [64.2, 43.0], [64.3, 43.0], [64.4, 43.0], [64.5, 43.0], [64.6, 43.0], [64.7, 43.0], [64.8, 43.0], [64.9, 43.0], [65.0, 43.0], [65.1, 43.0], [65.2, 43.0], [65.3, 43.0], [65.4, 43.0], [65.5, 43.0], [65.6, 43.0], [65.7, 43.0], [65.8, 43.0], [65.9, 43.0], [66.0, 43.0], [66.1, 43.0], [66.2, 43.0], [66.3, 43.0], [66.4, 43.0], [66.5, 43.0], [66.6, 43.0], [66.7, 44.0], [66.8, 44.0], [66.9, 44.0], [67.0, 44.0], [67.1, 44.0], [67.2, 44.0], [67.3, 44.0], [67.4, 44.0], [67.5, 44.0], [67.6, 44.0], [67.7, 44.0], [67.8, 44.0], [67.9, 44.0], [68.0, 44.0], [68.1, 44.0], [68.2, 44.0], [68.3, 44.0], [68.4, 44.0], [68.5, 44.0], [68.6, 44.0], [68.7, 44.0], [68.8, 44.0], [68.9, 44.0], [69.0, 44.0], [69.1, 44.0], [69.2, 45.0], [69.3, 45.0], [69.4, 45.0], [69.5, 45.0], [69.6, 45.0], [69.7, 45.0], [69.8, 45.0], [69.9, 45.0], [70.0, 45.0], [70.1, 45.0], [70.2, 45.0], [70.3, 45.0], [70.4, 45.0], [70.5, 45.0], [70.6, 46.0], [70.7, 46.0], [70.8, 46.0], [70.9, 46.0], [71.0, 46.0], [71.1, 46.0], [71.2, 46.0], [71.3, 47.0], [71.4, 47.0], [71.5, 47.0], [71.6, 47.0], [71.7, 48.0], [71.8, 49.0], [71.9, 50.0], [72.0, 139.0], [72.1, 152.0], [72.2, 202.0], [72.3, 402.0], [72.4, 403.0], [72.5, 404.0], [72.6, 405.0], [72.7, 406.0], [72.8, 406.0], [72.9, 407.0], [73.0, 407.0], [73.1, 407.0], [73.2, 408.0], [73.3, 408.0], [73.4, 409.0], [73.5, 409.0], [73.6, 409.0], [73.7, 410.0], [73.8, 410.0], [73.9, 410.0], [74.0, 411.0], [74.1, 411.0], [74.2, 411.0], [74.3, 412.0], [74.4, 412.0], [74.5, 412.0], [74.6, 413.0], [74.7, 413.0], [74.8, 413.0], [74.9, 414.0], [75.0, 414.0], [75.1, 414.0], [75.2, 414.0], [75.3, 414.0], [75.4, 414.0], [75.5, 415.0], [75.6, 415.0], [75.7, 415.0], [75.8, 415.0], [75.9, 415.0], [76.0, 415.0], [76.1, 415.0], [76.2, 415.0], [76.3, 415.0], [76.4, 416.0], [76.5, 416.0], [76.6, 416.0], [76.7, 416.0], [76.8, 416.0], [76.9, 416.0], [77.0, 416.0], [77.1, 416.0], [77.2, 416.0], [77.3, 416.0], [77.4, 416.0], [77.5, 416.0], [77.6, 417.0], [77.7, 417.0], [77.8, 417.0], [77.9, 417.0], [78.0, 417.0], [78.1, 417.0], [78.2, 417.0], [78.3, 417.0], [78.4, 418.0], [78.5, 418.0], [78.6, 418.0], [78.7, 418.0], [78.8, 418.0], [78.9, 418.0], [79.0, 418.0], [79.1, 418.0], [79.2, 418.0], [79.3, 419.0], [79.4, 419.0], [79.5, 419.0], [79.6, 419.0], [79.7, 419.0], [79.8, 419.0], [79.9, 419.0], [80.0, 419.0], [80.1, 419.0], [80.2, 419.0], [80.3, 419.0], [80.4, 419.0], [80.5, 419.0], [80.6, 420.0], [80.7, 420.0], [80.8, 420.0], [80.9, 420.0], [81.0, 420.0], [81.1, 420.0], [81.2, 420.0], [81.3, 420.0], [81.4, 420.0], [81.5, 420.0], [81.6, 420.0], [81.7, 420.0], [81.8, 420.0], [81.9, 421.0], [82.0, 421.0], [82.1, 421.0], [82.2, 421.0], [82.3, 421.0], [82.4, 421.0], [82.5, 421.0], [82.6, 421.0], [82.7, 421.0], [82.8, 421.0], [82.9, 421.0], [83.0, 421.0], [83.1, 421.0], [83.2, 422.0], [83.3, 422.0], [83.4, 422.0], [83.5, 422.0], [83.6, 422.0], [83.7, 422.0], [83.8, 422.0], [83.9, 422.0], [84.0, 422.0], [84.1, 422.0], [84.2, 422.0], [84.3, 422.0], [84.4, 422.0], [84.5, 422.0], [84.6, 423.0], [84.7, 423.0], [84.8, 423.0], [84.9, 423.0], [85.0, 423.0], [85.1, 423.0], [85.2, 423.0], [85.3, 423.0], [85.4, 423.0], [85.5, 423.0], [85.6, 423.0], [85.7, 423.0], [85.8, 423.0], [85.9, 423.0], [86.0, 423.0], [86.1, 423.0], [86.2, 423.0], [86.3, 424.0], [86.4, 424.0], [86.5, 424.0], [86.6, 424.0], [86.7, 424.0], [86.8, 424.0], [86.9, 424.0], [87.0, 424.0], [87.1, 424.0], [87.2, 424.0], [87.3, 424.0], [87.4, 424.0], [87.5, 424.0], [87.6, 424.0], [87.7, 424.0], [87.8, 425.0], [87.9, 425.0], [88.0, 425.0], [88.1, 425.0], [88.2, 425.0], [88.3, 425.0], [88.4, 425.0], [88.5, 425.0], [88.6, 425.0], [88.7, 425.0], [88.8, 425.0], [88.9, 425.0], [89.0, 425.0], [89.1, 425.0], [89.2, 425.0], [89.3, 425.0], [89.4, 425.0], [89.5, 425.0], [89.6, 426.0], [89.7, 426.0], [89.8, 426.0], [89.9, 426.0], [90.0, 426.0], [90.1, 426.0], [90.2, 426.0], [90.3, 426.0], [90.4, 426.0], [90.5, 426.0], [90.6, 426.0], [90.7, 426.0], [90.8, 427.0], [90.9, 427.0], [91.0, 427.0], [91.1, 427.0], [91.2, 427.0], [91.3, 427.0], [91.4, 427.0], [91.5, 427.0], [91.6, 427.0], [91.7, 427.0], [91.8, 427.0], [91.9, 428.0], [92.0, 428.0], [92.1, 428.0], [92.2, 428.0], [92.3, 428.0], [92.4, 428.0], [92.5, 428.0], [92.6, 428.0], [92.7, 428.0], [92.8, 428.0], [92.9, 429.0], [93.0, 429.0], [93.1, 429.0], [93.2, 429.0], [93.3, 429.0], [93.4, 429.0], [93.5, 429.0], [93.6, 429.0], [93.7, 429.0], [93.8, 430.0], [93.9, 430.0], [94.0, 430.0], [94.1, 430.0], [94.2, 430.0], [94.3, 430.0], [94.4, 430.0], [94.5, 430.0], [94.6, 430.0], [94.7, 430.0], [94.8, 430.0], [94.9, 431.0], [95.0, 431.0], [95.1, 431.0], [95.2, 431.0], [95.3, 431.0], [95.4, 431.0], [95.5, 431.0], [95.6, 431.0], [95.7, 431.0], [95.8, 431.0], [95.9, 431.0], [96.0, 432.0], [96.1, 432.0], [96.2, 432.0], [96.3, 432.0], [96.4, 432.0], [96.5, 432.0], [96.6, 432.0], [96.7, 432.0], [96.8, 433.0], [96.9, 433.0], [97.0, 433.0], [97.1, 434.0], [97.2, 434.0], [97.3, 434.0], [97.4, 434.0], [97.5, 434.0], [97.6, 434.0], [97.7, 434.0], [97.8, 435.0], [97.9, 435.0], [98.0, 435.0], [98.1, 435.0], [98.2, 435.0], [98.3, 436.0], [98.4, 436.0], [98.5, 436.0], [98.6, 437.0], [98.7, 437.0], [98.8, 438.0], [98.9, 439.0], [99.0, 442.0], [99.1, 443.0], [99.2, 444.0], [99.3, 445.0], [99.4, 451.0], [99.5, 455.0], [99.6, 459.0], [99.7, 461.0], [99.8, 463.0], [99.9, 463.0], [100.0, 464.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[0.0, 5.0], [0.1, 7.0], [0.2, 7.0], [0.3, 7.0], [0.4, 7.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 12.0], [6.2, 12.0], [6.3, 12.0], [6.4, 12.0], [6.5, 12.0], [6.6, 12.0], [6.7, 12.0], [6.8, 12.0], [6.9, 12.0], [7.0, 12.0], [7.1, 12.0], [7.2, 12.0], [7.3, 12.0], [7.4, 12.0], [7.5, 12.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 15.0], [15.6, 15.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 15.0], [17.6, 15.0], [17.7, 15.0], [17.8, 15.0], [17.9, 15.0], [18.0, 15.0], [18.1, 15.0], [18.2, 15.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 15.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 16.0], [19.6, 16.0], [19.7, 16.0], [19.8, 16.0], [19.9, 16.0], [20.0, 16.0], [20.1, 16.0], [20.2, 16.0], [20.3, 16.0], [20.4, 16.0], [20.5, 16.0], [20.6, 16.0], [20.7, 16.0], [20.8, 16.0], [20.9, 16.0], [21.0, 16.0], [21.1, 16.0], [21.2, 16.0], [21.3, 16.0], [21.4, 16.0], [21.5, 16.0], [21.6, 16.0], [21.7, 16.0], [21.8, 16.0], [21.9, 16.0], [22.0, 16.0], [22.1, 16.0], [22.2, 16.0], [22.3, 16.0], [22.4, 16.0], [22.5, 16.0], [22.6, 17.0], [22.7, 17.0], [22.8, 17.0], [22.9, 17.0], [23.0, 17.0], [23.1, 17.0], [23.2, 17.0], [23.3, 17.0], [23.4, 17.0], [23.5, 17.0], [23.6, 17.0], [23.7, 17.0], [23.8, 17.0], [23.9, 17.0], [24.0, 17.0], [24.1, 17.0], [24.2, 17.0], [24.3, 17.0], [24.4, 17.0], [24.5, 17.0], [24.6, 17.0], [24.7, 17.0], [24.8, 17.0], [24.9, 17.0], [25.0, 17.0], [25.1, 17.0], [25.2, 17.0], [25.3, 17.0], [25.4, 17.0], [25.5, 17.0], [25.6, 17.0], [25.7, 17.0], [25.8, 17.0], [25.9, 17.0], [26.0, 17.0], [26.1, 17.0], [26.2, 17.0], [26.3, 18.0], [26.4, 18.0], [26.5, 18.0], [26.6, 18.0], [26.7, 18.0], [26.8, 18.0], [26.9, 18.0], [27.0, 18.0], [27.1, 18.0], [27.2, 18.0], [27.3, 18.0], [27.4, 18.0], [27.5, 18.0], [27.6, 18.0], [27.7, 18.0], [27.8, 18.0], [27.9, 18.0], [28.0, 18.0], [28.1, 18.0], [28.2, 18.0], [28.3, 18.0], [28.4, 18.0], [28.5, 18.0], [28.6, 18.0], [28.7, 18.0], [28.8, 18.0], [28.9, 18.0], [29.0, 18.0], [29.1, 18.0], [29.2, 18.0], [29.3, 18.0], [29.4, 18.0], [29.5, 18.0], [29.6, 18.0], [29.7, 18.0], [29.8, 18.0], [29.9, 18.0], [30.0, 18.0], [30.1, 18.0], [30.2, 18.0], [30.3, 18.0], [30.4, 18.0], [30.5, 19.0], [30.6, 19.0], [30.7, 19.0], [30.8, 19.0], [30.9, 19.0], [31.0, 19.0], [31.1, 19.0], [31.2, 19.0], [31.3, 19.0], [31.4, 19.0], [31.5, 19.0], [31.6, 19.0], [31.7, 19.0], [31.8, 19.0], [31.9, 19.0], [32.0, 19.0], [32.1, 19.0], [32.2, 19.0], [32.3, 19.0], [32.4, 19.0], [32.5, 19.0], [32.6, 19.0], [32.7, 19.0], [32.8, 19.0], [32.9, 19.0], [33.0, 19.0], [33.1, 19.0], [33.2, 19.0], [33.3, 19.0], [33.4, 19.0], [33.5, 19.0], [33.6, 19.0], [33.7, 19.0], [33.8, 19.0], [33.9, 19.0], [34.0, 19.0], [34.1, 19.0], [34.2, 19.0], [34.3, 19.0], [34.4, 19.0], [34.5, 20.0], [34.6, 20.0], [34.7, 20.0], [34.8, 20.0], [34.9, 20.0], [35.0, 20.0], [35.1, 20.0], [35.2, 20.0], [35.3, 20.0], [35.4, 20.0], [35.5, 20.0], [35.6, 20.0], [35.7, 20.0], [35.8, 20.0], [35.9, 20.0], [36.0, 20.0], [36.1, 20.0], [36.2, 20.0], [36.3, 20.0], [36.4, 20.0], [36.5, 20.0], [36.6, 20.0], [36.7, 20.0], [36.8, 20.0], [36.9, 20.0], [37.0, 20.0], [37.1, 20.0], [37.2, 20.0], [37.3, 20.0], [37.4, 20.0], [37.5, 21.0], [37.6, 21.0], [37.7, 21.0], [37.8, 21.0], [37.9, 21.0], [38.0, 21.0], [38.1, 21.0], [38.2, 21.0], [38.3, 21.0], [38.4, 21.0], [38.5, 21.0], [38.6, 21.0], [38.7, 21.0], [38.8, 21.0], [38.9, 21.0], [39.0, 21.0], [39.1, 21.0], [39.2, 21.0], [39.3, 22.0], [39.4, 22.0], [39.5, 22.0], [39.6, 22.0], [39.7, 22.0], [39.8, 22.0], [39.9, 22.0], [40.0, 22.0], [40.1, 22.0], [40.2, 22.0], [40.3, 22.0], [40.4, 22.0], [40.5, 22.0], [40.6, 22.0], [40.7, 22.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 24.0], [42.3, 24.0], [42.4, 24.0], [42.5, 24.0], [42.6, 24.0], [42.7, 24.0], [42.8, 24.0], [42.9, 24.0], [43.0, 24.0], [43.1, 24.0], [43.2, 24.0], [43.3, 24.0], [43.4, 24.0], [43.5, 24.0], [43.6, 24.0], [43.7, 25.0], [43.8, 25.0], [43.9, 25.0], [44.0, 25.0], [44.1, 25.0], [44.2, 25.0], [44.3, 25.0], [44.4, 25.0], [44.5, 25.0], [44.6, 25.0], [44.7, 25.0], [44.8, 25.0], [44.9, 25.0], [45.0, 25.0], [45.1, 25.0], [45.2, 25.0], [45.3, 26.0], [45.4, 26.0], [45.5, 26.0], [45.6, 26.0], [45.7, 26.0], [45.8, 26.0], [45.9, 26.0], [46.0, 26.0], [46.1, 26.0], [46.2, 26.0], [46.3, 26.0], [46.4, 26.0], [46.5, 26.0], [46.6, 26.0], [46.7, 26.0], [46.8, 26.0], [46.9, 26.0], [47.0, 27.0], [47.1, 27.0], [47.2, 27.0], [47.3, 27.0], [47.4, 27.0], [47.5, 27.0], [47.6, 27.0], [47.7, 27.0], [47.8, 27.0], [47.9, 27.0], [48.0, 27.0], [48.1, 27.0], [48.2, 27.0], [48.3, 27.0], [48.4, 27.0], [48.5, 27.0], [48.6, 27.0], [48.7, 27.0], [48.8, 28.0], [48.9, 28.0], [49.0, 28.0], [49.1, 28.0], [49.2, 28.0], [49.3, 28.0], [49.4, 28.0], [49.5, 28.0], [49.6, 28.0], [49.7, 28.0], [49.8, 28.0], [49.9, 28.0], [50.0, 28.0], [50.1, 28.0], [50.2, 28.0], [50.3, 28.0], [50.4, 28.0], [50.5, 28.0], [50.6, 28.0], [50.7, 29.0], [50.8, 29.0], [50.9, 29.0], [51.0, 29.0], [51.1, 29.0], [51.2, 29.0], [51.3, 29.0], [51.4, 29.0], [51.5, 29.0], [51.6, 29.0], [51.7, 29.0], [51.8, 29.0], [51.9, 29.0], [52.0, 29.0], [52.1, 29.0], [52.2, 29.0], [52.3, 29.0], [52.4, 30.0], [52.5, 30.0], [52.6, 30.0], [52.7, 30.0], [52.8, 30.0], [52.9, 30.0], [53.0, 30.0], [53.1, 30.0], [53.2, 30.0], [53.3, 30.0], [53.4, 30.0], [53.5, 30.0], [53.6, 30.0], [53.7, 30.0], [53.8, 30.0], [53.9, 30.0], [54.0, 30.0], [54.1, 30.0], [54.2, 31.0], [54.3, 31.0], [54.4, 31.0], [54.5, 31.0], [54.6, 31.0], [54.7, 31.0], [54.8, 31.0], [54.9, 31.0], [55.0, 31.0], [55.1, 31.0], [55.2, 31.0], [55.3, 31.0], [55.4, 31.0], [55.5, 31.0], [55.6, 31.0], [55.7, 31.0], [55.8, 31.0], [55.9, 31.0], [56.0, 32.0], [56.1, 32.0], [56.2, 32.0], [56.3, 32.0], [56.4, 32.0], [56.5, 32.0], [56.6, 32.0], [56.7, 32.0], [56.8, 32.0], [56.9, 32.0], [57.0, 32.0], [57.1, 32.0], [57.2, 32.0], [57.3, 32.0], [57.4, 32.0], [57.5, 32.0], [57.6, 32.0], [57.7, 33.0], [57.8, 33.0], [57.9, 33.0], [58.0, 33.0], [58.1, 33.0], [58.2, 33.0], [58.3, 33.0], [58.4, 33.0], [58.5, 33.0], [58.6, 33.0], [58.7, 33.0], [58.8, 33.0], [58.9, 33.0], [59.0, 33.0], [59.1, 33.0], [59.2, 33.0], [59.3, 33.0], [59.4, 33.0], [59.5, 34.0], [59.6, 34.0], [59.7, 34.0], [59.8, 34.0], [59.9, 34.0], [60.0, 34.0], [60.1, 34.0], [60.2, 34.0], [60.3, 34.0], [60.4, 34.0], [60.5, 34.0], [60.6, 34.0], [60.7, 34.0], [60.8, 34.0], [60.9, 34.0], [61.0, 34.0], [61.1, 34.0], [61.2, 35.0], [61.3, 35.0], [61.4, 35.0], [61.5, 35.0], [61.6, 35.0], [61.7, 35.0], [61.8, 35.0], [61.9, 35.0], [62.0, 35.0], [62.1, 35.0], [62.2, 35.0], [62.3, 35.0], [62.4, 35.0], [62.5, 35.0], [62.6, 35.0], [62.7, 35.0], [62.8, 35.0], [62.9, 35.0], [63.0, 35.0], [63.1, 36.0], [63.2, 36.0], [63.3, 36.0], [63.4, 36.0], [63.5, 36.0], [63.6, 36.0], [63.7, 36.0], [63.8, 36.0], [63.9, 36.0], [64.0, 36.0], [64.1, 36.0], [64.2, 36.0], [64.3, 36.0], [64.4, 36.0], [64.5, 36.0], [64.6, 36.0], [64.7, 36.0], [64.8, 36.0], [64.9, 37.0], [65.0, 37.0], [65.1, 37.0], [65.2, 37.0], [65.3, 37.0], [65.4, 37.0], [65.5, 37.0], [65.6, 37.0], [65.7, 37.0], [65.8, 37.0], [65.9, 37.0], [66.0, 37.0], [66.1, 37.0], [66.2, 37.0], [66.3, 37.0], [66.4, 37.0], [66.5, 37.0], [66.6, 37.0], [66.7, 38.0], [66.8, 38.0], [66.9, 38.0], [67.0, 38.0], [67.1, 38.0], [67.2, 38.0], [67.3, 38.0], [67.4, 38.0], [67.5, 38.0], [67.6, 38.0], [67.7, 38.0], [67.8, 38.0], [67.9, 38.0], [68.0, 38.0], [68.1, 38.0], [68.2, 38.0], [68.3, 38.0], [68.4, 39.0], [68.5, 39.0], [68.6, 39.0], [68.7, 39.0], [68.8, 39.0], [68.9, 39.0], [69.0, 39.0], [69.1, 39.0], [69.2, 39.0], [69.3, 39.0], [69.4, 39.0], [69.5, 39.0], [69.6, 39.0], [69.7, 39.0], [69.8, 39.0], [69.9, 39.0], [70.0, 39.0], [70.1, 40.0], [70.2, 40.0], [70.3, 40.0], [70.4, 40.0], [70.5, 40.0], [70.6, 40.0], [70.7, 40.0], [70.8, 40.0], [70.9, 40.0], [71.0, 40.0], [71.1, 41.0], [71.2, 41.0], [71.3, 41.0], [71.4, 41.0], [71.5, 41.0], [71.6, 42.0], [71.7, 42.0], [71.8, 44.0], [71.9, 59.0], [72.0, 102.0], [72.1, 132.0], [72.2, 148.0], [72.3, 157.0], [72.4, 167.0], [72.5, 176.0], [72.6, 180.0], [72.7, 182.0], [72.8, 184.0], [72.9, 185.0], [73.0, 187.0], [73.1, 188.0], [73.2, 189.0], [73.3, 191.0], [73.4, 192.0], [73.5, 193.0], [73.6, 193.0], [73.7, 194.0], [73.8, 195.0], [73.9, 196.0], [74.0, 197.0], [74.1, 198.0], [74.2, 198.0], [74.3, 199.0], [74.4, 200.0], [74.5, 201.0], [74.6, 202.0], [74.7, 203.0], [74.8, 204.0], [74.9, 204.0], [75.0, 205.0], [75.1, 206.0], [75.2, 206.0], [75.3, 207.0], [75.4, 208.0], [75.5, 209.0], [75.6, 209.0], [75.7, 210.0], [75.8, 211.0], [75.9, 212.0], [76.0, 212.0], [76.1, 213.0], [76.2, 214.0], [76.3, 215.0], [76.4, 215.0], [76.5, 216.0], [76.6, 217.0], [76.7, 218.0], [76.8, 218.0], [76.9, 219.0], [77.0, 220.0], [77.1, 221.0], [77.2, 222.0], [77.3, 222.0], [77.4, 223.0], [77.5, 224.0], [77.6, 224.0], [77.7, 225.0], [77.8, 226.0], [77.9, 226.0], [78.0, 227.0], [78.1, 228.0], [78.2, 229.0], [78.3, 230.0], [78.4, 230.0], [78.5, 231.0], [78.6, 232.0], [78.7, 233.0], [78.8, 233.0], [78.9, 234.0], [79.0, 235.0], [79.1, 236.0], [79.2, 236.0], [79.3, 237.0], [79.4, 238.0], [79.5, 239.0], [79.6, 239.0], [79.7, 240.0], [79.8, 241.0], [79.9, 242.0], [80.0, 243.0], [80.1, 243.0], [80.2, 244.0], [80.3, 245.0], [80.4, 246.0], [80.5, 247.0], [80.6, 247.0], [80.7, 248.0], [80.8, 249.0], [80.9, 250.0], [81.0, 250.0], [81.1, 251.0], [81.2, 252.0], [81.3, 253.0], [81.4, 253.0], [81.5, 254.0], [81.6, 255.0], [81.7, 256.0], [81.8, 256.0], [81.9, 257.0], [82.0, 258.0], [82.1, 258.0], [82.2, 259.0], [82.3, 260.0], [82.4, 260.0], [82.5, 261.0], [82.6, 262.0], [82.7, 263.0], [82.8, 264.0], [82.9, 264.0], [83.0, 265.0], [83.1, 266.0], [83.2, 267.0], [83.3, 268.0], [83.4, 268.0], [83.5, 269.0], [83.6, 270.0], [83.7, 271.0], [83.8, 271.0], [83.9, 272.0], [84.0, 273.0], [84.1, 274.0], [84.2, 274.0], [84.3, 275.0], [84.4, 276.0], [84.5, 277.0], [84.6, 277.0], [84.7, 278.0], [84.8, 279.0], [84.9, 279.0], [85.0, 280.0], [85.1, 281.0], [85.2, 282.0], [85.3, 283.0], [85.4, 284.0], [85.5, 284.0], [85.6, 285.0], [85.7, 286.0], [85.8, 287.0], [85.9, 287.0], [86.0, 288.0], [86.1, 289.0], [86.2, 290.0], [86.3, 291.0], [86.4, 291.0], [86.5, 292.0], [86.6, 293.0], [86.7, 294.0], [86.8, 295.0], [86.9, 295.0], [87.0, 296.0], [87.1, 297.0], [87.2, 298.0], [87.3, 298.0], [87.4, 299.0], [87.5, 300.0], [87.6, 301.0], [87.7, 301.0], [87.8, 302.0], [87.9, 303.0], [88.0, 304.0], [88.1, 305.0], [88.2, 305.0], [88.3, 306.0], [88.4, 307.0], [88.5, 308.0], [88.6, 309.0], [88.7, 309.0], [88.8, 310.0], [88.9, 311.0], [89.0, 312.0], [89.1, 313.0], [89.2, 313.0], [89.3, 314.0], [89.4, 315.0], [89.5, 316.0], [89.6, 317.0], [89.7, 317.0], [89.8, 318.0], [89.9, 319.0], [90.0, 319.0], [90.1, 320.0], [90.2, 321.0], [90.3, 322.0], [90.4, 323.0], [90.5, 323.0], [90.6, 324.0], [90.7, 325.0], [90.8, 326.0], [90.9, 327.0], [91.0, 328.0], [91.1, 328.0], [91.2, 329.0], [91.3, 330.0], [91.4, 331.0], [91.5, 332.0], [91.6, 333.0], [91.7, 333.0], [91.8, 334.0], [91.9, 335.0], [92.0, 335.0], [92.1, 336.0], [92.2, 337.0], [92.3, 338.0], [92.4, 339.0], [92.5, 339.0], [92.6, 340.0], [92.7, 341.0], [92.8, 342.0], [92.9, 343.0], [93.0, 343.0], [93.1, 344.0], [93.2, 345.0], [93.3, 346.0], [93.4, 347.0], [93.5, 347.0], [93.6, 348.0], [93.7, 349.0], [93.8, 350.0], [93.9, 351.0], [94.0, 351.0], [94.1, 352.0], [94.2, 353.0], [94.3, 354.0], [94.4, 355.0], [94.5, 356.0], [94.6, 356.0], [94.7, 357.0], [94.8, 358.0], [94.9, 359.0], [95.0, 360.0], [95.1, 361.0], [95.2, 361.0], [95.3, 362.0], [95.4, 363.0], [95.5, 364.0], [95.6, 364.0], [95.7, 365.0], [95.8, 366.0], [95.9, 367.0], [96.0, 368.0], [96.1, 369.0], [96.2, 370.0], [96.3, 370.0], [96.4, 371.0], [96.5, 372.0], [96.6, 373.0], [96.7, 373.0], [96.8, 374.0], [96.9, 375.0], [97.0, 376.0], [97.1, 377.0], [97.2, 378.0], [97.3, 379.0], [97.4, 379.0], [97.5, 380.0], [97.6, 381.0], [97.7, 382.0], [97.8, 383.0], [97.9, 384.0], [98.0, 385.0], [98.1, 386.0], [98.2, 386.0], [98.3, 387.0], [98.4, 388.0], [98.5, 389.0], [98.6, 390.0], [98.7, 391.0], [98.8, 392.0], [98.9, 392.0], [99.0, 393.0], [99.1, 394.0], [99.2, 395.0], [99.3, 396.0], [99.4, 397.0], [99.5, 399.0], [99.6, 401.0], [99.7, 404.0], [99.8, 409.0], [99.9, 436.0], [100.0, 583.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[0.0, 4.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 7.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 7.0], [1.1, 7.0], [1.2, 7.0], [1.3, 7.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 9.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 10.0], [5.6, 10.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 13.0], [12.3, 13.0], [12.4, 13.0], [12.5, 13.0], [12.6, 13.0], [12.7, 13.0], [12.8, 13.0], [12.9, 13.0], [13.0, 13.0], [13.1, 13.0], [13.2, 13.0], [13.3, 13.0], [13.4, 13.0], [13.5, 13.0], [13.6, 13.0], [13.7, 13.0], [13.8, 13.0], [13.9, 13.0], [14.0, 13.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 15.0], [17.6, 15.0], [17.7, 15.0], [17.8, 15.0], [17.9, 15.0], [18.0, 15.0], [18.1, 15.0], [18.2, 15.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 15.0], [18.7, 15.0], [18.8, 15.0], [18.9, 15.0], [19.0, 15.0], [19.1, 15.0], [19.2, 15.0], [19.3, 15.0], [19.4, 15.0], [19.5, 15.0], [19.6, 15.0], [19.7, 15.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 16.0], [21.3, 16.0], [21.4, 16.0], [21.5, 16.0], [21.6, 16.0], [21.7, 16.0], [21.8, 16.0], [21.9, 16.0], [22.0, 16.0], [22.1, 16.0], [22.2, 16.0], [22.3, 16.0], [22.4, 16.0], [22.5, 16.0], [22.6, 16.0], [22.7, 16.0], [22.8, 16.0], [22.9, 16.0], [23.0, 16.0], [23.1, 16.0], [23.2, 16.0], [23.3, 16.0], [23.4, 16.0], [23.5, 16.0], [23.6, 16.0], [23.7, 16.0], [23.8, 16.0], [23.9, 16.0], [24.0, 16.0], [24.1, 16.0], [24.2, 16.0], [24.3, 16.0], [24.4, 16.0], [24.5, 16.0], [24.6, 16.0], [24.7, 16.0], [24.8, 16.0], [24.9, 16.0], [25.0, 17.0], [25.1, 17.0], [25.2, 17.0], [25.3, 17.0], [25.4, 17.0], [25.5, 17.0], [25.6, 17.0], [25.7, 17.0], [25.8, 17.0], [25.9, 17.0], [26.0, 17.0], [26.1, 17.0], [26.2, 17.0], [26.3, 17.0], [26.4, 17.0], [26.5, 17.0], [26.6, 17.0], [26.7, 17.0], [26.8, 17.0], [26.9, 17.0], [27.0, 17.0], [27.1, 17.0], [27.2, 17.0], [27.3, 17.0], [27.4, 17.0], [27.5, 17.0], [27.6, 17.0], [27.7, 17.0], [27.8, 17.0], [27.9, 17.0], [28.0, 17.0], [28.1, 17.0], [28.2, 17.0], [28.3, 17.0], [28.4, 17.0], [28.5, 17.0], [28.6, 17.0], [28.7, 17.0], [28.8, 17.0], [28.9, 18.0], [29.0, 18.0], [29.1, 18.0], [29.2, 18.0], [29.3, 18.0], [29.4, 18.0], [29.5, 18.0], [29.6, 18.0], [29.7, 18.0], [29.8, 18.0], [29.9, 18.0], [30.0, 18.0], [30.1, 18.0], [30.2, 18.0], [30.3, 18.0], [30.4, 18.0], [30.5, 18.0], [30.6, 18.0], [30.7, 18.0], [30.8, 18.0], [30.9, 18.0], [31.0, 18.0], [31.1, 18.0], [31.2, 18.0], [31.3, 18.0], [31.4, 18.0], [31.5, 18.0], [31.6, 18.0], [31.7, 18.0], [31.8, 18.0], [31.9, 18.0], [32.0, 18.0], [32.1, 18.0], [32.2, 18.0], [32.3, 18.0], [32.4, 18.0], [32.5, 18.0], [32.6, 18.0], [32.7, 19.0], [32.8, 19.0], [32.9, 19.0], [33.0, 19.0], [33.1, 19.0], [33.2, 19.0], [33.3, 19.0], [33.4, 19.0], [33.5, 19.0], [33.6, 19.0], [33.7, 19.0], [33.8, 19.0], [33.9, 19.0], [34.0, 19.0], [34.1, 19.0], [34.2, 19.0], [34.3, 19.0], [34.4, 19.0], [34.5, 19.0], [34.6, 19.0], [34.7, 19.0], [34.8, 19.0], [34.9, 19.0], [35.0, 19.0], [35.1, 19.0], [35.2, 19.0], [35.3, 19.0], [35.4, 19.0], [35.5, 19.0], [35.6, 19.0], [35.7, 19.0], [35.8, 19.0], [35.9, 19.0], [36.0, 19.0], [36.1, 19.0], [36.2, 19.0], [36.3, 20.0], [36.4, 20.0], [36.5, 20.0], [36.6, 20.0], [36.7, 20.0], [36.8, 20.0], [36.9, 20.0], [37.0, 20.0], [37.1, 20.0], [37.2, 20.0], [37.3, 20.0], [37.4, 20.0], [37.5, 20.0], [37.6, 20.0], [37.7, 20.0], [37.8, 20.0], [37.9, 20.0], [38.0, 20.0], [38.1, 20.0], [38.2, 20.0], [38.3, 20.0], [38.4, 20.0], [38.5, 20.0], [38.6, 20.0], [38.7, 20.0], [38.8, 20.0], [38.9, 20.0], [39.0, 21.0], [39.1, 21.0], [39.2, 21.0], [39.3, 21.0], [39.4, 21.0], [39.5, 21.0], [39.6, 21.0], [39.7, 21.0], [39.8, 21.0], [39.9, 21.0], [40.0, 21.0], [40.1, 21.0], [40.2, 21.0], [40.3, 21.0], [40.4, 21.0], [40.5, 21.0], [40.6, 21.0], [40.7, 22.0], [40.8, 22.0], [40.9, 22.0], [41.0, 22.0], [41.1, 22.0], [41.2, 22.0], [41.3, 22.0], [41.4, 22.0], [41.5, 22.0], [41.6, 22.0], [41.7, 22.0], [41.8, 22.0], [41.9, 22.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 23.0], [42.6, 23.0], [42.7, 23.0], [42.8, 23.0], [42.9, 23.0], [43.0, 23.0], [43.1, 23.0], [43.2, 23.0], [43.3, 24.0], [43.4, 24.0], [43.5, 24.0], [43.6, 24.0], [43.7, 24.0], [43.8, 24.0], [43.9, 24.0], [44.0, 24.0], [44.1, 24.0], [44.2, 24.0], [44.3, 24.0], [44.4, 24.0], [44.5, 24.0], [44.6, 24.0], [44.7, 24.0], [44.8, 24.0], [44.9, 25.0], [45.0, 25.0], [45.1, 25.0], [45.2, 25.0], [45.3, 25.0], [45.4, 25.0], [45.5, 25.0], [45.6, 25.0], [45.7, 25.0], [45.8, 25.0], [45.9, 25.0], [46.0, 25.0], [46.1, 25.0], [46.2, 25.0], [46.3, 25.0], [46.4, 26.0], [46.5, 26.0], [46.6, 26.0], [46.7, 26.0], [46.8, 26.0], [46.9, 26.0], [47.0, 26.0], [47.1, 26.0], [47.2, 26.0], [47.3, 26.0], [47.4, 26.0], [47.5, 26.0], [47.6, 26.0], [47.7, 26.0], [47.8, 26.0], [47.9, 26.0], [48.0, 27.0], [48.1, 27.0], [48.2, 27.0], [48.3, 27.0], [48.4, 27.0], [48.5, 27.0], [48.6, 27.0], [48.7, 27.0], [48.8, 27.0], [48.9, 27.0], [49.0, 27.0], [49.1, 27.0], [49.2, 27.0], [49.3, 27.0], [49.4, 27.0], [49.5, 27.0], [49.6, 28.0], [49.7, 28.0], [49.8, 28.0], [49.9, 28.0], [50.0, 28.0], [50.1, 28.0], [50.2, 28.0], [50.3, 28.0], [50.4, 28.0], [50.5, 28.0], [50.6, 28.0], [50.7, 28.0], [50.8, 28.0], [50.9, 28.0], [51.0, 28.0], [51.1, 29.0], [51.2, 29.0], [51.3, 29.0], [51.4, 29.0], [51.5, 29.0], [51.6, 29.0], [51.7, 29.0], [51.8, 29.0], [51.9, 29.0], [52.0, 29.0], [52.1, 29.0], [52.2, 29.0], [52.3, 29.0], [52.4, 29.0], [52.5, 29.0], [52.6, 29.0], [52.7, 29.0], [52.8, 30.0], [52.9, 30.0], [53.0, 30.0], [53.1, 30.0], [53.2, 30.0], [53.3, 30.0], [53.4, 30.0], [53.5, 30.0], [53.6, 30.0], [53.7, 30.0], [53.8, 30.0], [53.9, 30.0], [54.0, 30.0], [54.1, 30.0], [54.2, 30.0], [54.3, 30.0], [54.4, 31.0], [54.5, 31.0], [54.6, 31.0], [54.7, 31.0], [54.8, 31.0], [54.9, 31.0], [55.0, 31.0], [55.1, 31.0], [55.2, 31.0], [55.3, 31.0], [55.4, 31.0], [55.5, 31.0], [55.6, 31.0], [55.7, 31.0], [55.8, 31.0], [55.9, 31.0], [56.0, 32.0], [56.1, 32.0], [56.2, 32.0], [56.3, 32.0], [56.4, 32.0], [56.5, 32.0], [56.6, 32.0], [56.7, 32.0], [56.8, 32.0], [56.9, 32.0], [57.0, 32.0], [57.1, 32.0], [57.2, 32.0], [57.3, 32.0], [57.4, 32.0], [57.5, 32.0], [57.6, 33.0], [57.7, 33.0], [57.8, 33.0], [57.9, 33.0], [58.0, 33.0], [58.1, 33.0], [58.2, 33.0], [58.3, 33.0], [58.4, 33.0], [58.5, 33.0], [58.6, 33.0], [58.7, 33.0], [58.8, 33.0], [58.9, 33.0], [59.0, 33.0], [59.1, 33.0], [59.2, 33.0], [59.3, 34.0], [59.4, 34.0], [59.5, 34.0], [59.6, 34.0], [59.7, 34.0], [59.8, 34.0], [59.9, 34.0], [60.0, 34.0], [60.1, 34.0], [60.2, 34.0], [60.3, 34.0], [60.4, 34.0], [60.5, 34.0], [60.6, 34.0], [60.7, 34.0], [60.8, 34.0], [60.9, 35.0], [61.0, 35.0], [61.1, 35.0], [61.2, 35.0], [61.3, 35.0], [61.4, 35.0], [61.5, 35.0], [61.6, 35.0], [61.7, 35.0], [61.8, 35.0], [61.9, 35.0], [62.0, 35.0], [62.1, 35.0], [62.2, 35.0], [62.3, 35.0], [62.4, 35.0], [62.5, 36.0], [62.6, 36.0], [62.7, 36.0], [62.8, 36.0], [62.9, 36.0], [63.0, 36.0], [63.1, 36.0], [63.2, 36.0], [63.3, 36.0], [63.4, 36.0], [63.5, 36.0], [63.6, 36.0], [63.7, 36.0], [63.8, 36.0], [63.9, 36.0], [64.0, 36.0], [64.1, 36.0], [64.2, 37.0], [64.3, 37.0], [64.4, 37.0], [64.5, 37.0], [64.6, 37.0], [64.7, 37.0], [64.8, 37.0], [64.9, 37.0], [65.0, 37.0], [65.1, 37.0], [65.2, 37.0], [65.3, 37.0], [65.4, 37.0], [65.5, 37.0], [65.6, 37.0], [65.7, 37.0], [65.8, 38.0], [65.9, 38.0], [66.0, 38.0], [66.1, 38.0], [66.2, 38.0], [66.3, 38.0], [66.4, 38.0], [66.5, 38.0], [66.6, 38.0], [66.7, 38.0], [66.8, 38.0], [66.9, 38.0], [67.0, 38.0], [67.1, 38.0], [67.2, 38.0], [67.3, 38.0], [67.4, 39.0], [67.5, 39.0], [67.6, 39.0], [67.7, 39.0], [67.8, 39.0], [67.9, 39.0], [68.0, 39.0], [68.1, 39.0], [68.2, 39.0], [68.3, 39.0], [68.4, 39.0], [68.5, 39.0], [68.6, 39.0], [68.7, 39.0], [68.8, 39.0], [68.9, 39.0], [69.0, 40.0], [69.1, 40.0], [69.2, 40.0], [69.3, 40.0], [69.4, 40.0], [69.5, 40.0], [69.6, 40.0], [69.7, 40.0], [69.8, 40.0], [69.9, 40.0], [70.0, 40.0], [70.1, 40.0], [70.2, 40.0], [70.3, 40.0], [70.4, 41.0], [70.5, 41.0], [70.6, 41.0], [70.7, 41.0], [70.8, 41.0], [70.9, 41.0], [71.0, 41.0], [71.1, 41.0], [71.2, 41.0], [71.3, 41.0], [71.4, 42.0], [71.5, 42.0], [71.6, 42.0], [71.7, 42.0], [71.8, 42.0], [71.9, 43.0], [72.0, 44.0], [72.1, 47.0], [72.2, 150.0], [72.3, 171.0], [72.4, 178.0], [72.5, 180.0], [72.6, 182.0], [72.7, 183.0], [72.8, 185.0], [72.9, 186.0], [73.0, 188.0], [73.1, 189.0], [73.2, 190.0], [73.3, 191.0], [73.4, 192.0], [73.5, 193.0], [73.6, 194.0], [73.7, 195.0], [73.8, 196.0], [73.9, 197.0], [74.0, 198.0], [74.1, 199.0], [74.2, 200.0], [74.3, 201.0], [74.4, 202.0], [74.5, 203.0], [74.6, 204.0], [74.7, 205.0], [74.8, 206.0], [74.9, 207.0], [75.0, 208.0], [75.1, 208.0], [75.2, 209.0], [75.3, 210.0], [75.4, 211.0], [75.5, 212.0], [75.6, 213.0], [75.7, 214.0], [75.8, 214.0], [75.9, 215.0], [76.0, 216.0], [76.1, 217.0], [76.2, 218.0], [76.3, 219.0], [76.4, 220.0], [76.5, 220.0], [76.6, 221.0], [76.7, 222.0], [76.8, 223.0], [76.9, 224.0], [77.0, 225.0], [77.1, 225.0], [77.2, 226.0], [77.3, 227.0], [77.4, 228.0], [77.5, 229.0], [77.6, 230.0], [77.7, 230.0], [77.8, 231.0], [77.9, 232.0], [78.0, 233.0], [78.1, 234.0], [78.2, 235.0], [78.3, 236.0], [78.4, 236.0], [78.5, 237.0], [78.6, 238.0], [78.7, 239.0], [78.8, 240.0], [78.9, 240.0], [79.0, 241.0], [79.1, 242.0], [79.2, 243.0], [79.3, 244.0], [79.4, 245.0], [79.5, 245.0], [79.6, 246.0], [79.7, 247.0], [79.8, 248.0], [79.9, 248.0], [80.0, 249.0], [80.1, 250.0], [80.2, 251.0], [80.3, 251.0], [80.4, 252.0], [80.5, 253.0], [80.6, 254.0], [80.7, 255.0], [80.8, 256.0], [80.9, 256.0], [81.0, 257.0], [81.1, 258.0], [81.2, 259.0], [81.3, 260.0], [81.4, 261.0], [81.5, 262.0], [81.6, 262.0], [81.7, 263.0], [81.8, 264.0], [81.9, 265.0], [82.0, 266.0], [82.1, 267.0], [82.2, 268.0], [82.3, 268.0], [82.4, 269.0], [82.5, 270.0], [82.6, 271.0], [82.7, 272.0], [82.8, 273.0], [82.9, 274.0], [83.0, 275.0], [83.1, 275.0], [83.2, 276.0], [83.3, 277.0], [83.4, 278.0], [83.5, 279.0], [83.6, 279.0], [83.7, 280.0], [83.8, 281.0], [83.9, 282.0], [84.0, 283.0], [84.1, 283.0], [84.2, 284.0], [84.3, 285.0], [84.4, 286.0], [84.5, 287.0], [84.6, 288.0], [84.7, 289.0], [84.8, 290.0], [84.9, 290.0], [85.0, 291.0], [85.1, 292.0], [85.2, 293.0], [85.3, 294.0], [85.4, 295.0], [85.5, 296.0], [85.6, 297.0], [85.7, 297.0], [85.8, 298.0], [85.9, 299.0], [86.0, 300.0], [86.1, 301.0], [86.2, 302.0], [86.3, 302.0], [86.4, 303.0], [86.5, 304.0], [86.6, 305.0], [86.7, 306.0], [86.8, 307.0], [86.9, 307.0], [87.0, 308.0], [87.1, 309.0], [87.2, 310.0], [87.3, 311.0], [87.4, 311.0], [87.5, 312.0], [87.6, 313.0], [87.7, 314.0], [87.8, 314.0], [87.9, 315.0], [88.0, 316.0], [88.1, 317.0], [88.2, 318.0], [88.3, 319.0], [88.4, 319.0], [88.5, 320.0], [88.6, 321.0], [88.7, 322.0], [88.8, 323.0], [88.9, 324.0], [89.0, 324.0], [89.1, 325.0], [89.2, 326.0], [89.3, 327.0], [89.4, 328.0], [89.5, 329.0], [89.6, 329.0], [89.7, 330.0], [89.8, 331.0], [89.9, 332.0], [90.0, 333.0], [90.1, 334.0], [90.2, 335.0], [90.3, 335.0], [90.4, 336.0], [90.5, 337.0], [90.6, 338.0], [90.7, 339.0], [90.8, 340.0], [90.9, 341.0], [91.0, 342.0], [91.1, 342.0], [91.2, 343.0], [91.3, 344.0], [91.4, 345.0], [91.5, 346.0], [91.6, 347.0], [91.7, 347.0], [91.8, 348.0], [91.9, 349.0], [92.0, 350.0], [92.1, 350.0], [92.2, 351.0], [92.3, 352.0], [92.4, 353.0], [92.5, 353.0], [92.6, 354.0], [92.7, 355.0], [92.8, 356.0], [92.9, 357.0], [93.0, 358.0], [93.1, 358.0], [93.2, 359.0], [93.3, 360.0], [93.4, 361.0], [93.5, 362.0], [93.6, 363.0], [93.7, 363.0], [93.8, 364.0], [93.9, 365.0], [94.0, 366.0], [94.1, 367.0], [94.2, 368.0], [94.3, 368.0], [94.4, 369.0], [94.5, 370.0], [94.6, 371.0], [94.7, 372.0], [94.8, 372.0], [94.9, 373.0], [95.0, 374.0], [95.1, 375.0], [95.2, 376.0], [95.3, 377.0], [95.4, 378.0], [95.5, 378.0], [95.6, 379.0], [95.7, 380.0], [95.8, 381.0], [95.9, 381.0], [96.0, 382.0], [96.1, 383.0], [96.2, 384.0], [96.3, 384.0], [96.4, 385.0], [96.5, 386.0], [96.6, 387.0], [96.7, 388.0], [96.8, 388.0], [96.9, 389.0], [97.0, 390.0], [97.1, 391.0], [97.2, 392.0], [97.3, 392.0], [97.4, 393.0], [97.5, 394.0], [97.6, 395.0], [97.7, 396.0], [97.8, 396.0], [97.9, 397.0], [98.0, 398.0], [98.1, 399.0], [98.2, 400.0], [98.3, 401.0], [98.4, 401.0], [98.5, 402.0], [98.6, 403.0], [98.7, 404.0], [98.8, 405.0], [98.9, 406.0], [99.0, 407.0], [99.1, 408.0], [99.2, 409.0], [99.3, 410.0], [99.4, 411.0], [99.5, 412.0], [99.6, 413.0], [99.7, 415.0], [99.8, 416.0], [99.9, 418.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[0.0, 15.0], [0.1, 18.0], [0.2, 19.0], [0.3, 19.0], [0.4, 19.0], [0.5, 19.0], [0.6, 19.0], [0.7, 19.0], [0.8, 19.0], [0.9, 19.0], [1.0, 19.0], [1.1, 19.0], [1.2, 19.0], [1.3, 19.0], [1.4, 19.0], [1.5, 19.0], [1.6, 19.0], [1.7, 19.0], [1.8, 19.0], [1.9, 19.0], [2.0, 19.0], [2.1, 19.0], [2.2, 19.0], [2.3, 19.0], [2.4, 19.0], [2.5, 20.0], [2.6, 20.0], [2.7, 20.0], [2.8, 20.0], [2.9, 20.0], [3.0, 20.0], [3.1, 20.0], [3.2, 20.0], [3.3, 20.0], [3.4, 20.0], [3.5, 20.0], [3.6, 20.0], [3.7, 20.0], [3.8, 20.0], [3.9, 20.0], [4.0, 20.0], [4.1, 20.0], [4.2, 20.0], [4.3, 20.0], [4.4, 20.0], [4.5, 20.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 20.0], [7.2, 20.0], [7.3, 20.0], [7.4, 20.0], [7.5, 20.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 20.0], [10.0, 20.0], [10.1, 20.0], [10.2, 20.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 20.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 20.0], [11.4, 20.0], [11.5, 20.0], [11.6, 20.0], [11.7, 20.0], [11.8, 20.0], [11.9, 20.0], [12.0, 20.0], [12.1, 20.0], [12.2, 20.0], [12.3, 20.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 20.0], [12.8, 20.0], [12.9, 20.0], [13.0, 20.0], [13.1, 20.0], [13.2, 20.0], [13.3, 20.0], [13.4, 20.0], [13.5, 20.0], [13.6, 20.0], [13.7, 20.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 20.0], [14.3, 20.0], [14.4, 20.0], [14.5, 20.0], [14.6, 20.0], [14.7, 20.0], [14.8, 20.0], [14.9, 20.0], [15.0, 20.0], [15.1, 20.0], [15.2, 20.0], [15.3, 20.0], [15.4, 20.0], [15.5, 20.0], [15.6, 20.0], [15.7, 20.0], [15.8, 20.0], [15.9, 20.0], [16.0, 20.0], [16.1, 20.0], [16.2, 20.0], [16.3, 21.0], [16.4, 21.0], [16.5, 21.0], [16.6, 21.0], [16.7, 21.0], [16.8, 21.0], [16.9, 21.0], [17.0, 21.0], [17.1, 21.0], [17.2, 21.0], [17.3, 21.0], [17.4, 21.0], [17.5, 21.0], [17.6, 21.0], [17.7, 21.0], [17.8, 21.0], [17.9, 21.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 21.0], [18.4, 21.0], [18.5, 21.0], [18.6, 21.0], [18.7, 21.0], [18.8, 21.0], [18.9, 21.0], [19.0, 21.0], [19.1, 21.0], [19.2, 21.0], [19.3, 21.0], [19.4, 21.0], [19.5, 21.0], [19.6, 21.0], [19.7, 21.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 21.0], [20.3, 21.0], [20.4, 21.0], [20.5, 21.0], [20.6, 21.0], [20.7, 21.0], [20.8, 21.0], [20.9, 21.0], [21.0, 21.0], [21.1, 21.0], [21.2, 21.0], [21.3, 21.0], [21.4, 21.0], [21.5, 21.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 21.0], [22.0, 21.0], [22.1, 21.0], [22.2, 21.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 21.0], [23.9, 21.0], [24.0, 21.0], [24.1, 21.0], [24.2, 21.0], [24.3, 21.0], [24.4, 21.0], [24.5, 21.0], [24.6, 21.0], [24.7, 21.0], [24.8, 21.0], [24.9, 21.0], [25.0, 21.0], [25.1, 21.0], [25.2, 21.0], [25.3, 21.0], [25.4, 21.0], [25.5, 21.0], [25.6, 21.0], [25.7, 21.0], [25.8, 21.0], [25.9, 21.0], [26.0, 21.0], [26.1, 21.0], [26.2, 21.0], [26.3, 21.0], [26.4, 21.0], [26.5, 21.0], [26.6, 21.0], [26.7, 21.0], [26.8, 21.0], [26.9, 21.0], [27.0, 21.0], [27.1, 21.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 21.0], [27.6, 21.0], [27.7, 21.0], [27.8, 21.0], [27.9, 21.0], [28.0, 21.0], [28.1, 21.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 21.0], [28.8, 21.0], [28.9, 21.0], [29.0, 21.0], [29.1, 21.0], [29.2, 21.0], [29.3, 21.0], [29.4, 22.0], [29.5, 22.0], [29.6, 22.0], [29.7, 22.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 22.0], [30.3, 22.0], [30.4, 22.0], [30.5, 22.0], [30.6, 22.0], [30.7, 22.0], [30.8, 22.0], [30.9, 22.0], [31.0, 22.0], [31.1, 22.0], [31.2, 22.0], [31.3, 22.0], [31.4, 22.0], [31.5, 22.0], [31.6, 22.0], [31.7, 22.0], [31.8, 22.0], [31.9, 22.0], [32.0, 22.0], [32.1, 22.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 22.0], [32.7, 22.0], [32.8, 22.0], [32.9, 22.0], [33.0, 22.0], [33.1, 22.0], [33.2, 22.0], [33.3, 22.0], [33.4, 22.0], [33.5, 22.0], [33.6, 22.0], [33.7, 23.0], [33.8, 23.0], [33.9, 23.0], [34.0, 23.0], [34.1, 23.0], [34.2, 23.0], [34.3, 23.0], [34.4, 23.0], [34.5, 23.0], [34.6, 23.0], [34.7, 23.0], [34.8, 24.0], [34.9, 24.0], [35.0, 24.0], [35.1, 24.0], [35.2, 24.0], [35.3, 26.0], [35.4, 27.0], [35.5, 37.0], [35.6, 38.0], [35.7, 38.0], [35.8, 39.0], [35.9, 39.0], [36.0, 39.0], [36.1, 39.0], [36.2, 39.0], [36.3, 39.0], [36.4, 39.0], [36.5, 39.0], [36.6, 39.0], [36.7, 39.0], [36.8, 39.0], [36.9, 39.0], [37.0, 39.0], [37.1, 39.0], [37.2, 39.0], [37.3, 39.0], [37.4, 39.0], [37.5, 39.0], [37.6, 39.0], [37.7, 39.0], [37.8, 39.0], [37.9, 39.0], [38.0, 39.0], [38.1, 39.0], [38.2, 39.0], [38.3, 39.0], [38.4, 39.0], [38.5, 39.0], [38.6, 39.0], [38.7, 39.0], [38.8, 39.0], [38.9, 39.0], [39.0, 39.0], [39.1, 39.0], [39.2, 39.0], [39.3, 39.0], [39.4, 39.0], [39.5, 40.0], [39.6, 40.0], [39.7, 40.0], [39.8, 40.0], [39.9, 40.0], [40.0, 40.0], [40.1, 40.0], [40.2, 40.0], [40.3, 40.0], [40.4, 40.0], [40.5, 40.0], [40.6, 40.0], [40.7, 40.0], [40.8, 40.0], [40.9, 40.0], [41.0, 40.0], [41.1, 40.0], [41.2, 40.0], [41.3, 40.0], [41.4, 40.0], [41.5, 40.0], [41.6, 40.0], [41.7, 40.0], [41.8, 40.0], [41.9, 40.0], [42.0, 40.0], [42.1, 40.0], [42.2, 40.0], [42.3, 40.0], [42.4, 40.0], [42.5, 40.0], [42.6, 40.0], [42.7, 40.0], [42.8, 40.0], [42.9, 40.0], [43.0, 40.0], [43.1, 40.0], [43.2, 40.0], [43.3, 40.0], [43.4, 40.0], [43.5, 40.0], [43.6, 40.0], [43.7, 40.0], [43.8, 40.0], [43.9, 40.0], [44.0, 40.0], [44.1, 40.0], [44.2, 40.0], [44.3, 40.0], [44.4, 40.0], [44.5, 40.0], [44.6, 40.0], [44.7, 40.0], [44.8, 40.0], [44.9, 40.0], [45.0, 40.0], [45.1, 40.0], [45.2, 40.0], [45.3, 40.0], [45.4, 40.0], [45.5, 40.0], [45.6, 40.0], [45.7, 40.0], [45.8, 40.0], [45.9, 40.0], [46.0, 40.0], [46.1, 40.0], [46.2, 40.0], [46.3, 40.0], [46.4, 40.0], [46.5, 40.0], [46.6, 40.0], [46.7, 40.0], [46.8, 40.0], [46.9, 40.0], [47.0, 40.0], [47.1, 40.0], [47.2, 40.0], [47.3, 40.0], [47.4, 40.0], [47.5, 40.0], [47.6, 40.0], [47.7, 40.0], [47.8, 40.0], [47.9, 40.0], [48.0, 40.0], [48.1, 40.0], [48.2, 40.0], [48.3, 40.0], [48.4, 40.0], [48.5, 40.0], [48.6, 40.0], [48.7, 40.0], [48.8, 40.0], [48.9, 40.0], [49.0, 40.0], [49.1, 40.0], [49.2, 40.0], [49.3, 40.0], [49.4, 40.0], [49.5, 40.0], [49.6, 40.0], [49.7, 41.0], [49.8, 41.0], [49.9, 41.0], [50.0, 41.0], [50.1, 41.0], [50.2, 41.0], [50.3, 41.0], [50.4, 41.0], [50.5, 41.0], [50.6, 41.0], [50.7, 41.0], [50.8, 41.0], [50.9, 41.0], [51.0, 41.0], [51.1, 41.0], [51.2, 41.0], [51.3, 41.0], [51.4, 41.0], [51.5, 41.0], [51.6, 41.0], [51.7, 41.0], [51.8, 41.0], [51.9, 41.0], [52.0, 41.0], [52.1, 41.0], [52.2, 41.0], [52.3, 41.0], [52.4, 41.0], [52.5, 41.0], [52.6, 41.0], [52.7, 41.0], [52.8, 41.0], [52.9, 41.0], [53.0, 41.0], [53.1, 41.0], [53.2, 41.0], [53.3, 41.0], [53.4, 41.0], [53.5, 41.0], [53.6, 41.0], [53.7, 41.0], [53.8, 41.0], [53.9, 41.0], [54.0, 41.0], [54.1, 41.0], [54.2, 41.0], [54.3, 41.0], [54.4, 41.0], [54.5, 41.0], [54.6, 41.0], [54.7, 41.0], [54.8, 41.0], [54.9, 41.0], [55.0, 41.0], [55.1, 41.0], [55.2, 41.0], [55.3, 41.0], [55.4, 41.0], [55.5, 41.0], [55.6, 41.0], [55.7, 41.0], [55.8, 41.0], [55.9, 41.0], [56.0, 41.0], [56.1, 41.0], [56.2, 41.0], [56.3, 41.0], [56.4, 41.0], [56.5, 41.0], [56.6, 41.0], [56.7, 41.0], [56.8, 41.0], [56.9, 41.0], [57.0, 41.0], [57.1, 41.0], [57.2, 41.0], [57.3, 41.0], [57.4, 41.0], [57.5, 41.0], [57.6, 41.0], [57.7, 41.0], [57.8, 41.0], [57.9, 41.0], [58.0, 41.0], [58.1, 41.0], [58.2, 41.0], [58.3, 41.0], [58.4, 41.0], [58.5, 41.0], [58.6, 41.0], [58.7, 41.0], [58.8, 41.0], [58.9, 41.0], [59.0, 41.0], [59.1, 41.0], [59.2, 41.0], [59.3, 41.0], [59.4, 41.0], [59.5, 41.0], [59.6, 41.0], [59.7, 41.0], [59.8, 41.0], [59.9, 41.0], [60.0, 41.0], [60.1, 41.0], [60.2, 41.0], [60.3, 42.0], [60.4, 42.0], [60.5, 42.0], [60.6, 42.0], [60.7, 42.0], [60.8, 42.0], [60.9, 42.0], [61.0, 42.0], [61.1, 42.0], [61.2, 42.0], [61.3, 42.0], [61.4, 42.0], [61.5, 42.0], [61.6, 42.0], [61.7, 42.0], [61.8, 42.0], [61.9, 42.0], [62.0, 42.0], [62.1, 42.0], [62.2, 42.0], [62.3, 42.0], [62.4, 42.0], [62.5, 42.0], [62.6, 42.0], [62.7, 42.0], [62.8, 42.0], [62.9, 42.0], [63.0, 42.0], [63.1, 42.0], [63.2, 42.0], [63.3, 42.0], [63.4, 42.0], [63.5, 42.0], [63.6, 42.0], [63.7, 42.0], [63.8, 42.0], [63.9, 42.0], [64.0, 42.0], [64.1, 42.0], [64.2, 42.0], [64.3, 42.0], [64.4, 42.0], [64.5, 42.0], [64.6, 42.0], [64.7, 42.0], [64.8, 42.0], [64.9, 42.0], [65.0, 42.0], [65.1, 42.0], [65.2, 42.0], [65.3, 42.0], [65.4, 42.0], [65.5, 42.0], [65.6, 42.0], [65.7, 42.0], [65.8, 42.0], [65.9, 42.0], [66.0, 42.0], [66.1, 42.0], [66.2, 42.0], [66.3, 42.0], [66.4, 42.0], [66.5, 42.0], [66.6, 42.0], [66.7, 42.0], [66.8, 42.0], [66.9, 42.0], [67.0, 43.0], [67.1, 43.0], [67.2, 43.0], [67.3, 43.0], [67.4, 43.0], [67.5, 43.0], [67.6, 43.0], [67.7, 43.0], [67.8, 43.0], [67.9, 43.0], [68.0, 43.0], [68.1, 43.0], [68.2, 43.0], [68.3, 43.0], [68.4, 43.0], [68.5, 43.0], [68.6, 43.0], [68.7, 43.0], [68.8, 43.0], [68.9, 43.0], [69.0, 43.0], [69.1, 43.0], [69.2, 43.0], [69.3, 43.0], [69.4, 43.0], [69.5, 43.0], [69.6, 43.0], [69.7, 43.0], [69.8, 44.0], [69.9, 44.0], [70.0, 44.0], [70.1, 44.0], [70.2, 44.0], [70.3, 44.0], [70.4, 44.0], [70.5, 44.0], [70.6, 44.0], [70.7, 44.0], [70.8, 44.0], [70.9, 44.0], [71.0, 45.0], [71.1, 45.0], [71.2, 45.0], [71.3, 45.0], [71.4, 45.0], [71.5, 45.0], [71.6, 45.0], [71.7, 46.0], [71.8, 46.0], [71.9, 46.0], [72.0, 49.0], [72.1, 86.0], [72.2, 149.0], [72.3, 394.0], [72.4, 395.0], [72.5, 396.0], [72.6, 396.0], [72.7, 397.0], [72.8, 397.0], [72.9, 397.0], [73.0, 397.0], [73.1, 398.0], [73.2, 398.0], [73.3, 398.0], [73.4, 398.0], [73.5, 399.0], [73.6, 399.0], [73.7, 399.0], [73.8, 399.0], [73.9, 399.0], [74.0, 399.0], [74.1, 400.0], [74.2, 400.0], [74.3, 400.0], [74.4, 400.0], [74.5, 400.0], [74.6, 401.0], [74.7, 401.0], [74.8, 401.0], [74.9, 401.0], [75.0, 401.0], [75.1, 401.0], [75.2, 402.0], [75.3, 402.0], [75.4, 402.0], [75.5, 402.0], [75.6, 402.0], [75.7, 402.0], [75.8, 403.0], [75.9, 403.0], [76.0, 403.0], [76.1, 403.0], [76.2, 403.0], [76.3, 403.0], [76.4, 404.0], [76.5, 404.0], [76.6, 404.0], [76.7, 404.0], [76.8, 404.0], [76.9, 404.0], [77.0, 404.0], [77.1, 405.0], [77.2, 405.0], [77.3, 405.0], [77.4, 405.0], [77.5, 405.0], [77.6, 405.0], [77.7, 405.0], [77.8, 406.0], [77.9, 406.0], [78.0, 406.0], [78.1, 406.0], [78.2, 406.0], [78.3, 406.0], [78.4, 406.0], [78.5, 407.0], [78.6, 407.0], [78.7, 407.0], [78.8, 407.0], [78.9, 407.0], [79.0, 407.0], [79.1, 407.0], [79.2, 407.0], [79.3, 408.0], [79.4, 408.0], [79.5, 408.0], [79.6, 408.0], [79.7, 408.0], [79.8, 408.0], [79.9, 408.0], [80.0, 408.0], [80.1, 408.0], [80.2, 408.0], [80.3, 409.0], [80.4, 409.0], [80.5, 409.0], [80.6, 409.0], [80.7, 409.0], [80.8, 409.0], [80.9, 409.0], [81.0, 409.0], [81.1, 410.0], [81.2, 410.0], [81.3, 410.0], [81.4, 410.0], [81.5, 410.0], [81.6, 410.0], [81.7, 410.0], [81.8, 411.0], [81.9, 411.0], [82.0, 411.0], [82.1, 411.0], [82.2, 411.0], [82.3, 411.0], [82.4, 411.0], [82.5, 412.0], [82.6, 412.0], [82.7, 412.0], [82.8, 412.0], [82.9, 412.0], [83.0, 412.0], [83.1, 412.0], [83.2, 413.0], [83.3, 413.0], [83.4, 413.0], [83.5, 413.0], [83.6, 413.0], [83.7, 413.0], [83.8, 413.0], [83.9, 413.0], [84.0, 414.0], [84.1, 414.0], [84.2, 414.0], [84.3, 414.0], [84.4, 414.0], [84.5, 414.0], [84.6, 414.0], [84.7, 414.0], [84.8, 415.0], [84.9, 415.0], [85.0, 415.0], [85.1, 415.0], [85.2, 415.0], [85.3, 415.0], [85.4, 415.0], [85.5, 416.0], [85.6, 416.0], [85.7, 416.0], [85.8, 416.0], [85.9, 416.0], [86.0, 416.0], [86.1, 416.0], [86.2, 417.0], [86.3, 417.0], [86.4, 417.0], [86.5, 417.0], [86.6, 417.0], [86.7, 417.0], [86.8, 417.0], [86.9, 417.0], [87.0, 418.0], [87.1, 418.0], [87.2, 418.0], [87.3, 418.0], [87.4, 418.0], [87.5, 418.0], [87.6, 418.0], [87.7, 418.0], [87.8, 419.0], [87.9, 419.0], [88.0, 419.0], [88.1, 419.0], [88.2, 419.0], [88.3, 419.0], [88.4, 419.0], [88.5, 419.0], [88.6, 420.0], [88.7, 420.0], [88.8, 420.0], [88.9, 420.0], [89.0, 420.0], [89.1, 420.0], [89.2, 420.0], [89.3, 420.0], [89.4, 421.0], [89.5, 421.0], [89.6, 421.0], [89.7, 421.0], [89.8, 421.0], [89.9, 421.0], [90.0, 421.0], [90.1, 421.0], [90.2, 422.0], [90.3, 422.0], [90.4, 422.0], [90.5, 422.0], [90.6, 422.0], [90.7, 422.0], [90.8, 422.0], [90.9, 422.0], [91.0, 423.0], [91.1, 423.0], [91.2, 423.0], [91.3, 423.0], [91.4, 423.0], [91.5, 423.0], [91.6, 423.0], [91.7, 423.0], [91.8, 423.0], [91.9, 424.0], [92.0, 424.0], [92.1, 424.0], [92.2, 424.0], [92.3, 424.0], [92.4, 424.0], [92.5, 424.0], [92.6, 424.0], [92.7, 424.0], [92.8, 425.0], [92.9, 425.0], [93.0, 425.0], [93.1, 425.0], [93.2, 425.0], [93.3, 425.0], [93.4, 425.0], [93.5, 425.0], [93.6, 425.0], [93.7, 426.0], [93.8, 426.0], [93.9, 426.0], [94.0, 426.0], [94.1, 426.0], [94.2, 426.0], [94.3, 426.0], [94.4, 426.0], [94.5, 426.0], [94.6, 426.0], [94.7, 426.0], [94.8, 427.0], [94.9, 427.0], [95.0, 427.0], [95.1, 427.0], [95.2, 427.0], [95.3, 427.0], [95.4, 427.0], [95.5, 428.0], [95.6, 428.0], [95.7, 428.0], [95.8, 428.0], [95.9, 428.0], [96.0, 429.0], [96.1, 429.0], [96.2, 429.0], [96.3, 429.0], [96.4, 429.0], [96.5, 429.0], [96.6, 429.0], [96.7, 430.0], [96.8, 430.0], [96.9, 430.0], [97.0, 430.0], [97.1, 430.0], [97.2, 431.0], [97.3, 431.0], [97.4, 432.0], [97.5, 432.0], [97.6, 432.0], [97.7, 432.0], [97.8, 433.0], [97.9, 433.0], [98.0, 433.0], [98.1, 433.0], [98.2, 434.0], [98.3, 434.0], [98.4, 434.0], [98.5, 435.0], [98.6, 435.0], [98.7, 436.0], [98.8, 436.0], [98.9, 436.0], [99.0, 436.0], [99.1, 437.0], [99.2, 437.0], [99.3, 438.0], [99.4, 440.0], [99.5, 442.0], [99.6, 444.0], [99.7, 448.0], [99.8, 455.0], [99.9, 457.0], [100.0, 584.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "maxY": 27352.0, "series": [{"data": [[0.0, 27224.0], [100.0, 78.0], [200.0, 17.0], [400.0, 10500.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[0.0, 27352.0], [300.0, 4593.0], [100.0, 883.0], [200.0, 4990.0], [400.0, 168.0], [500.0, 8.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[0.0, 27239.0], [300.0, 4611.0], [100.0, 771.0], [400.0, 693.0], [200.0, 4461.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[0.0, 27349.0], [300.0, 662.0], [100.0, 25.0], [400.0, 9840.0], [200.0, 12.0], [500.0, 14.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 151468.0, "series": [{"data": [[0.0, 151468.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 22.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.69619982E12, "maxY": 272.20458298190886, "series": [{"data": [[1.69619982E12, 25.0], [1.69619994E12, 35.46908056213222], [1.69619988E12, 272.20458298190886]], "isOverall": false, "label": "SpikeTest - 1 pico", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69619994E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.0, "maxY": 423.8848571428561, "series": [{"data": [[33.0, 44.0], [32.0, 45.0], [35.0, 44.0], [34.0, 44.0], [37.0, 44.0], [36.0, 44.0], [39.0, 44.0], [38.0, 43.0], [41.0, 44.0], [40.0, 44.0], [43.0, 44.0], [42.0, 44.0], [45.0, 44.0], [44.0, 44.0], [47.0, 44.0], [46.0, 44.0], [49.0, 44.0], [48.0, 44.0], [50.0, 42.73864212738204], [51.0, 44.0], [53.0, 44.0], [52.0, 44.0], [55.0, 44.0], [54.0, 44.0], [57.0, 43.0], [56.0, 44.0], [59.0, 44.0], [58.0, 44.0], [61.0, 44.0], [60.0, 44.0], [25.0, 21.457513914656847], [26.0, 45.0], [27.0, 45.0], [28.0, 44.0], [29.0, 44.0], [30.0, 45.0], [503.0, 86.0], [509.0, 86.0], [508.0, 86.0], [506.0, 86.0], [505.0, 86.0], [504.0, 86.0], [502.0, 87.0], [501.0, 86.0], [500.0, 423.8848571428561], [31.0, 45.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[166.11964885375193, 140.98730796689452]], "isOverall": false, "label": "DELETE-Aggregated", "isController": false}, {"data": [[7.0, 23.0], [25.0, 15.973783603643618], [35.0, 8.0], [50.0, 30.517985611510845], [51.0, 173.0], [53.0, 172.0], [52.0, 173.0], [55.0, 97.5], [54.0, 172.0], [57.0, 96.0], [56.0, 96.5], [59.0, 95.5], [58.0, 95.5], [61.0, 94.5], [60.0, 94.5], [63.0, 93.0], [62.0, 93.5], [67.0, 91.5], [66.0, 91.5], [65.0, 92.0], [64.0, 93.0], [71.0, 89.0], [70.0, 89.5], [69.0, 90.0], [68.0, 91.0], [74.0, 87.0], [73.0, 88.0], [72.0, 88.5], [75.0, 162.0], [79.0, 160.0], [78.0, 160.0], [77.0, 161.0], [76.0, 161.0], [83.0, 158.0], [82.0, 159.0], [81.0, 159.0], [80.0, 160.0], [87.0, 158.0], [86.0, 157.0], [85.0, 158.0], [84.0, 158.0], [91.0, 157.0], [90.0, 157.0], [89.0, 157.0], [88.0, 158.0], [95.0, 155.0], [94.0, 155.0], [93.0, 155.0], [92.0, 156.0], [99.0, 153.0], [98.0, 154.0], [97.0, 154.0], [96.0, 154.0], [103.0, 152.0], [102.0, 151.0], [101.0, 152.0], [100.0, 153.0], [107.0, 149.0], [106.0, 150.0], [105.0, 150.0], [104.0, 151.0], [111.0, 147.0], [110.0, 148.0], [109.0, 149.0], [108.0, 149.0], [115.0, 146.0], [114.0, 147.0], [113.0, 147.0], [112.0, 147.0], [119.0, 144.0], [118.0, 145.0], [117.0, 145.0], [116.0, 145.0], [500.0, 290.10409523809403]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[165.5464547033747, 97.3128915091865]], "isOverall": false, "label": "POST-Aggregated", "isController": false}, {"data": [[25.0, 14.756734693877606], [50.0, 29.92427536231886], [123.0, 145.0], [122.0, 144.0], [121.0, 143.0], [120.0, 143.0], [127.0, 147.0], [126.0, 146.0], [125.0, 146.0], [124.0, 145.0], [135.0, 152.0], [134.0, 151.0], [133.0, 151.0], [132.0, 150.0], [131.0, 149.0], [130.0, 149.0], [129.0, 149.0], [128.0, 148.0], [143.0, 156.0], [142.0, 155.0], [141.0, 156.0], [140.0, 155.0], [139.0, 154.0], [138.0, 153.0], [137.0, 153.0], [136.0, 152.0], [151.0, 161.0], [150.0, 161.0], [149.0, 160.0], [148.0, 159.0], [147.0, 159.0], [146.0, 158.0], [145.0, 158.0], [144.0, 157.0], [159.0, 165.0], [158.0, 165.0], [157.0, 164.0], [156.0, 164.0], [155.0, 163.0], [154.0, 163.0], [153.0, 162.0], [152.0, 161.0], [167.0, 171.0], [166.0, 170.0], [165.0, 169.0], [164.0, 168.0], [163.0, 168.0], [162.0, 167.0], [161.0, 167.0], [160.0, 166.0], [175.0, 175.0], [174.0, 175.0], [173.0, 174.0], [172.0, 173.0], [171.0, 173.0], [170.0, 172.0], [169.0, 172.0], [168.0, 171.0], [183.0, 180.0], [182.0, 179.0], [181.0, 179.0], [180.0, 179.0], [179.0, 178.0], [178.0, 177.0], [177.0, 176.0], [176.0, 175.0], [191.0, 183.0], [190.0, 183.0], [189.0, 182.0], [188.0, 181.0], [187.0, 180.0], [186.0, 182.0], [185.0, 181.0], [184.0, 180.0], [199.0, 188.0], [198.0, 188.0], [197.0, 187.0], [196.0, 186.0], [195.0, 185.0], [194.0, 185.0], [193.0, 184.0], [192.0, 184.0], [207.0, 193.0], [206.0, 192.0], [205.0, 191.0], [204.0, 191.0], [203.0, 190.0], [202.0, 190.0], [201.0, 189.0], [200.0, 188.0], [215.0, 198.0], [214.0, 197.0], [213.0, 196.0], [212.0, 196.0], [211.0, 196.0], [210.0, 195.0], [209.0, 194.0], [208.0, 193.0], [223.0, 203.0], [222.0, 202.0], [221.0, 201.0], [220.0, 202.0], [219.0, 201.0], [218.0, 200.0], [217.0, 199.0], [216.0, 199.0], [231.0, 208.0], [230.0, 207.0], [229.0, 207.0], [228.0, 206.0], [227.0, 206.0], [226.0, 205.0], [225.0, 205.0], [224.0, 204.0], [239.0, 213.0], [238.0, 212.0], [237.0, 211.0], [236.0, 211.0], [235.0, 211.0], [234.0, 210.0], [233.0, 210.0], [232.0, 209.0], [247.0, 217.0], [246.0, 216.0], [245.0, 215.0], [244.0, 216.0], [243.0, 215.0], [242.0, 214.0], [241.0, 213.0], [240.0, 214.0], [255.0, 222.0], [254.0, 221.0], [253.0, 220.0], [252.0, 220.0], [251.0, 220.0], [250.0, 219.0], [249.0, 219.0], [248.0, 218.0], [270.0, 231.0], [271.0, 231.0], [269.0, 231.0], [268.0, 230.0], [267.0, 229.0], [266.0, 228.0], [265.0, 228.0], [264.0, 228.0], [263.0, 227.0], [257.0, 222.0], [256.0, 223.0], [259.0, 224.0], [258.0, 223.0], [262.0, 226.0], [261.0, 225.0], [260.0, 225.0], [286.0, 240.0], [287.0, 240.0], [285.0, 239.0], [284.0, 239.0], [283.0, 238.0], [282.0, 237.0], [281.0, 237.0], [280.0, 237.0], [279.0, 236.0], [273.0, 233.0], [272.0, 232.0], [275.0, 234.0], [274.0, 233.0], [278.0, 235.0], [277.0, 234.0], [276.0, 234.0], [301.0, 245.0], [302.0, 246.0], [300.0, 246.0], [291.0, 243.0], [290.0, 242.0], [289.0, 241.0], [288.0, 241.0], [299.0, 247.0], [298.0, 245.5], [296.0, 246.0], [295.0, 245.0], [294.0, 244.0], [293.0, 243.0], [292.0, 243.0], [318.0, 256.0], [319.0, 257.0], [317.0, 256.0], [316.0, 255.0], [315.0, 254.0], [314.0, 253.0], [313.0, 253.0], [312.0, 252.0], [311.0, 251.0], [305.0, 248.0], [304.0, 247.5], [307.0, 249.0], [306.0, 248.0], [310.0, 251.0], [309.0, 250.0], [308.0, 250.0], [334.0, 265.0], [335.0, 265.0], [333.0, 264.0], [332.0, 264.0], [331.0, 263.0], [330.0, 262.0], [329.0, 263.0], [328.0, 262.0], [327.0, 261.0], [321.0, 258.0], [320.0, 257.0], [323.0, 257.0], [322.0, 257.0], [326.0, 260.0], [325.0, 260.0], [324.0, 260.0], [350.0, 273.0], [351.0, 274.0], [349.0, 273.0], [348.0, 272.0], [347.0, 271.0], [346.0, 272.0], [345.0, 271.0], [344.0, 270.0], [343.0, 270.0], [337.0, 266.0], [336.0, 266.0], [339.0, 268.0], [338.0, 267.0], [342.0, 269.0], [341.0, 268.0], [340.0, 268.0], [366.0, 281.0], [367.0, 282.0], [365.0, 281.0], [364.0, 280.0], [363.0, 280.0], [362.0, 280.0], [361.0, 279.0], [360.0, 278.0], [359.0, 278.0], [353.0, 275.0], [352.0, 274.0], [355.0, 276.0], [354.0, 275.0], [358.0, 277.0], [357.0, 276.0], [356.0, 276.0], [382.0, 292.0], [383.0, 292.0], [381.0, 290.0], [380.0, 289.0], [379.0, 288.0], [378.0, 288.0], [377.0, 288.0], [376.0, 287.0], [375.0, 286.0], [369.0, 283.0], [368.0, 283.0], [371.0, 284.0], [370.0, 283.0], [374.0, 285.0], [373.0, 286.0], [372.0, 285.0], [398.0, 302.0], [399.0, 302.0], [397.0, 301.0], [396.0, 300.0], [395.0, 300.0], [394.0, 299.0], [393.0, 298.0], [392.0, 297.0], [391.0, 298.0], [385.0, 294.0], [384.0, 293.0], [387.0, 294.0], [386.0, 295.0], [390.0, 297.0], [389.0, 296.0], [388.0, 295.0], [414.0, 309.0], [415.0, 310.0], [413.0, 309.0], [412.0, 308.0], [411.0, 308.0], [410.0, 309.0], [409.0, 308.0], [408.0, 307.0], [407.0, 306.0], [401.0, 303.0], [400.0, 302.0], [403.0, 305.0], [402.0, 304.0], [406.0, 306.0], [405.0, 305.0], [404.0, 305.0], [430.0, 319.0], [431.0, 319.0], [429.0, 319.0], [428.0, 318.0], [427.0, 317.0], [426.0, 317.0], [425.0, 316.0], [424.0, 315.0], [423.0, 315.0], [417.0, 312.0], [416.0, 311.0], [419.0, 312.0], [418.0, 312.0], [422.0, 314.0], [421.0, 314.0], [420.0, 313.0], [446.0, 328.0], [447.0, 328.0], [445.0, 328.0], [444.0, 327.0], [443.0, 326.0], [442.0, 326.0], [441.0, 325.0], [440.0, 324.0], [439.0, 324.0], [433.0, 321.0], [432.0, 320.0], [435.0, 321.0], [434.0, 322.0], [438.0, 324.0], [437.0, 323.0], [436.0, 322.0], [462.0, 338.0], [463.0, 338.0], [461.0, 337.0], [460.0, 336.0], [459.0, 335.0], [458.0, 335.0], [457.0, 335.0], [456.0, 334.0], [455.0, 333.0], [449.0, 330.0], [448.0, 329.0], [451.0, 330.0], [450.0, 331.0], [454.0, 333.0], [453.0, 332.0], [452.0, 331.0], [478.0, 351.0], [479.0, 352.0], [477.0, 350.0], [476.0, 350.0], [475.0, 350.0], [474.0, 349.0], [473.0, 348.0], [472.0, 347.0], [471.0, 347.0], [465.0, 340.0], [464.0, 338.0], [467.0, 343.0], [466.0, 342.0], [470.0, 346.0], [469.0, 345.0], [468.0, 343.0], [494.0, 360.0], [495.0, 361.0], [493.0, 359.0], [492.0, 359.0], [491.0, 359.0], [490.0, 358.0], [489.0, 357.0], [488.0, 356.0], [487.0, 356.0], [481.0, 353.0], [480.0, 352.0], [483.0, 354.0], [482.0, 353.0], [486.0, 356.0], [485.0, 355.0], [484.0, 354.0], [510.0, 369.0], [500.0, 301.24625161354265], [502.0, 365.0], [501.0, 365.0], [503.0, 375.5], [509.0, 376.5], [511.0, 370.0], [508.0, 368.0], [499.0, 363.0], [498.0, 362.0], [497.0, 362.0], [496.0, 362.0], [507.0, 368.0], [506.0, 367.0], [505.0, 367.0], [504.0, 366.0], [541.0, 386.0], [518.0, 379.0], [527.0, 377.0], [513.0, 371.0], [512.0, 371.0], [515.0, 372.0], [514.0, 371.0], [517.0, 374.0], [516.0, 373.0], [526.0, 377.0], [525.0, 377.0], [524.0, 378.0], [523.0, 377.0], [522.0, 376.0], [521.0, 376.0], [520.0, 375.0], [529.0, 382.0], [528.0, 378.0], [531.0, 379.0], [530.0, 380.0], [533.0, 381.0], [532.0, 380.0], [535.0, 383.0], [534.0, 382.0], [543.0, 387.0], [542.0, 386.0], [540.0, 385.0], [539.0, 385.0], [538.0, 384.0], [537.0, 383.0], [536.0, 383.0], [519.0, 374.0], [545.0, 387.0], [544.0, 386.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[164.27745863666482, 99.52884182660537]], "isOverall": false, "label": "GET-Aggregated", "isController": false}, {"data": [[540.0, 86.0], [543.0, 86.0], [529.0, 86.0], [528.0, 86.0], [531.0, 86.0], [530.0, 86.0], [533.0, 86.0], [532.0, 87.0], [542.0, 86.0], [541.0, 85.0], [539.0, 86.0], [538.0, 86.0], [537.0, 86.0], [536.0, 86.0], [527.0, 87.0], [513.0, 87.0], [512.0, 87.0], [515.0, 86.0], [514.0, 86.0], [517.0, 87.0], [516.0, 86.0], [519.0, 86.0], [518.0, 87.0], [526.0, 87.0], [525.0, 86.0], [524.0, 86.0], [523.0, 86.0], [522.0, 87.0], [521.0, 87.0], [520.0, 86.0], [2.0, 23.0], [535.0, 86.0], [534.0, 86.0], [546.0, 63.0], [545.0, 76.0], [544.0, 86.0], [3.0, 23.0], [4.0, 22.0], [5.0, 22.0], [6.0, 22.0], [8.0, 21.0], [9.0, 21.0], [10.0, 22.0], [11.0, 22.0], [12.0, 22.0], [13.0, 22.0], [14.0, 21.0], [15.0, 21.0], [16.0, 21.0], [17.0, 21.0], [18.0, 21.0], [19.0, 21.0], [20.0, 21.0], [21.0, 21.0], [22.0, 21.0], [23.0, 21.0], [24.0, 21.0], [25.0, 21.7856029684601], [51.0, 25.0], [50.0, 41.07049985553287], [53.0, 24.0], [52.0, 24.0], [54.0, 24.0], [61.0, 41.0], [63.0, 43.0], [62.0, 43.0], [67.0, 43.0], [66.0, 44.0], [65.0, 43.0], [64.0, 43.0], [71.0, 43.0], [70.0, 43.0], [69.0, 43.0], [68.0, 43.0], [74.0, 42.0], [73.0, 42.0], [72.0, 42.0], [121.0, 44.0], [205.0, 46.0], [1.0, 23.0], [380.0, 54.0], [511.0, 87.0], [510.0, 86.0], [507.0, 87.0], [500.0, 416.46276190476124]], "isOverall": false, "label": "PUT", "isController": false}, {"data": [[166.25331117091412, 138.2412801435292]], "isOverall": false, "label": "PUT-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 546.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 90396.56666666667, "minX": 1.69619982E12, "maxY": 3832827.466666667, "series": [{"data": [[1.69619982E12, 93337.18333333333], [1.69619994E12, 3832827.466666667], [1.69619988E12, 2916351.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69619982E12, 90396.56666666667], [1.69619994E12, 196369.31666666668], [1.69619988E12, 358809.3333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69619994E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 14.193018867924527, "minX": 1.69619982E12, "maxY": 232.030588907948, "series": [{"data": [[1.69619982E12, 22.414285714285676], [1.69619994E12, 29.788636955955297], [1.69619988E12, 232.030588907948]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[1.69619982E12, 15.145727699530488], [1.69619994E12, 23.119252498913504], [1.69619988E12, 158.3192213192217]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.69619982E12, 14.193018867924527], [1.69619994E12, 22.245141612200474], [1.69619988E12, 163.29600000000016]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.69619982E12, 22.841877934272308], [1.69619994E12, 29.468825770696096], [1.69619988E12, 227.19492129915832]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69619994E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69619982E12, "maxY": 227.19349469779914, "series": [{"data": [[1.69619982E12, 0.0], [1.69619994E12, 0.0], [1.69619988E12, 0.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[1.69619982E12, 15.14403755868544], [1.69619994E12, 23.118209474141775], [1.69619988E12, 158.3174258174264]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.69619982E12, 14.192264150943362], [1.69619994E12, 22.239128540304936], [1.69619988E12, 163.2917142857144]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.69619982E12, 22.841126760563377], [1.69619994E12, 29.46709386906816], [1.69619988E12, 227.19349469779914]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69619994E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69619982E12, "maxY": 0.04615384615384593, "series": [{"data": [[1.69619982E12, 0.0], [1.69619994E12, 0.0], [1.69619988E12, 0.0]], "isOverall": false, "label": "DELETE", "isController": false}, {"data": [[1.69619982E12, 0.04244131455399048], [1.69619994E12, 0.04615384615384593], [1.69619988E12, 0.04441504441504453]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.69619982E12, 0.0], [1.69619994E12, 0.0], [1.69619988E12, 0.0]], "isOverall": false, "label": "GET", "isController": false}, {"data": [[1.69619982E12, 0.0], [1.69619994E12, 0.0], [1.69619988E12, 0.0]], "isOverall": false, "label": "PUT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69619994E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.69619982E12, "maxY": 584.0, "series": [{"data": [[1.69619982E12, 584.0], [1.69619994E12, 222.0], [1.69619988E12, 464.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69619982E12, 22.0], [1.69619994E12, 22.0], [1.69619988E12, 425.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69619982E12, 24.0], [1.69619994E12, 25.0], [1.69619988E12, 433.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69619982E12, 22.0], [1.69619994E12, 22.0], [1.69619988E12, 427.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69619982E12, 4.0], [1.69619994E12, 9.0], [1.69619988E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69619982E12, 20.0], [1.69619994E12, 20.0], [1.69619988E12, 255.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69619994E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 19.0, "minX": 130.0, "maxY": 427.0, "series": [{"data": [[752.0, 19.0], [1087.0, 20.0], [1102.0, 20.0], [1098.0, 20.0], [1201.0, 416.0], [1169.0, 19.0], [1181.0, 394.0], [1173.0, 427.0], [1191.0, 421.0], [1198.0, 402.0], [1211.0, 402.0], [1188.0, 421.0], [1154.0, 20.0], [1275.0, 20.0], [1264.0, 40.0], [1249.0, 401.0], [1329.0, 414.0], [1294.0, 360.0], [1304.0, 416.0], [1322.0, 23.0], [1340.0, 28.0], [1300.0, 41.0], [1332.0, 20.0], [1402.0, 40.0], [1407.0, 20.0], [1377.0, 40.0], [1376.0, 20.0], [1396.0, 419.0], [1357.0, 352.0], [1372.0, 39.0], [1354.0, 40.0], [1351.0, 20.0], [1350.0, 20.0], [1345.0, 20.0], [1347.0, 20.0], [1375.0, 39.0], [1374.0, 40.0], [1373.0, 20.0], [1366.0, 40.0], [1363.0, 20.0], [1367.0, 40.0], [1369.0, 20.0], [1370.0, 20.0], [1384.0, 40.0], [1383.0, 20.0], [1380.0, 20.0], [1385.0, 39.0], [1387.0, 22.0], [1379.0, 40.0], [1358.0, 40.0], [1392.0, 19.0], [1460.0, 19.0], [1427.0, 21.0], [1428.0, 39.0], [1430.0, 40.0], [1431.0, 40.0], [1433.0, 39.0], [1434.0, 40.0], [1470.0, 19.0], [1435.0, 21.0], [1441.0, 20.0], [1453.0, 21.0], [1454.0, 355.5], [1448.0, 20.0], [1469.0, 19.0], [1437.0, 20.0], [1436.0, 20.0], [1416.0, 26.0], [1419.0, 40.0], [1409.0, 40.0], [1408.0, 40.0], [1457.0, 19.0], [1459.0, 359.0], [1423.0, 39.0], [1422.0, 40.0], [1462.0, 20.0], [1482.0, 416.0], [1502.0, 348.0], [1488.0, 351.5], [1480.0, 410.0], [1503.0, 347.0], [1475.0, 418.0], [1509.0, 402.0], [1508.0, 347.5], [1485.0, 399.0], [1510.0, 347.0], [1518.0, 402.0], [1489.0, 347.0], [1666.0, 42.0], [130.0, 21.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1666.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 130.0, "maxY": 391.0, "series": [{"data": [[752.0, 14.0], [1087.0, 14.0], [1102.0, 15.0], [1098.0, 16.0], [1201.0, 354.0], [1169.0, 14.0], [1181.0, 391.0], [1173.0, 367.0], [1191.0, 356.0], [1198.0, 350.0], [1211.0, 346.0], [1188.0, 356.0], [1154.0, 17.0], [1275.0, 14.0], [1264.0, 29.0], [1249.0, 342.0], [1329.0, 371.0], [1294.0, 331.5], [1304.0, 374.0], [1322.0, 20.0], [1340.0, 20.0], [1300.0, 34.0], [1332.0, 16.0], [1402.0, 29.0], [1407.0, 14.0], [1377.0, 31.0], [1376.0, 16.0], [1396.0, 327.5], [1357.0, 328.0], [1372.0, 32.0], [1354.0, 32.0], [1351.0, 16.0], [1350.0, 16.0], [1345.0, 16.0], [1347.0, 16.0], [1375.0, 31.0], [1374.0, 31.0], [1373.0, 16.0], [1366.0, 31.0], [1363.0, 16.0], [1367.0, 32.0], [1369.0, 16.0], [1370.0, 16.0], [1384.0, 31.0], [1383.0, 15.0], [1380.0, 15.0], [1385.0, 31.0], [1387.0, 20.0], [1379.0, 30.0], [1358.0, 32.0], [1392.0, 15.0], [1460.0, 14.0], [1427.0, 19.0], [1428.0, 28.0], [1430.0, 28.0], [1431.0, 28.0], [1433.0, 27.0], [1434.0, 29.0], [1470.0, 13.0], [1435.0, 19.0], [1441.0, 14.0], [1453.0, 18.0], [1454.0, 311.0], [1448.0, 13.0], [1469.0, 13.0], [1437.0, 14.0], [1436.0, 13.0], [1416.0, 20.0], [1419.0, 29.0], [1409.0, 29.0], [1408.0, 29.0], [1457.0, 14.0], [1459.0, 266.0], [1423.0, 28.0], [1422.0, 28.0], [1462.0, 14.0], [1482.0, 233.0], [1502.0, 243.0], [1488.0, 305.0], [1480.0, 247.0], [1503.0, 240.0], [1475.0, 278.0], [1509.0, 234.0], [1508.0, 242.0], [1485.0, 292.0], [1510.0, 280.0], [1518.0, 232.0], [1489.0, 328.0], [1666.0, 40.0], [130.0, 19.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1666.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 354.9166666666667, "minX": 1.69619982E12, "maxY": 1403.4333333333334, "series": [{"data": [[1.69619982E12, 354.9166666666667], [1.69619994E12, 766.4833333333333], [1.69619988E12, 1403.4333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69619994E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 88.66666666666667, "minX": 1.69619982E12, "maxY": 700.4833333333333, "series": [{"data": [[1.69619982E12, 177.08333333333334], [1.69619994E12, 383.71666666666664], [1.69619988E12, 700.4833333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69619982E12, 88.75], [1.69619994E12, 191.75], [1.69619988E12, 352.73333333333335]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.69619982E12, 88.66666666666667], [1.69619994E12, 191.85], [1.69619988E12, 349.8]], "isOverall": false, "label": "204", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69619994E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 88.33333333333333, "minX": 1.69619982E12, "maxY": 352.73333333333335, "series": [{"data": [[1.69619982E12, 88.66666666666667], [1.69619994E12, 191.85], [1.69619988E12, 349.8]], "isOverall": false, "label": "DELETE-success", "isController": false}, {"data": [[1.69619982E12, 88.75], [1.69619994E12, 191.75], [1.69619988E12, 352.73333333333335]], "isOverall": false, "label": "POST-success", "isController": false}, {"data": [[1.69619982E12, 88.33333333333333], [1.69619994E12, 191.25], [1.69619988E12, 350.0]], "isOverall": false, "label": "GET-success", "isController": false}, {"data": [[1.69619982E12, 88.75], [1.69619994E12, 192.46666666666667], [1.69619988E12, 350.48333333333335]], "isOverall": false, "label": "PUT-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69619994E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 354.5, "minX": 1.69619982E12, "maxY": 1403.0166666666667, "series": [{"data": [[1.69619982E12, 354.5], [1.69619994E12, 767.3166666666667], [1.69619988E12, 1403.0166666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69619994E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

